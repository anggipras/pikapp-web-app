[{"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\index.js":"1","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Button\\PikaButton.js":"2","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js":"3","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\MainNavigation.js":"4","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\AuthLayout.js":"5","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js":"6","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProductLayout.js":"7","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js":"8","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Product\\ProductView.js":"9","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Auth\\FormView.js":"10","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Main\\JumbotronView.js":"11","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\PikaModal.js":"12","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\CartLayout.js":"13","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Cart\\CartView.js":"14","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\CartModal.js":"15","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\DetailNavigation.js":"16","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StatusLayout.js":"17","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Status\\StatusView.js":"18","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StoreLayout.js":"19","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Store\\StoreView.js":"20","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProfileLayout.js":"21","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Profile\\ProfileView.js":"22"},{"size":1651,"mtime":1609615276670,"results":"23","hashOfConfig":"24"},{"size":298,"mtime":1607928483171,"results":"25","hashOfConfig":"24"},{"size":415,"mtime":1607928496232,"results":"26","hashOfConfig":"24"},{"size":1089,"mtime":1609093677012,"results":"27","hashOfConfig":"24"},{"size":1287,"mtime":1608401366536,"results":"28","hashOfConfig":"24"},{"size":592,"mtime":1609340189273,"results":"29","hashOfConfig":"24"},{"size":657,"mtime":1609339821573,"results":"30","hashOfConfig":"24"},{"size":80,"mtime":1607920097360,"results":"31","hashOfConfig":"24"},{"size":15208,"mtime":1609615352812,"results":"32","hashOfConfig":"24"},{"size":10676,"mtime":1609384617091,"results":"33","hashOfConfig":"24"},{"size":831,"mtime":1609339794681,"results":"34","hashOfConfig":"24"},{"size":4960,"mtime":1609383782898,"results":"35","hashOfConfig":"24"},{"size":846,"mtime":1609339827764,"results":"36","hashOfConfig":"24"},{"size":15882,"mtime":1609650569049,"results":"37","hashOfConfig":"24"},{"size":2128,"mtime":1609339518011,"results":"38","hashOfConfig":"24"},{"size":803,"mtime":1609005769733,"results":"39","hashOfConfig":"24"},{"size":865,"mtime":1609339814936,"results":"40","hashOfConfig":"24"},{"size":25071,"mtime":1609384134466,"results":"41","hashOfConfig":"24"},{"size":650,"mtime":1609339811095,"results":"42","hashOfConfig":"24"},{"size":6138,"mtime":1609384128737,"results":"43","hashOfConfig":"24"},{"size":660,"mtime":1609339818536,"results":"44","hashOfConfig":"24"},{"size":5036,"mtime":1609410273922,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5fne88",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\index.js",[],["94","95"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Button\\PikaButton.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\MainNavigation.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\AuthLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js",["96","97"],"export const address = \"https://dev-api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nexport const googleKey = googleKeyProd;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProductLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Product\\ProductView.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Auth\\FormView.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Main\\JumbotronView.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\PikaModal.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\CartLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Cart\\CartView.js",["98","99","100"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\CartModal.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\DetailNavigation.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StatusLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Status\\StatusView.js",["101","102","103","104"],"import React from \"react\";\r\nimport { Row, Col, Nav, Card, Modal } from \"react-bootstrap\";\r\nimport unpaidIcon from \"../../Asset/Icon/unpaid_status.png\";\r\nimport unpaidActiveIcon from \"../../Asset/Icon/unpaid_active_status.png\";\r\nimport packIcon from \"../../Asset/Icon/pack_status.png\";\r\nimport packActiveIcon from \"../../Asset/Icon/pack_active_status.png\";\r\nimport sendIcon from \"../../Asset/Icon/send_status.png\";\r\nimport sendActiveIcon from \"../../Asset/Icon/send_active_status.png\";\r\nimport reviewIcon from \"../../Asset/Icon/review_status.png\";\r\nimport reviewActiveIcon from \"../../Asset/Icon/review_active_status.png\";\r\nimport placeholderIcon from \"../../Asset/Icon/placeholder_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport categoryFoodIcon from \"../../Asset/Icon/category_food_icon.png\";\r\nimport pickupStatusIcon from \"../../Asset/Icon/pickup_status_icon.png\";\r\nimport cashierStatusIcon from \"../../Asset/Icon/cashier_icon.png\"\r\nimport ovoIcon from \"../../Asset/Icon/ovo_icon.png\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport class StatusView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    activeTab: 1,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n        biz_type: \"\",\r\n        payment: \"\",\r\n        transactionId: \"\",\r\n        transactionTime: \"\",\r\n      },\r\n    ],\r\n    currentModal: {\r\n      transactionId: \"\",\r\n      transactionTime:\"\",\r\n      storeName: \"Store\",\r\n      storeLocation: \"Location\",\r\n      storeDistance: \"Distance\",\r\n      status: \"Status\",\r\n      payment: \"Cash\",\r\n      biz_type: \"\",\r\n      food: [\r\n        {\r\n          productId: \"\",\r\n          name: \"\",\r\n          price: 0,\r\n          image: \"\",\r\n          note: \"\",\r\n          quantity: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n  handleDetail(transId) {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/\" + transId + \"/txn-detail/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var resultModal = {...this.currentModal}\r\n        resultModal.transactionId = results.transaction_id\r\n        resultModal.transactionTime = results.transaction_time\r\n        resultModal.storeName = results.merchant_name\r\n        resultModal.storeDistance = \"\"\r\n        resultModal.storeLocation = \"\"\r\n        resultModal.status = results.status\r\n        resultModal.biz_type = results.biz_type\r\n        resultModal.payment = results.payment_with\r\n        resultModal.food = []\r\n        results.detail_products.forEach((product) => {\r\n          resultModal.food.push({\r\n            name: product.product_name,\r\n            price: product.price,\r\n            quantity: product.qty,\r\n            image: product.image,\r\n            note: product.notes\r\n          })\r\n        })\r\n        this.setState({\r\n          currentModal: resultModal\r\n        })\r\n      })\r\n      .catch((err) => {\r\n      });\r\n      \r\n    this.setModal(true);\r\n  }\r\n\r\n  handleSelect(tabIndex) {\r\n    this.setState({ activeTab: tabIndex });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/txn-history/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = {...this.state}\r\n        stateData.data.pop()\r\n        results.forEach((result) => {\r\n          stateData.data.push({\r\n            title: result.merchant_name,\r\n            distance: \"\",\r\n            quantity: result.total_product,\r\n            status: result.status,\r\n            biz_type: result.biz_type,\r\n            payment: result.payment_with,\r\n            transactionId: result.transaction_id,\r\n            transactionTime: result.transaction_time,\r\n          })\r\n        })\r\n        this.setState({data: stateData.data});\r\n      })\r\n      .catch((err) => {\r\n      });\r\n    // var state = { ...this.state };\r\n    // state.data.pop();\r\n    // state.data.push({\r\n    //   title: \"Food1\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food4\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food2\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"pick\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food3\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"send\",\r\n    // });\r\n    // this.setState({ data: state.data });\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let modalList = this.state.currentModal.food;\r\n\r\n    let modalListView = modalList.map((data) => {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={placeholderIcon} class=\"statusFoodIcon\" alt=\"food icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodname\">{data.name}</p>\r\n                <p class=\"statusFoodPrice\">\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(data.price)}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodQuantity\">{data.quantity}x</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p class=\"statusFoodNote\">Catatan: {data.note}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n    let currentTotal = 0;\r\n    modalList.forEach((data) => {\r\n      currentTotal = currentTotal + data.price * data.quantity;\r\n    });\r\n    if (this.state.showModal === true) {\r\n      let payImage;\r\n      let payLabel;\r\n      if(this.state.currentModal.payment === \"PAY_BY_CASHIER\") {\r\n        payImage = cashierStatusIcon;\r\n        payLabel = \"Cashier\"\r\n      } else if(this.state.currentModal.payment === \"WALLET\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Cash\"\r\n      } else if(this.state.currentModal.payment === \"VA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Virtual\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_OVO\") {\r\n        payImage = ovoIcon;\r\n        payLabel = \"OVO\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_DANA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"DANA\"\r\n      } \r\n      modal = (\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p class=\"statusNoteLabel\">No Pesanan.</p>\r\n              <p class=\"statusNoteHeader\">{this.state.currentModal.transactionId}</p>\r\n              <p class=\"statusNoteLabel\">{this.state.currentModal.transactionTime}</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={categoryFoodIcon} class=\"statusStoreIcon\" alt=\"category icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusStoreName\">\r\n                  {this.state.currentModal.storeName}\r\n                </p>\r\n                <p class=\"statusStoreLabel\">store location</p>\r\n                <p class=\"statusStoreLocation\">\r\n                  {this.state.currentModal.storeLocation}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={pickupStatusIcon} class=\"statusStoreStatusIcon\"  alt=\"pickup status\"/>\r\n              </Col>\r\n              <Col>\r\n                <span class=\"statusStoreLabel\">status: </span>\r\n                <span class=\"statusStoreStatus\">\r\n                  {this.state.currentModal.status}\r\n                </span>\r\n                <span class=\"statusStoreDistance\">\r\n                  {this.state.currentModal.storeDistance}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStorePaymentLabel\">Metode Pembayaran</p>\r\n                <img src={payImage} class=\"statusFoodIcon\" alt=\"status icon\"></img>\r\n                <span class=\"statusStorePayment\">\r\n                      {payLabel}\r\n                    </span>\r\n              </Col>\r\n            </Row>\r\n            {modalListView}\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStoreTotal\">Total Pembayaran</p>\r\n              </Col>\r\n              <Col>\r\n                {Intl.NumberFormat(\"id-ID\", {\r\n                  style: \"currency\",\r\n                  currency: \"IDR\",\r\n                }).format(currentTotal)}\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    let notPaidImage;\r\n    let contentView;\r\n\r\n    let currentState = this.state.activeTab;\r\n    if (currentState === 1) {\r\n      notPaidImage = unpaidActiveIcon;\r\n      contentView = this.state.data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = cashierStatusIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"OPEN\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      notPaidImage = unpaidIcon;\r\n    }\r\n\r\n    let packImage;\r\n    if (currentState === 2) {\r\n      packImage = packActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"PAID\" || value.status === \"MERCHANT_CONFIRM\" || value.status === \"CUSTOMER_ACCEPTED\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      packImage = packIcon;\r\n    }\r\n\r\n    let sendImage;\r\n    if (currentState === 3) {\r\n      sendImage = sendActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"DELIVER\" || value.status === \"ON_PROCESS\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt =\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      sendImage = sendIcon;\r\n    }\r\n\r\n    let reviewImage;\r\n    if (currentState === 4) {\r\n      reviewImage = reviewActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"CLOSE\" || value.status === \"FINALIZE\") {\r\n          let bizImage;\r\n          let bizLabel;\r\n          let payImage;\r\n          let payLabel;\r\n          if(value.payment === \"PAY_BY_CASHIER\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cashier\"\r\n          } else if(value.payment === \"WALLET\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cash\"\r\n          } else if(value.payment === \"VA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Virtual\"\r\n          } else if(value.payment === \"WALLET_OVO\") {\r\n            payImage = ovoIcon;\r\n            payLabel = \"OVO\"\r\n          } else if(value.payment === \"WALLET_DANA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"DANA\"\r\n          } \r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt =\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt = \"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      reviewImage = reviewIcon;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav variant=\"tabs\" defaultActiveKey={\"not-paid\"}>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              eventKey={\"not-paid\"}\r\n              onClick={() => this.handleSelect(1)}\r\n            >\r\n              <Row>\r\n                <img\r\n                  src={notPaidImage}\r\n                  alt={\"unpaid\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Belum Bayar</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"pack\"} onClick={() => this.handleSelect(2)}>\r\n              <Row>\r\n                <img src={packImage} alt={\"pack\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Dikemas</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"send\"} onClick={() => this.handleSelect(3)}>\r\n              <Row>\r\n                <img src={sendImage} alt={\"send\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Siap / Dikirim</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"review\"} onClick={() => this.handleSelect(4)}>\r\n              <Row>\r\n                <img\r\n                  src={reviewImage}\r\n                  alt={\"review\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Beri Penilaian</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {contentView}\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StoreLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Store\\StoreView.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProfileLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Profile\\ProfileView.js",["105"],"import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport axios from \"axios\";\r\nimport { address, clientId, jwtSecret } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Cookies from \"js-cookie\";\r\nimport {secret} from \"../../Asset/Constant/APIConstant\"\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\"\r\n\r\nexport class ProfileView extends React.Component {\r\n  state = {\r\n      name: \"Name\",\r\n      phone: \"080808\",\r\n      email: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    axios(address + \"home/v1/customer-info\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        let data = res.data.results\r\n        this.setState({name: data.full_name})\r\n        this.setState({phone: data.phone_no})\r\n        this.setState({email: data.email})\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response.data.err_message)\r\n      });\r\n  }\r\n\r\n  handleLogout() {\r\n    var auth = {\r\n        isLogged: false,\r\n        token: \"\",\r\n        new_event: true,\r\n        recommendation_status: false,\r\n        email: \"\",\r\n      };\r\n      if(Cookies.get(\"auth\") !== undefined) {\r\n        auth = JSON.parse(Cookies.get(\"auth\"))\r\n      }\r\n      if(auth.isLogged === false) {\r\n        var lastLink = { value: window.location.href}\r\n        Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n        window.location.href = \"/login\"\r\n      }\r\n      try {\r\n        var decodedJWT = jwt.decode(auth.token)\r\n        var sub = JSON.parse(decodedJWT.sub)\r\n\r\n        let uuid = uuidV4();\r\n        const date = new Date().toISOString();\r\n        uuid = uuid.replaceAll(\"-\", \"\");\r\n        let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n        Axios(address + \"/auth/exit\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"x-signature\": signature,\r\n            \"x-session-id\": sub.session_id,\r\n          },\r\n          method: \"GET\",\r\n        })\r\n        .then((res) => {\r\n            alert(\"Logout berhasil.\")\r\n            localStorage.removeItem(\"cart\")\r\n            Cookies.remove(\"auth\")\r\n            auth = null;\r\n            window.location.href = \"/login\"\r\n        })\r\n        .catch((err) => {\r\n            alert(err.response.data.err_message)\r\n        });\r\n      } catch(err) {\r\n        alert(err.message)\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={0} md={4}/>\r\n                <Col xs={4} md={2}>\r\n                    <span class=\"profileLabel\">Nama</span>\r\n                </Col>\r\n                <Col>\r\n                    <span class=\"profileLabel\">: </span>\r\n                    <span class=\"profileContent\">{this.state.name}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={0} md={4}/>\r\n                <Col xs={4} md={2}>\r\n                    <span class=\"profileLabel\">Telefon</span>\r\n                </Col>\r\n                <Col>\r\n                    <span class=\"profileLabel\">: </span>\r\n                    <span class=\"profileContent\">{this.state.phone}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={0} md={4}/>\r\n                <Col xs={4} md={2}>\r\n                    <span class=\"profileLabel\">Email</span>\r\n                </Col>\r\n                <Col>\r\n                    <span class=\"profileLabel\">: </span>\r\n                    <span class=\"profileContent\">{this.state.email}</span>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={0} md={4}/>\r\n                <Col>\r\n                    <PikaButton\r\n                        title=\"Logout\"\r\n                        buttonStyle=\"primaryPika\"\r\n                        handleClick={() => this.handleLogout()}\r\n                    />\r\n                </Col>\r\n                <Col xs={3} md={4}/>\r\n            </Row>\r\n        </>\r\n    )\r\n  }\r\n}\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":5,"nodeType":"112","messageId":"113","endLine":4,"endColumn":15},{"ruleId":"110","severity":1,"message":"114","line":8,"column":5,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":85,"column":52,"nodeType":"117","messageId":"118","endLine":85,"endColumn":54},{"ruleId":"115","severity":1,"message":"116","line":269,"column":41,"nodeType":"117","messageId":"118","endLine":269,"endColumn":43},{"ruleId":"115","severity":1,"message":"119","line":276,"column":46,"nodeType":"117","messageId":"118","endLine":276,"endColumn":48},{"ruleId":"115","severity":1,"message":"119","line":345,"column":49,"nodeType":"117","messageId":"118","endLine":345,"endColumn":51},{"ruleId":"115","severity":1,"message":"119","line":423,"column":38,"nodeType":"117","messageId":"118","endLine":423,"endColumn":40},{"ruleId":"115","severity":1,"message":"119","line":508,"column":38,"nodeType":"117","messageId":"118","endLine":508,"endColumn":40},{"ruleId":"115","severity":1,"message":"119","line":593,"column":38,"nodeType":"117","messageId":"118","endLine":593,"endColumn":40},{"ruleId":"110","severity":1,"message":"120","line":5,"column":29,"nodeType":"112","messageId":"113","endLine":5,"endColumn":38},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'secretProd' is assigned a value but never used.","Identifier","unusedVar","'clientIdProd' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'jwtSecret' is defined but never used.","no-global-assign","no-unsafe-negation"]