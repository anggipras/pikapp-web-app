[{"D:\\PIKAPP\\pikapp-frontend\\src\\index.js":"1","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js":"2","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js":"3","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js":"4","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js":"5","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js":"6","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"7","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js":"8","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js":"9","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"10","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"11","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"12","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"13","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"14","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"15","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"16","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"17","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"18","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PikaModal.js":"19","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"20","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"21","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"22","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"23","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"24","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"25","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\Menu\\MenuDetail.js":"26","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\Menu\\MenuSelection.js":"27","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js":"28","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js":"29"},{"size":2099,"mtime":1616123717701,"results":"30","hashOfConfig":"31"},{"size":1283,"mtime":1614170607870,"results":"32","hashOfConfig":"31"},{"size":1002,"mtime":1614170607870,"results":"33","hashOfConfig":"31"},{"size":865,"mtime":1614170607873,"results":"34","hashOfConfig":"31"},{"size":4165,"mtime":1614759342107,"results":"35","hashOfConfig":"31"},{"size":646,"mtime":1614934989724,"results":"36","hashOfConfig":"31"},{"size":656,"mtime":1614670284819,"results":"37","hashOfConfig":"31"},{"size":1089,"mtime":1614170607871,"results":"38","hashOfConfig":"31"},{"size":854,"mtime":1614927840103,"results":"39","hashOfConfig":"31"},{"size":80,"mtime":1614170607813,"results":"40","hashOfConfig":"31"},{"size":785,"mtime":1614170607813,"results":"41","hashOfConfig":"31"},{"size":831,"mtime":1614170607877,"results":"42","hashOfConfig":"31"},{"size":13136,"mtime":1614933236061,"results":"43","hashOfConfig":"31"},{"size":18082,"mtime":1616151298794,"results":"44","hashOfConfig":"31"},{"size":12465,"mtime":1614933234860,"results":"45","hashOfConfig":"31"},{"size":6333,"mtime":1614924630347,"results":"46","hashOfConfig":"31"},{"size":25067,"mtime":1614670495628,"results":"47","hashOfConfig":"31"},{"size":991,"mtime":1614671075776,"results":"48","hashOfConfig":"31"},{"size":5545,"mtime":1615274987063,"results":"49","hashOfConfig":"31"},{"size":650,"mtime":1614671023013,"results":"50","hashOfConfig":"31"},{"size":2200,"mtime":1614170607869,"results":"51","hashOfConfig":"31"},{"size":144,"mtime":1614588551922,"results":"52","hashOfConfig":"31"},{"size":971,"mtime":1616052536569,"results":"53","hashOfConfig":"31"},{"size":30,"mtime":1614586355359,"results":"54","hashOfConfig":"31"},{"size":403,"mtime":1615892094462,"results":"55","hashOfConfig":"31"},{"size":12510,"mtime":1616148533466,"results":"56","hashOfConfig":"31"},{"size":11036,"mtime":1616144455999,"results":"57","hashOfConfig":"31"},{"size":274,"mtime":1616142223494,"results":"58","hashOfConfig":"31"},{"size":31340,"mtime":1616149700112,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1xfhsff",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PIKAPP\\pikapp-frontend\\src\\index.js",[],["126","127"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js",["128","129","130","131","132","133"],"import React, { useEffect, useState } from \"react\";\r\nimport { geolocated } from \"react-geolocated\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { address, clientId, googleKey } from \"../Asset/Constant/APIConstant\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MerchantResto = (props) => {\r\n  const [merchant, setmerchant] = useState([\r\n    {\r\n      address: \"\",\r\n      rating: \"\",\r\n      logo: \"\",\r\n      distance: \"\",\r\n      storeId: \"\",\r\n      storeName: \"\",\r\n      storeDesc: \"\",\r\n      storeImage: \"\",\r\n    },\r\n  ]);\r\n  const [longlat, setlonglat] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (props.coords) {\r\n      let latitude = props.coords.latitude;\r\n      let longitude = props.coords.longitude;\r\n      let longlat = { lat: latitude, lon: longitude };\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat));\r\n    } else {\r\n      setlonglat(\"getloc succeed\")\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.coords) {\r\n      let latitude = props.coords.latitude;\r\n      let longitude = props.coords.longitude;\r\n      let longlat = { lat: latitude, lon: longitude };\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat));\r\n      getMerchantData(latitude, longitude)\r\n    }\r\n  });\r\n\r\n  const getMerchantData = (lat, lon) => {\r\n    if (merchant[0].storeId == \"\") {\r\n      let addressRoute =\r\n        address + \"home/v2/merchant/\" + lon + \"/\" + lat + \"/ALL/\";\r\n      var stateData;\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replaceAll(\"-\", \"\");\r\n      const date = new Date().toISOString();\r\n      Axios(addressRoute, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"category\": \"1\",\r\n        },\r\n        method: \"GET\",\r\n        params: {\r\n          page: 0,\r\n          size: 10\r\n        }\r\n      })\r\n        .then((res) => {\r\n          stateData = [{ ...merchant }];\r\n          let responseDatas = res.data;\r\n          stateData.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            stateData.push({\r\n              address: data.merchant_address,\r\n              rating: data.merchant_rating,\r\n              logo: data.merchant_logo,\r\n              distance: data.merchant_distance,\r\n              storeId: data.mid,\r\n              storeName: data.merchant_name,\r\n              storeDesc: \"\",\r\n              storeImage: data.merchant_pict,\r\n            });\r\n          });\r\n          console.log(stateData);\r\n          console.log(props.match.params.mid);\r\n          console.log(stateData[0].storeId);\r\n          let matchmid = stateData.filter((val) => {\r\n            return val.storeId == props.match.params.mid;\r\n          });\r\n          console.log(matchmid[0].storeId);\r\n          var currentMerchant = {\r\n            mid: \"\",\r\n            storeName: \"\",\r\n            storeDesc: \"\",\r\n            distance: \"\",\r\n            storeImage: \"\",\r\n            storeAdress: \"\",\r\n            storeRating: \"\",\r\n          };\r\n          currentMerchant.mid = matchmid[0].storeId;\r\n          currentMerchant.storeName = matchmid[0].storeName;\r\n          currentMerchant.storeDesc = \"Desc\";\r\n          currentMerchant.distance = matchmid[0].distance;\r\n          currentMerchant.storeImage = matchmid[0].storeImage;\r\n          currentMerchant.storeAdress = matchmid[0].address;\r\n          currentMerchant.storeRating = matchmid[0].rating;\r\n          Cookies.set(\"currentMerchant\", currentMerchant, { expires: 1 });\r\n          history.push(\r\n            \"/store?mid=\" +\r\n              matchmid[0].storeId +\r\n              \"&table=\" +\r\n              props.match.params.notab\r\n          );\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: false,\r\n  },\r\n  userDecisionTimeout: 5000,\r\n})(MerchantResto);\r\n\r\n// export default MerchantResto\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js",["134","135"],"import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport default class DetailNavigation extends React.Component {\r\n  goBack = () => {\r\n    // let homePage = Cookies.get(\"lastProduct\")\r\n    // window.location.href = homePage\r\n    window.history.back()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n          <Navbar onClick={this.goBack}>\r\n            <img\r\n              src={this.props.backIcon}\r\n              className={\"icon\"}\r\n              alt={\"back\"}\r\n            ></img>\r\n          </Navbar>\r\n          <Navbar.Brand className={\"navbar-center\"}>\r\n            <img src={this.props.centerImage} alt={\"title\"} class ={this.props.centerStyle}></img>\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["136","137","138"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js",["139","140"],"import React from \"react\";\r\nimport { Alert, Col, Fade, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport axios from \"axios\";\r\nimport { address, clientId, googleKey } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n// import {geolocated} from 'react-geolocated'\r\nimport {connect} from 'react-redux'\r\nimport {LoadingButton, DoneLoad} from '../../Redux/Actions'\r\n\r\nclass FormView extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    isValid: true,\r\n    isCaptcha: false,\r\n    captchaCounter: 0,\r\n    errorMsg: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.coords) {\r\n    //   let latitude = this.props.coords.latitude\r\n    //   let longitude = this.props.coords.longitude\r\n    //   let longlat = {lat: latitude, lon: longitude}\r\n    //   console.log(latitude, longitude);\r\n    //   localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    // } else {\r\n    //   this.setState({noreload: true})\r\n    // }\r\n    // this.setState({noreload: true})\r\n    this.geoLocation()\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   if(this.state.noreload) {\r\n  //     if(this.props.coords) {\r\n  //       let latitude = this.props.coords.latitude\r\n  //       let longitude = this.props.coords.longitude\r\n  //       let longlat = {lat: latitude, lon: longitude}\r\n  //       console.log(latitude, longitude);\r\n  //       localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  handleEmail = (e) => {\r\n    this.setState({ email: e.target.value});\r\n  };\r\n\r\n  handlePassword = (e) => {\r\n    this.setState({ password: e.target.value});\r\n  };\r\n\r\n  handleName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handlePhone = (e) => {\r\n    this.setState({ phone: e.target.value });\r\n  };\r\n\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  checkEmail = () => {\r\n    let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRegex.test(this.state.email)) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Email is not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkName = () => {\r\n    if (this.state.name.length > 0) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Name cannot be empty.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPassword = () => {\r\n    let passwordRegex = /^(?=.*[A-Z])(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\r\n    if (!passwordRegex.test(this.state.password)) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.password.length < 8 || this.state.password.length > 16) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  checkConfirmPassword = () => {\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Password does not match.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPhone = () => {\r\n    if (this.state.phone.startsWith(\"08\")) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Phone not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //show current location start\r\n  showPosition = (position) => {\r\n    let latitude = position.coords.latitude\r\n    let longitude = position.coords.longitude\r\n    let longlat = {lat: latitude, lon: longitude}\r\n    console.log(latitude, longitude);\r\n    this.setState({lat: latitude, lon: longitude})\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  }\r\n\r\n  geoLocation = () => {\r\n    if(navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(this.showPosition)\r\n    } else {\r\n      alert('Geolocation is not supported by this browser.')\r\n    }\r\n  }\r\n  //show current location end\r\n\r\n  handleLogin = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    // if (this.checkPassword() === false) {\r\n    //   this.setState({ isValid: false });\r\n    //   return;\r\n    // }\r\n  \r\n    this.props.LoadingButton()\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      username: this.state.email,\r\n      password: this.state.password,\r\n      fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        auth.isLogged = true;\r\n        auth.token = res.data.token;\r\n        auth.new_event = res.data.new_event;\r\n        auth.recommendation_status = res.data.recommendation_status;\r\n        auth.email = this.state.email;\r\n        Cookies.set(\"auth\", auth, { expires: 1});\r\n        if(Cookies.get(\"lastLink\") !== undefined) {\r\n          var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value\r\n          var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n          var latitude = getLocation.lat\r\n          var longitude = getLocation.lon\r\n          if(lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n          } else {\r\n            window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if(err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n          this.props.DoneLoad()\r\n        }\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkName() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPhone() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkConfirmPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      full_name: this.state.name,\r\n      password: this.state.password,\r\n      phone_number: this.state.phone,\r\n      email: this.state.email,\r\n      gender: \"MALE\",\r\n      birth_day: \"01011970\",\r\n      token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/register\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        alert(\"Register berhasil.\")\r\n        this.handleLogin()\r\n      })\r\n      .catch((err) => {\r\n        if(err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n        }\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  onChange(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  render() {\r\n    const isLogIn = this.props.isLogIn;\r\n    let form;\r\n    if (isLogIn) {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Email Anda\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password Anda\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Login\"\r\n                buttonStyle=\"secondaryPika\"\r\n                handleClick={this.handleLogin}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Belum punya akun?\r\n                <Link to=\"/register\">register sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    } else {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Daftarkan Email\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nama Lengkap\"\r\n                type=\"text\"\r\n                placeholder=\"Masukkan Namamu..\"\r\n                handleChange={this.handleName}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nomor HP\"\r\n                type=\"tel\"\r\n                placeholder=\"08000000\"\r\n                handleChange={this.handlePhone}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handleConfirmPassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {!this.state.isCaptcha || (\r\n                <ReCAPTCHA sitekey=\"asd\" onChange={this.onChange} />\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Daftar\"\r\n                buttonStyle=\"primaryPika\"\r\n                handleClick={this.handleRegister}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Sudah punya akun?\r\n                <Link to=\"/login\">login sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    }\r\n    return <div>{form}</div>;\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    theLoading: state.AllRedu\r\n  }\r\n}\r\n\r\nexport default connect(Mapstatetoprops,{LoadingButton, DoneLoad})(FormView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["141","142","143","144"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["145"],"import React from \"react\";\r\nimport { Col, Row, Image } from \"react-bootstrap\";\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, clientId, googleKey } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Geocode from \"react-geocode\"\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport {connect} from 'react-redux'\r\nimport {DoneLoad} from '../../Redux/Actions'\r\n\r\nclass StoreView extends React.Component {\r\n  state = {\r\n    page: 0,\r\n    size: 10,\r\n    location: \"\",\r\n    data: {\r\n      title: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      data: [\r\n        {\r\n          address: \"\",\r\n          rating: \"\",\r\n          logo: \"\",\r\n          distance: \"\",\r\n          storeId: \"\",\r\n          storeName: \"\",\r\n          storeDesc: \"\",\r\n          storeImage: \"\",\r\n        },\r\n      ],\r\n    },\r\n    idCol: 1,\r\n    testpage: 0,\r\n    boolpage: false,\r\n    loadView: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.DoneLoad()\r\n    Cookies.set(\"homePage\", window.location.search)\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    const value = queryString.parse(window.location.search);\r\n    console.log(value);\r\n    var longitude = \"\";\r\n    var latitude = \"\";\r\n    var merchant = \"\";\r\n\r\n    if(localStorage.getItem(\"longlat\")) {\r\n      var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n      latitude = getLocation.lat\r\n      longitude = getLocation.lon\r\n    } else {\r\n      window.location.href = \"/login\"\r\n    }\r\n\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    } \r\n    else {\r\n      longitude = value.longitude || longitude\r\n      latitude = value.latitude || latitude\r\n      if(window.location.href.includes('?latitude') || window.location.href.includes('store?')) {\r\n        \r\n      } else {\r\n        window.location.href = window.location.href + `?latitude=${latitude}&longitude=${longitude}`\r\n      }\r\n    }\r\n    longitude = value.longitude || longitude\r\n    latitude = value.latitude || latitude\r\n    merchant = value.merchant;\r\n\r\n    // GOOGLE GEOCODE\r\n    if(localStorage.getItem(\"address\")) {\r\n      var getAdress = JSON.parse(localStorage.getItem(\"address\"))\r\n      this.setState({location: getAdress})\r\n      console.log('localstorage');\r\n    } else {\r\n      console.log('nolocalstorage');\r\n      Geocode.setApiKey(googleKey)\r\n      Geocode.fromLatLng(latitude,longitude)\r\n      .then((res) => {\r\n        console.log(res.results[0].formatted_address);\r\n        this.setState({location: res.results[0].formatted_address})\r\n        localStorage.setItem(\"address\", JSON.stringify(res.results[0].formatted_address));\r\n      })\r\n      .catch((err) => {\r\n        this.setState({location: \"Tidak tersedia\"})\r\n      })\r\n    }\r\n\r\n\r\n    //OPENCAGE API\r\n    // let opencagelonglat = latitude + \",\" + longitude\r\n    // Axios.get(`https://api.opencagedata.com/geocode/v1/json?`,{\r\n    //     params:{\r\n    //         key: 'cdeab36e4fec4073b0de60ff6b595c70',\r\n    //         q: opencagelonglat\r\n    //     }\r\n    // }).then((res)=> {\r\n    //   console.log(res.data.results[0].formatted);\r\n    //   this.setState({location: res.data.results[0].formatted})\r\n    // }).catch((err) => {\r\n    //   this.setState({location: \"Tidak tersedia\"})\r\n    // })\r\n\r\n    let addressRoute;\r\n    if (merchant === undefined) {\r\n      addressRoute =\r\n        address + \"home/v2/merchant/\" + longitude + \"/\" + latitude + \"/ALL/\";\r\n    } else {\r\n      addressRoute =\r\n        address +\r\n        \"home/v1/merchant/\" +\r\n        longitude +\r\n        \"/\" +\r\n        latitude +\r\n        \"/\" +\r\n        merchant\r\n        + \"/\"\r\n    }\r\n    var stateData;\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    console.log(uuid);\r\n    console.log(date);\r\n    Axios(addressRoute, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\": \"PUBLIC\",\r\n        \"category\": \"1\",\r\n      },\r\n      method: \"GET\",\r\n      params: {\r\n        page: this.state.page,\r\n        size: this.state.size\r\n      }\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.results);\r\n          stateData = { ...this.state.data };\r\n          let responseDatas = res.data;\r\n          stateData.data.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            stateData.data.push({\r\n                address: data.merchant_address,\r\n                rating: data.merchant_rating,\r\n                logo: data.merchant_logo,\r\n                distance: data.merchant_distance,\r\n                storeId: data.mid,\r\n                storeName: data.merchant_name,\r\n                storeDesc: \"\",\r\n                storeImage: data.merchant_pict,\r\n            })\r\n          })\r\n          this.setState({ data: stateData, loadView: false, page: responseDatas.total_pages - 1 });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.idCol > 1) {\r\n      if(this.state.boolpage == true) {\r\n        const value = queryString.parse(window.location.search);\r\n        var longitude = \"\";\r\n        var latitude = \"\";\r\n        var merchant = \"\";\r\n        longitude = value.longitude\r\n        latitude = value.latitude\r\n        merchant = value.merchant;\r\n\r\n        let addressRoute;\r\n        if (merchant === undefined) {\r\n          addressRoute =\r\n            address + \"home/v2/merchant/\" + longitude + \"/\" + latitude + \"/ALL/\";\r\n        } else {\r\n          addressRoute =\r\n            address +\r\n            \"home/v1/merchant/\" +\r\n            longitude +\r\n            \"/\" +\r\n            latitude +\r\n            \"/\" +\r\n            merchant\r\n            + \"/\"\r\n        }\r\n        var stateData;\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replaceAll(\"-\", \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(addressRoute, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"token\": \"PUBLIC\",\r\n            \"category\": \"1\",\r\n          },\r\n          method: \"GET\",\r\n          params: {\r\n            page: this.state.page,\r\n            size: this.state.size\r\n          }\r\n        })\r\n          .then((res) => {\r\n              stateData = { ...this.state.data };\r\n              let responseDatas = res.data;\r\n              responseDatas.results.forEach((data) => {\r\n                stateData.data.push({\r\n                    address: data.merchant_address,\r\n                    rating: data.merchant_rating,\r\n                    logo: data.merchant_logo,\r\n                    distance: data.merchant_distance,\r\n                    storeId: data.mid,\r\n                    storeName: data.merchant_name,\r\n                    storeDesc: \"\",\r\n                    storeImage: data.merchant_pict,\r\n                })\r\n              })\r\n              console.log(this.state.idCol);\r\n              console.log(this.state.data.data);\r\n              this.setState({boolpage: false})\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n          })\r\n          .catch((err) => {\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  storeClick = (e) => {\r\n    var currentMerchant = {\r\n      mid: \"\",\r\n      storeName: \"\",\r\n      storeDesc: \"\",\r\n      distance: \"\",\r\n      storeImage: \"\",\r\n      storeAdress: \"\",\r\n      storeRating: \"\",\r\n    };\r\n    currentMerchant.mid = e.storeId;\r\n    currentMerchant.storeName = e.storeName;\r\n    currentMerchant.storeDesc = \"Desc\";\r\n    currentMerchant.distance = e.distance;\r\n    currentMerchant.storeImage = e.storeImage;\r\n    currentMerchant.storeAdress = e.address;\r\n    currentMerchant.storeRating = e.rating;\r\n\r\n    Cookies.set(\"currentMerchant\", currentMerchant, {expires: 1})\r\n  }\r\n  handleDetail(data) {\r\n    return <Link to={\"/status\"}></Link>;\r\n  }\r\n\r\n  isBottom = (el) => {\r\n    return (el.getBoundingClientRect().top + 50) <= window.innerHeight\r\n  }\r\n\r\n  loadMoreMerchant = () => {\r\n    const wrappedElement = document.getElementById(\"idCol\")\r\n    if(this.state.idCol <= this.state.page) {\r\n      if(this.isBottom(wrappedElement)) {\r\n        console.log('testloadmore');\r\n        this.setState({idCol: this.state.idCol + 1, page: this.state.page + 1, boolpage: true})\r\n        document.removeEventListener('scroll', this.loadMoreMerchant)\r\n      }\r\n    } else {\r\n      document.removeEventListener('scroll', this.loadMoreMerchant)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n  merchantLoading = () => (\r\n    <Row>\r\n      <Col xs={3} md={3}>\r\n        <Skeleton style={{width:70, height: 70, marginLeft: 10}} />\r\n      </Col>\r\n      <Col xs={9} md={6}>\r\n        <Row>\r\n          <Col xs={7} md={9}>\r\n            <Skeleton style={{width:100, height: 30, marginLeft: 10}} />\r\n            <Skeleton style={{width:100, height: 20, marginLeft: 10}} />\r\n            <Skeleton style={{width:100, height: 20, marginLeft: 10}} />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n\r\n  render() {\r\n    const storeDatas = this.state.data.data.map((data) => {\r\n      return data;\r\n    });\r\n    var allCards = storeDatas.map((cardData) => {\r\n      return (\r\n        <Row>\r\n          <Col xs={3} md={3}>\r\n            {\r\n              this.state.loadView?\r\n              <Skeleton width={70} height={70}/>\r\n              :\r\n              <Image\r\n                src={cardData.storeImage}\r\n                rounded\r\n                fluid\r\n                className=\"storeImage\"\r\n              />\r\n            }\r\n          </Col>\r\n          <Col xs={9} md={6}>\r\n            <Row>\r\n              <Col xs={7} md={9}>\r\n                {\r\n                  this.state.loadView?\r\n                  <Skeleton style={{width:100, height: 30, marginLeft: 20}} />\r\n                  :\r\n                  <h5 className=\"foodTitle\">{cardData.storeName}</h5>\r\n                }\r\n                <p className=\"storeDesc\">{cardData.storeDesc}</p>\r\n                {\r\n                  this.state.loadView?\r\n                  <Skeleton style={{width:100, height: 20, marginLeft: 20}} />\r\n                  :\r\n                  <div className=\"foodButton\">\r\n                    <Link\r\n                      className={\"btn-cartPika\"}\r\n                      to={\"/store?mid=\" + cardData.storeId}\r\n                      style={{\r\n                        padding: 8,\r\n                        textDecoration: \"none\",\r\n                        color: \"black\",\r\n                      }}\r\n                      onClick={()=> this.storeClick(cardData)}\r\n                    >\r\n                      Go to store\r\n                    </Link>\r\n                  </div>\r\n                }\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs={4} md={1}/>\r\n          <Col xs={0} md={4} className=\"storeColumn\">\r\n            <h6 className=\"\" style={{ textAlign: \"left\" }}>\r\n              Lokasi:\r\n            </h6>\r\n            <p className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n              {this.state.location || <Skeleton height={20} />}\r\n            </p>\r\n          </Col>\r\n          <Col />\r\n        </Row>\r\n        <Row />\r\n        <Row>\r\n          <div>\r\n            <Col md={12}>{allCards}</Col>\r\n            {\r\n              !this.state.loadView?\r\n                this.state.idCol <= this.state.page ?\r\n                <div id={\"idCol\"}>\r\n                  {/* <Skeleton style={{paddingTop: 100, marginTop: 10, marginLeft: 10, width: \"95%\"}} /> */}\r\n                  {this.merchantLoading()}\r\n                </div>\r\n                :\r\n                null\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n        </Row>\r\n        <Row></Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {DoneLoad})(StoreView)\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["146","147","148","149"],"import React from \"react\";\r\nimport { Row, Col, Nav, Card, Modal } from \"react-bootstrap\";\r\nimport unpaidIcon from \"../../Asset/Icon/unpaid_status.png\";\r\nimport unpaidActiveIcon from \"../../Asset/Icon/unpaid_active_status.png\";\r\nimport packIcon from \"../../Asset/Icon/pack_status.png\";\r\nimport packActiveIcon from \"../../Asset/Icon/pack_active_status.png\";\r\nimport sendIcon from \"../../Asset/Icon/send_status.png\";\r\nimport sendActiveIcon from \"../../Asset/Icon/send_active_status.png\";\r\nimport reviewIcon from \"../../Asset/Icon/review_status.png\";\r\nimport reviewActiveIcon from \"../../Asset/Icon/review_active_status.png\";\r\nimport placeholderIcon from \"../../Asset/Icon/placeholder_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport categoryFoodIcon from \"../../Asset/Icon/category_food_icon.png\";\r\nimport pickupStatusIcon from \"../../Asset/Icon/pickup_status_icon.png\";\r\nimport cashierStatusIcon from \"../../Asset/Icon/cashier_icon.png\"\r\nimport ovoIcon from \"../../Asset/Icon/ovo_icon.png\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport class StatusView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    activeTab: 1,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n        biz_type: \"\",\r\n        payment: \"\",\r\n        transactionId: \"\",\r\n        transactionTime: \"\",\r\n      },\r\n    ],\r\n    currentModal: {\r\n      transactionId: \"\",\r\n      transactionTime:\"\",\r\n      storeName: \"Store\",\r\n      storeLocation: \"Location\",\r\n      storeDistance: \"Distance\",\r\n      status: \"Status\",\r\n      payment: \"Cash\",\r\n      biz_type: \"\",\r\n      food: [\r\n        {\r\n          productId: \"\",\r\n          name: \"\",\r\n          price: 0,\r\n          image: \"\",\r\n          note: \"\",\r\n          quantity: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n  handleDetail(transId) {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/\" + transId + \"/txn-detail/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var resultModal = {...this.currentModal}\r\n        resultModal.transactionId = results.transaction_id\r\n        resultModal.transactionTime = results.transaction_time\r\n        resultModal.storeName = results.merchant_name\r\n        resultModal.storeDistance = \"\"\r\n        resultModal.storeLocation = \"\"\r\n        resultModal.status = results.status\r\n        resultModal.biz_type = results.biz_type\r\n        resultModal.payment = results.payment_with\r\n        resultModal.food = []\r\n        results.detail_products.forEach((product) => {\r\n          resultModal.food.push({\r\n            name: product.product_name,\r\n            price: product.price,\r\n            quantity: product.qty,\r\n            image: product.image,\r\n            note: product.notes\r\n          })\r\n        })\r\n        this.setState({\r\n          currentModal: resultModal\r\n        })\r\n      })\r\n      .catch((err) => {\r\n      });\r\n      \r\n    this.setModal(true);\r\n  }\r\n\r\n  handleSelect(tabIndex) {\r\n    this.setState({ activeTab: tabIndex });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/txn-history/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = {...this.state}\r\n        stateData.data.pop()\r\n        results.forEach((result) => {\r\n          stateData.data.push({\r\n            title: result.merchant_name,\r\n            distance: \"\",\r\n            quantity: result.total_product,\r\n            status: result.status,\r\n            biz_type: result.biz_type,\r\n            payment: result.payment_with,\r\n            transactionId: result.transaction_id,\r\n            transactionTime: result.transaction_time,\r\n          })\r\n        })\r\n        this.setState({data: stateData.data});\r\n      })\r\n      .catch((err) => {\r\n      });\r\n    // var state = { ...this.state };\r\n    // state.data.pop();\r\n    // state.data.push({\r\n    //   title: \"Food1\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food4\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food2\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"pick\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food3\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"send\",\r\n    // });\r\n    // this.setState({ data: state.data });\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let modalList = this.state.currentModal.food;\r\n\r\n    let modalListView = modalList.map((data) => {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={placeholderIcon} class=\"statusFoodIcon\" alt=\"food icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodname\">{data.name}</p>\r\n                <p class=\"statusFoodPrice\">\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(data.price)}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodQuantity\">{data.quantity}x</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p class=\"statusFoodNote\">Catatan: {data.note}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n    let currentTotal = 0;\r\n    modalList.forEach((data) => {\r\n      currentTotal = currentTotal + data.price * data.quantity;\r\n    });\r\n    if (this.state.showModal === true) {\r\n      let payImage;\r\n      let payLabel;\r\n      if(this.state.currentModal.payment === \"PAY_BY_CASHIER\") {\r\n        payImage = cashierStatusIcon;\r\n        payLabel = \"Cashier\"\r\n      } else if(this.state.currentModal.payment === \"WALLET\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Cash\"\r\n      } else if(this.state.currentModal.payment === \"VA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Virtual\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_OVO\") {\r\n        payImage = ovoIcon;\r\n        payLabel = \"OVO\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_DANA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"DANA\"\r\n      } \r\n      modal = (\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p class=\"statusNoteLabel\">No Pesanan.</p>\r\n              <p class=\"statusNoteHeader\">{this.state.currentModal.transactionId}</p>\r\n              <p class=\"statusNoteLabel\">{this.state.currentModal.transactionTime}</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={categoryFoodIcon} class=\"statusStoreIcon\" alt=\"category icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusStoreName\">\r\n                  {this.state.currentModal.storeName}\r\n                </p>\r\n                <p class=\"statusStoreLabel\">store location</p>\r\n                <p class=\"statusStoreLocation\">\r\n                  {this.state.currentModal.storeLocation}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={pickupStatusIcon} class=\"statusStoreStatusIcon\"  alt=\"pickup status\"/>\r\n              </Col>\r\n              <Col>\r\n                <span class=\"statusStoreLabel\">status: </span>\r\n                <span class=\"statusStoreStatus\">\r\n                  {this.state.currentModal.status}\r\n                </span>\r\n                <span class=\"statusStoreDistance\">\r\n                  {this.state.currentModal.storeDistance}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStorePaymentLabel\">Metode Pembayaran</p>\r\n                <img src={payImage} class=\"statusFoodIcon\" alt=\"status icon\"></img>\r\n                <span class=\"statusStorePayment\">\r\n                      {payLabel}\r\n                    </span>\r\n              </Col>\r\n            </Row>\r\n            {modalListView}\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStoreTotal\">Total Pembayaran</p>\r\n              </Col>\r\n              <Col>\r\n                {Intl.NumberFormat(\"id-ID\", {\r\n                  style: \"currency\",\r\n                  currency: \"IDR\",\r\n                }).format(currentTotal)}\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    let notPaidImage;\r\n    let contentView;\r\n\r\n    let currentState = this.state.activeTab;\r\n    if (currentState === 1) {\r\n      notPaidImage = unpaidActiveIcon;\r\n      contentView = this.state.data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = cashierStatusIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"OPEN\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      notPaidImage = unpaidIcon;\r\n    }\r\n\r\n    let packImage;\r\n    if (currentState === 2) {\r\n      packImage = packActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"PAID\" || value.status === \"MERCHANT_CONFIRM\" || value.status === \"CUSTOMER_ACCEPTED\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      packImage = packIcon;\r\n    }\r\n\r\n    let sendImage;\r\n    if (currentState === 3) {\r\n      sendImage = sendActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"DELIVER\" || value.status === \"ON_PROCESS\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt =\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      sendImage = sendIcon;\r\n    }\r\n\r\n    let reviewImage;\r\n    if (currentState === 4) {\r\n      reviewImage = reviewActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"CLOSE\" || value.status === \"FINALIZE\") {\r\n          let bizImage;\r\n          let bizLabel;\r\n          let payImage;\r\n          let payLabel;\r\n          if(value.payment === \"PAY_BY_CASHIER\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cashier\"\r\n          } else if(value.payment === \"WALLET\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cash\"\r\n          } else if(value.payment === \"VA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Virtual\"\r\n          } else if(value.payment === \"WALLET_OVO\") {\r\n            payImage = ovoIcon;\r\n            payLabel = \"OVO\"\r\n          } else if(value.payment === \"WALLET_DANA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"DANA\"\r\n          } \r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt =\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt = \"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      reviewImage = reviewIcon;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav variant=\"tabs\" defaultActiveKey={\"not-paid\"}>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              eventKey={\"not-paid\"}\r\n              onClick={() => this.handleSelect(1)}\r\n            >\r\n              <Row>\r\n                <img\r\n                  src={notPaidImage}\r\n                  alt={\"unpaid\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Belum Bayar</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"pack\"} onClick={() => this.handleSelect(2)}>\r\n              <Row>\r\n                <img src={packImage} alt={\"pack\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Dikemas</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"send\"} onClick={() => this.handleSelect(3)}>\r\n              <Row>\r\n                <img src={sendImage} alt={\"send\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Siap / Dikirim</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"review\"} onClick={() => this.handleSelect(4)}>\r\n              <Row>\r\n                <img\r\n                  src={reviewImage}\r\n                  alt={\"review\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Beri Penilaian</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {contentView}\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PikaModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["150"],"const INITIAL_STATE = {\r\n    buttonLoad: true,\r\n    validQTY: 0,\r\n    openSelect: false,\r\n    checkboxes: [],\r\n    checkboxesTotal: [],\r\n    radiobutton: [],\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return { ...state, buttonLoad: false }\r\n        case \"DONELOAD\":\r\n            return { ...state, buttonLoad: true }\r\n        case \"VALIDATIONQTY\":\r\n            return { ...state, validQTY: action.payload }\r\n        case \"OPENSELECT\":\r\n            return { ...state, openSelect: action.payload }\r\n        case \"CHECKBOXES\":\r\n            return { ...state, checkboxes: action.payload }\r\n        case \"COUNTCHECKBOX\":\r\n            return { ...state, checkboxesTotal: action.payload }\r\n        case \"RADIOBUTTON\":\r\n            return { ...state, radiobutton: action.payload }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\Menu\\MenuDetail.js",["151","152","153","154","155","156","157","158","159","160","161","162","163"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\Menu\\MenuSelection.js",["164","165"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":4,"column":29,"nodeType":"200","messageId":"201","endLine":4,"endColumn":38},{"ruleId":"198","severity":1,"message":"202","line":10,"column":20,"nodeType":"200","messageId":"201","endLine":10,"endColumn":31},{"ruleId":"198","severity":1,"message":"203","line":22,"column":10,"nodeType":"200","messageId":"201","endLine":22,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":35,"column":6,"nodeType":"206","endLine":35,"endColumn":8,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":49,"column":29,"nodeType":"210","messageId":"211","endLine":49,"endColumn":31},{"ruleId":"208","severity":1,"message":"209","line":91,"column":32,"nodeType":"210","messageId":"211","endLine":91,"endColumn":34},{"ruleId":"198","severity":1,"message":"212","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"213","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":15},{"ruleId":"198","severity":1,"message":"214","line":5,"column":5,"nodeType":"200","messageId":"201","endLine":5,"endColumn":15},{"ruleId":"198","severity":1,"message":"215","line":9,"column":5,"nodeType":"200","messageId":"201","endLine":9,"endColumn":17},{"ruleId":"198","severity":1,"message":"216","line":12,"column":5,"nodeType":"200","messageId":"201","endLine":12,"endColumn":18},{"ruleId":"198","severity":1,"message":"217","line":2,"column":22,"nodeType":"200","messageId":"201","endLine":2,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":6,"column":29,"nodeType":"200","messageId":"201","endLine":6,"endColumn":38},{"ruleId":"218","severity":1,"message":"219","line":110,"column":52,"nodeType":"220","messageId":"221","endLine":110,"endColumn":54},{"ruleId":"208","severity":1,"message":"209","line":142,"column":15,"nodeType":"210","messageId":"211","endLine":142,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":342,"column":41,"nodeType":"220","messageId":"221","endLine":342,"endColumn":43},{"ruleId":"218","severity":1,"message":"222","line":349,"column":46,"nodeType":"220","messageId":"221","endLine":349,"endColumn":48},{"ruleId":"208","severity":1,"message":"209","line":183,"column":30,"nodeType":"210","messageId":"211","endLine":183,"endColumn":32},{"ruleId":"218","severity":1,"message":"222","line":345,"column":49,"nodeType":"220","messageId":"221","endLine":345,"endColumn":51},{"ruleId":"218","severity":1,"message":"222","line":423,"column":38,"nodeType":"220","messageId":"221","endLine":423,"endColumn":40},{"ruleId":"218","severity":1,"message":"222","line":508,"column":38,"nodeType":"220","messageId":"221","endLine":508,"endColumn":40},{"ruleId":"218","severity":1,"message":"222","line":593,"column":38,"nodeType":"220","messageId":"221","endLine":593,"endColumn":40},{"ruleId":"223","severity":1,"message":"224","line":10,"column":1,"nodeType":"225","endLine":31,"endColumn":2},{"ruleId":"198","severity":1,"message":"226","line":15,"column":23,"nodeType":"200","messageId":"201","endLine":15,"endColumn":35},{"ruleId":"227","severity":1,"message":"228","line":69,"column":41,"nodeType":"229","endLine":69,"endColumn":84},{"ruleId":"227","severity":1,"message":"228","line":73,"column":41,"nodeType":"229","endLine":73,"endColumn":86},{"ruleId":"227","severity":1,"message":"228","line":80,"column":41,"nodeType":"229","endLine":80,"endColumn":84},{"ruleId":"227","severity":1,"message":"228","line":85,"column":45,"nodeType":"229","endLine":85,"endColumn":93},{"ruleId":"230","severity":1,"message":"231","line":127,"column":77,"nodeType":"210","messageId":"232","endLine":127,"endColumn":78},{"ruleId":"230","severity":1,"message":"231","line":129,"column":77,"nodeType":"210","messageId":"232","endLine":129,"endColumn":78},{"ruleId":"227","severity":1,"message":"228","line":152,"column":33,"nodeType":"229","endLine":152,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":156,"column":45,"nodeType":"229","endLine":156,"endColumn":94},{"ruleId":"227","severity":1,"message":"228","line":160,"column":45,"nodeType":"229","endLine":160,"endColumn":94},{"ruleId":"227","severity":1,"message":"228","line":169,"column":45,"nodeType":"229","endLine":169,"endColumn":97},{"ruleId":"230","severity":1,"message":"231","line":208,"column":83,"nodeType":"210","messageId":"232","endLine":208,"endColumn":84},{"ruleId":"230","severity":1,"message":"231","line":210,"column":83,"nodeType":"210","messageId":"232","endLine":210,"endColumn":84},{"ruleId":"204","severity":1,"message":"233","line":48,"column":8,"nodeType":"206","endLine":48,"endColumn":10,"suggestions":"234"},{"ruleId":"230","severity":1,"message":"231","line":64,"column":149,"nodeType":"210","messageId":"232","endLine":64,"endColumn":150},{"ruleId":"198","severity":1,"message":"235","line":10,"column":29,"nodeType":"200","messageId":"201","endLine":10,"endColumn":35},{"ruleId":"198","severity":1,"message":"236","line":12,"column":8,"nodeType":"200","messageId":"201","endLine":12,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":184,"column":43,"nodeType":"210","messageId":"211","endLine":184,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":225,"column":30,"nodeType":"210","messageId":"211","endLine":225,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":226,"column":36,"nodeType":"210","messageId":"211","endLine":226,"endColumn":38},{"ruleId":"208","severity":1,"message":"209","line":245,"column":37,"nodeType":"210","messageId":"211","endLine":245,"endColumn":39},{"ruleId":"208","severity":1,"message":"209","line":260,"column":20,"nodeType":"210","messageId":"211","endLine":260,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":274,"column":21,"nodeType":"210","messageId":"211","endLine":274,"endColumn":23},{"ruleId":"198","severity":1,"message":"237","line":320,"column":9,"nodeType":"200","messageId":"201","endLine":320,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":326,"column":43,"nodeType":"210","messageId":"211","endLine":326,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":327,"column":37,"nodeType":"210","messageId":"211","endLine":327,"endColumn":39},{"ruleId":"208","severity":1,"message":"209","line":573,"column":31,"nodeType":"210","messageId":"211","endLine":573,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":599,"column":27,"nodeType":"229","endLine":599,"endColumn":116},{"ruleId":"227","severity":1,"message":"228","line":608,"column":27,"nodeType":"229","endLine":608,"endColumn":78},{"ruleId":"208","severity":1,"message":"209","line":692,"column":41,"nodeType":"210","messageId":"211","endLine":692,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":706,"column":38,"nodeType":"210","messageId":"211","endLine":706,"endColumn":40},{"ruleId":"227","severity":1,"message":"228","line":707,"column":15,"nodeType":"229","endLine":707,"endColumn":95},{"ruleId":"227","severity":1,"message":"228","line":709,"column":15,"nodeType":"229","endLine":709,"endColumn":96},{"ruleId":"227","severity":1,"message":"228","line":716,"column":21,"nodeType":"229","endLine":716,"endColumn":74},{"ruleId":"227","severity":1,"message":"228","line":726,"column":21,"nodeType":"229","endLine":726,"endColumn":70},{"ruleId":"227","severity":1,"message":"228","line":740,"column":23,"nodeType":"229","endLine":740,"endColumn":132},{"ruleId":"227","severity":1,"message":"228","line":754,"column":33,"nodeType":"229","endLine":754,"endColumn":76},{"ruleId":"227","severity":1,"message":"228","line":768,"column":25,"nodeType":"229","endLine":768,"endColumn":77},{"ruleId":"227","severity":1,"message":"228","line":778,"column":23,"nodeType":"229","endLine":778,"endColumn":74},{"ruleId":"227","severity":1,"message":"228","line":788,"column":23,"nodeType":"229","endLine":788,"endColumn":66},{"ruleId":"227","severity":1,"message":"228","line":798,"column":23,"nodeType":"229","endLine":798,"endColumn":74},{"ruleId":"227","severity":1,"message":"228","line":815,"column":21,"nodeType":"229","endLine":815,"endColumn":66},{"ruleId":"227","severity":1,"message":"228","line":842,"column":15,"nodeType":"229","endLine":842,"endColumn":62},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'googleKey' is defined but never used.","Identifier","unusedVar","'setmerchant' is assigned a value but never used.","'longlat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.coords'. Either include it or remove the dependency array.","ArrayExpression",["240"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Cookies' is defined but never used.","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'Fade' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setmenuCateg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["241"],"'secret' is defined but never used.","'sha256' is defined but never used.","'stateData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [props.coords]",{"range":"246","text":"247"},"Update the dependencies array to be: [props]",{"range":"248","text":"249"},[1040,1042],"[props.coords]",[1816,1818],"[props]"]