[{"D:\\PIKAPP\\pikapp-frontend\\src\\index.js":"1","D:\\PIKAPP\\pikapp-frontend\\src\\App.js":"2","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Store.js":"3","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js":"4","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js":"5","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js":"6","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js":"7","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js":"8","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js":"9","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderDetailManualLayout.js":"10","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\FoodCourtQR.js":"11","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"12","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js":"13","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ManualTransaction.js":"14","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartManualLayout.js":"15","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderDetailLayout.js":"16","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusCartManualLayout.js":"17","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\TrackingDeliveryLayout.js":"18","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\PickupSelectionView.js":"19","D:\\PIKAPP\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js":"20","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Promo\\PromoView.js":"21","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressInputView.js":"22","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressMapsView.js":"23","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressSearchView.js":"24","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\PaymentSelection\\PaymentMethodView.js":"25","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\ShippingSelection\\ShippingTypeView.js":"26","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\ShippingSelection\\ShippingDetailView.js":"27","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\ShippingDate\\ShippingDateView.js":"28","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"29","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"30","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js":"31","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartManualView.js":"32","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"33","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js":"34","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusCartManualView.js":"35","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"36","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"37","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"38","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderDetail\\OrderDetailView.js":"39","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"40","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderDetail\\OrderDetailManualView.js":"41","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Tracking\\TrackingDeliveryView.js":"42","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js":"43","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"44","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"45","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js":"46","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MapsLayout\\MapsComponent.js":"47","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MapsLayout\\AutoCompleteComponent.js":"48","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"49","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\CartReducers.js":"50","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js":"51","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"52","D:\\PIKAPP\\pikapp-frontend\\src\\firebaseConfig.js":"53","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js":"54","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js":"55","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js":"56","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js":"57","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"58","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js":"59","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\OrderListStatusModal.js":"60","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\FailedModal.js":"61","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"62","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js":"63","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MapsLayout\\MarkerComponent.js":"64","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"65","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"66","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js":"67","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js":"68","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js":"69","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js":"70","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js":"71","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\MerchantDetailProfile.js":"72","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartCancel.js":"73","D:\\PIKAPP\\pikapp-frontend\\src\\ScrollToTop.js":"74"},{"size":547,"mtime":1646728337000,"results":"75","hashOfConfig":"76"},{"size":6066,"mtime":1646974739929,"results":"77","hashOfConfig":"76"},{"size":169,"mtime":1646728336969,"results":"78","hashOfConfig":"76"},{"size":495,"mtime":1646728336969,"results":"79","hashOfConfig":"76"},{"size":294,"mtime":1646728336969,"results":"80","hashOfConfig":"76"},{"size":1625,"mtime":1646728389647,"results":"81","hashOfConfig":"76"},{"size":2443,"mtime":1646728336953,"results":"82","hashOfConfig":"76"},{"size":1698,"mtime":1646806405832,"results":"83","hashOfConfig":"76"},{"size":1281,"mtime":1646728336969,"results":"84","hashOfConfig":"76"},{"size":359,"mtime":1646728336969,"results":"85","hashOfConfig":"76"},{"size":675,"mtime":1646728336969,"results":"86","hashOfConfig":"76"},{"size":656,"mtime":1646728336969,"results":"87","hashOfConfig":"76"},{"size":367,"mtime":1646728336969,"results":"88","hashOfConfig":"76"},{"size":1003,"mtime":1646728336969,"results":"89","hashOfConfig":"76"},{"size":6035,"mtime":1646974739936,"results":"90","hashOfConfig":"76"},{"size":337,"mtime":1646728336969,"results":"91","hashOfConfig":"76"},{"size":334,"mtime":1646728336969,"results":"92","hashOfConfig":"76"},{"size":352,"mtime":1646728336969,"results":"93","hashOfConfig":"76"},{"size":10503,"mtime":1646805333700,"results":"94","hashOfConfig":"76"},{"size":1858,"mtime":1646728337000,"results":"95","hashOfConfig":"76"},{"size":23818,"mtime":1646728389667,"results":"96","hashOfConfig":"76"},{"size":5128,"mtime":1646974739944,"results":"97","hashOfConfig":"76"},{"size":6807,"mtime":1646974739945,"results":"98","hashOfConfig":"76"},{"size":6189,"mtime":1646974739946,"results":"99","hashOfConfig":"76"},{"size":8111,"mtime":1646728389660,"results":"100","hashOfConfig":"76"},{"size":7151,"mtime":1646805254734,"results":"101","hashOfConfig":"76"},{"size":5747,"mtime":1646805229625,"results":"102","hashOfConfig":"76"},{"size":18949,"mtime":1646974739950,"results":"103","hashOfConfig":"76"},{"size":318,"mtime":1646728336969,"results":"104","hashOfConfig":"76"},{"size":49893,"mtime":1646993694155,"results":"105","hashOfConfig":"76"},{"size":1795,"mtime":1646728336969,"results":"106","hashOfConfig":"76"},{"size":66613,"mtime":1646974739948,"results":"107","hashOfConfig":"76"},{"size":25975,"mtime":1646728337000,"results":"108","hashOfConfig":"76"},{"size":67331,"mtime":1646993772484,"results":"109","hashOfConfig":"76"},{"size":23670,"mtime":1646728337000,"results":"110","hashOfConfig":"76"},{"size":80,"mtime":1646728336720,"results":"111","hashOfConfig":"76"},{"size":13812,"mtime":1646728336985,"results":"112","hashOfConfig":"76"},{"size":831,"mtime":1646728336985,"results":"113","hashOfConfig":"76"},{"size":29338,"mtime":1646806492733,"results":"114","hashOfConfig":"76"},{"size":19876,"mtime":1646806643856,"results":"115","hashOfConfig":"76"},{"size":9773,"mtime":1646728336985,"results":"116","hashOfConfig":"76"},{"size":15140,"mtime":1646728337000,"results":"117","hashOfConfig":"76"},{"size":41888,"mtime":1646974739951,"results":"118","hashOfConfig":"76"},{"size":9046,"mtime":1646728337000,"results":"119","hashOfConfig":"76"},{"size":996,"mtime":1646728336720,"results":"120","hashOfConfig":"76"},{"size":11319,"mtime":1646728336953,"results":"121","hashOfConfig":"76"},{"size":12185,"mtime":1646974739938,"results":"122","hashOfConfig":"76"},{"size":2926,"mtime":1646728336969,"results":"123","hashOfConfig":"76"},{"size":30,"mtime":1646728336969,"results":"124","hashOfConfig":"76"},{"size":5215,"mtime":1646728389651,"results":"125","hashOfConfig":"76"},{"size":930,"mtime":1646974739942,"results":"126","hashOfConfig":"76"},{"size":2360,"mtime":1646974739941,"results":"127","hashOfConfig":"76"},{"size":488,"mtime":1646728337000,"results":"128","hashOfConfig":"76"},{"size":1360,"mtime":1646728336953,"results":"129","hashOfConfig":"76"},{"size":11231,"mtime":1646728336953,"results":"130","hashOfConfig":"76"},{"size":862,"mtime":1646728336953,"results":"131","hashOfConfig":"76"},{"size":2411,"mtime":1646728336953,"results":"132","hashOfConfig":"76"},{"size":991,"mtime":1646728336953,"results":"133","hashOfConfig":"76"},{"size":18158,"mtime":1646728336953,"results":"134","hashOfConfig":"76"},{"size":2709,"mtime":1646728336953,"results":"135","hashOfConfig":"76"},{"size":1251,"mtime":1646728336953,"results":"136","hashOfConfig":"76"},{"size":650,"mtime":1646728336953,"results":"137","hashOfConfig":"76"},{"size":13817,"mtime":1646992763720,"results":"138","hashOfConfig":"76"},{"size":899,"mtime":1646728336969,"results":"139","hashOfConfig":"76"},{"size":5405,"mtime":1646974739939,"results":"140","hashOfConfig":"76"},{"size":10713,"mtime":1646728389646,"results":"141","hashOfConfig":"76"},{"size":8867,"mtime":1646728336953,"results":"142","hashOfConfig":"76"},{"size":12716,"mtime":1646728336952,"results":"143","hashOfConfig":"76"},{"size":15667,"mtime":1646728336953,"results":"144","hashOfConfig":"76"},{"size":6427,"mtime":1646728336953,"results":"145","hashOfConfig":"76"},{"size":30854,"mtime":1646990946349,"results":"146","hashOfConfig":"76"},{"size":6550,"mtime":1646990615579,"results":"147","hashOfConfig":"76"},{"size":2707,"mtime":1646817017162,"results":"148","hashOfConfig":"76"},{"size":375,"mtime":1646974739942,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"13tio87",{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"152"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"152"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"152"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"152"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":62,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"207","usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"210","usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"152"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"152"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"152"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"152"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"152"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"152"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"152"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"152"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"152"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"273","usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"152"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"152"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"152"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"152"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"152"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"152"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"152"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"152"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"152"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"152"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"152"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"152"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"152"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"152"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"D:\\PIKAPP\\pikapp-frontend\\src\\index.js",[],["345","346"],"D:\\PIKAPP\\pikapp-frontend\\src\\App.js",["347","348","349"],"import React, { useEffect, useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Asset/scss/App.scss\";\r\nimport AuthLayout from \"./Master/AuthLayout\";\r\nimport ProductLayout from \"./Master/ProductLayout\";\r\nimport CartLayout from \"./Master/CartLayout\";\r\nimport StatusLayout from \"./Master/StatusLayout\";\r\nimport StoreLayout from \"./Master/StoreLayout\";\r\nimport ProfileLayout from \"./Master/ProfileLayout\";\r\nimport MerchantResto from \"./Master/MerchantQR\";\r\nimport FoodCourt from \"./Master/FoodCourtQR\";\r\nimport ResetPin from \"./View/ResetPin/ResetPinView\";\r\nimport OrderConfirmationLayout from \"./Master/OrderConfirmationLayout\";\r\nimport OrderDetailLayout from \"./Master/OrderDetailLayout\";\r\nimport OrderDetailManualLayout  from \"./Master/OrderDetailManualLayout\";\r\nimport CartManualLayout from \"./Master/CartManualLayout\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux'\r\nimport ScrollToTop from './ScrollToTop' \r\nimport PickupSelectionView from \"./View/Cart/AddressSelection/PickupSelectionView\";\r\nimport AddressInputView from \"./View/Cart/AddressSelection/AddressInputView\";\r\nimport AddressMapsView from \"./View/Cart/AddressSelection/AddressMapsView\";\r\nimport AddressSearchView from \"./View/Cart/AddressSelection/AddressSearchView\";\r\nimport ShippingTypeView from \"./View/Cart/ShippingSelection/ShippingTypeView\";\r\nimport ShippingDetailView from \"./View/Cart/ShippingSelection/ShippingDetailView\";\r\nimport ShippingDateView from \"./View/Cart/ShippingDate/ShippingDateView\";\r\nimport PaymentMethodView from \"./View/Cart/PaymentSelection/PaymentMethodView\";\r\nimport StatusCartManualLayout from \"./Master/StatusCartManualLayout\";\r\nimport TrackingDeliveryLayout from \"./Master/TrackingDeliveryLayout\";\r\nimport PromoView from \"./View/Promo/PromoView\";\r\nimport MerchantDetailProfile from \"./View/Product/MerchantDetailProfile\";\r\nexport var cart = [\r\n    {\r\n        mid: \"\",\r\n        storeName: \"\",\r\n        storeDesc: \"\",\r\n        storeDistance: \"\",\r\n        food: [\r\n            {\r\n                productId: \"\",\r\n                foodName: \"\",\r\n                foodPrice: 0,\r\n                foodAmount: 0,\r\n                foodImage: \"\",\r\n                foodNote: \"\",\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport var counterTime = 0;\r\nexport var timeLeft = null;\r\n\r\nif (localStorage.getItem(\"cart\")) {\r\n    cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n} else {\r\n    localStorage.setItem('cart', JSON.stringify(cart))\r\n}\r\n\r\nif (!localStorage.getItem(\"storeTour\")) {\r\n    localStorage.setItem('storeTour', 1);\r\n    localStorage.setItem('productTour', 1);\r\n    localStorage.setItem('cartTour', 1);\r\n    localStorage.setItem('merchantFlow', 1);\r\n    localStorage.setItem('cartMerchant', 1);\r\n}\r\n\r\nfunction countDown(){\r\n    let counter = Number(localStorage.getItem(\"counterPayment\"));\r\n    if(counter == 0) {\r\n        clearInterval(timeLeft);\r\n        console.log(\"clear\");\r\n        localStorage.setItem(\"counterPayment\", counterTime);\r\n    } else {\r\n        counterTime = counter - 1;\r\n        localStorage.setItem(\"counterPayment\", counterTime);\r\n    }\r\n}\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const [tokenFound, setTokenFound] = useState('');\r\n\r\n    dispatch({ type: 'FCMTOKEN', payload: tokenFound });\r\n\r\n    if(localStorage.getItem(\"counterPayment\")) {\r\n        timeLeft = setInterval(() => countDown(), 1000);\r\n    }\r\n\r\n    return (\r\n        <ScrollToTop>\r\n            <Switch>\r\n                <Route path=\"/login\" component={() => <AuthLayout isLogin={true} />} />\r\n                <Route\r\n                    path=\"/register\"\r\n                    component={() => <AuthLayout isLogin={false} />}\r\n                />\r\n                <Route path=\"/cart\" component={() => <CartLayout />} />\r\n                <Route path=\"/status\" component={() => <StatusLayout />} />\r\n                <Route path=\"/statuscartmanual\" component={() => <StatusCartManualLayout />} />\r\n                <Route path=\"/store\" component={() => <ProductLayout />} />\r\n                <Route exact path=\"/merchant-profile\" component={MerchantDetailProfile} />\r\n                <Route exact path=\"/merchant/:mid/:notab\" component={MerchantResto} />\r\n                <Route exact path=\"/merchant/list/:address/:notab\" component={FoodCourt} />\r\n                <Route exact path=\"/promo\" component={PromoView} />\r\n                <Route path=\"/profile\" component={() => <ProfileLayout />} />\r\n                <Route path=\"/reset-pin/:pintoken\" component={ResetPin} />\r\n                <Route path=\"/orderconfirmation\" component={() => <OrderConfirmationLayout />} />\r\n                <Route path=\"/orderdetail\" component={() => <OrderDetailLayout />} />\r\n                <Route path=\"/orderdetaildelivery\" component={() => <OrderDetailManualLayout />} />\r\n                <Route exact path=\"/cartmanual/pickup/address\" component={AddressInputView} />\r\n                <Route exact path=\"/cartmanual/pickup/location\" component={AddressMapsView} />\r\n                <Route exact path=\"/cartmanual/pickup/search\" component={AddressSearchView} />\r\n                <Route exact path=\"/cartmanual/pickup/shipping\" component={ShippingTypeView} />\r\n                <Route exact path=\"/cartmanual/pickup/detail\" component={ShippingDetailView} />\r\n                <Route path=\"/cartmanual/pickup\" component={PickupSelectionView} />\r\n                <Route path=\"/cartmanual/shipping\" component={ShippingDateView} />\r\n                <Route path=\"/cartmanual/payment\" component={PaymentMethodView} />\r\n                <Route path=\"/cartmanual\" component={() => <CartManualLayout />} />\r\n                <Route path=\"/tracking\" component={() => <TrackingDeliveryLayout />} />\r\n                <Route exact path=\"/:username\" component={(props) => <ProductLayout {...props}/>} />\r\n                <Route path=\"/\" component={() => <StoreLayout />} />\r\n            </Switch>\r\n        </ScrollToTop>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Store.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js",["350","351"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MerchantResto = (props) => {\r\n  const merchantID = props.match.params.mid\r\n  const [longlat, setlonglat] = useState({});\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const _isMounted = useRef(true)\r\n\r\n  useEffect(() => {\r\n    // if (navigator.geolocation) { //SHUTDOWN FOR A WHILE\r\n    //   navigator.geolocation.getCurrentPosition(showPosition)\r\n    // } else {\r\n    //   alert('Geolocation is not supported by this browser.')\r\n    // }\r\n    // return () => {\r\n    //   _isMounted.current = false\r\n    // }\r\n\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    if (!props.match.params.address) {\r\n      setlonglat({ lat: latitude, lon: longitude })\r\n    }\r\n    dispatch({ type: 'ISMERCHANTQR', payload: true });\r\n  }, []);\r\n\r\n  // const showPosition = (position) => { //SHUTDOWN FOR A WHILE\r\n  //   let latitude = position.coords.latitude\r\n  //   let longitude = position.coords.longitude\r\n  //   let longlat = { lat: latitude, lon: longitude }\r\n  //   console.log(latitude, longitude);\r\n  //   localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  //   if (!props.match.params.address) {\r\n  //     setlonglat({ lat: latitude, lon: longitude })\r\n  //   }\r\n  // }\r\n\r\n  if (longlat.lat) {\r\n    history.push(\r\n      \"/store?mid=\" +\r\n      merchantID +\r\n      \"&table=\" +\r\n      props.match.params.notab\r\n    );\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default MerchantResto\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js",["352"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport StoreView from \"../View/Store/StoreView\";\r\nimport {\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport default class StoreLayout extends React.Component {\r\n  state = {\r\n    isLogin: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'white';\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"));\r\n      this.setState({ isLogin: auth.isLogged });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MainNavigation />\r\n        {\r\n          this.state.isLogin ?\r\n            <Container>\r\n              <div className='container2'>\r\n                <StoreView />\r\n              </div>\r\n            </Container>\r\n            :\r\n            // <Container className={\"resize-mobile-store\"}>\r\n            <Container>\r\n              <div className='container2'>\r\n                <StoreView />\r\n              </div>\r\n            </Container>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderDetailManualLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\FoodCourtQR.js",["353"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst FoodCourt = (props) => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let fcadd = props.match.params.address\r\n        // fcadd = fcadd.replace(/_/g, \" \")\r\n        localStorage.setItem('fctable', props.match.params.notab)\r\n        Cookies.set(\"fcaddress\", fcadd, { expires: 1 })\r\n        dispatch({ type: 'ISMERCHANTQR', payload: false });\r\n        history.push(\"/\");\r\n    }, []);\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default FoodCourt\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ManualTransaction.js",["354","355"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ManualTxn = (props) => {\r\n    // const merchantID = props.match.params.mid\r\n    const [longlat, setlonglat] = useState({});\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let latitude = -6.28862\r\n        let longitude = 106.71789\r\n        let longlat = { lat: latitude, lon: longitude }\r\n        console.log(latitude, longitude);\r\n        localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n        if (!props.match.params.address) {\r\n            setlonglat({ lat: latitude, lon: longitude })\r\n        }\r\n        dispatch({ type: 'ISMANUALTXN', payload: true });\r\n    }, []);\r\n\r\n    if (longlat.lat) {\r\n        history.push(\r\n            \"/store?username=\" +\r\n            props.match.params.username\r\n        );\r\n    }\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default ManualTxn\r\n",["356","357"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartManualLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderDetailLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusCartManualLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\TrackingDeliveryLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\PickupSelectionView.js",["358","359","360","361","362","363","364","365"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport ArrowGo from \"../../../Asset/Icon/arrowright-icon.png\";\r\nimport takeawayColor from '../../../Asset/Icon/takeawayColor.png'\r\nimport deliveryColor from '../../../Asset/Icon/delivery-icon.png'\r\nimport LocationIcon from '../../../Asset/Icon/location-icon.png'\r\nimport KurirIcon from '../../../Asset/Icon/kurir.png'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst PickupSelectionView = () => {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [pickUpChoice, setPickUpChoice] = useState([\r\n    {\r\n        image: \"takeaway\",\r\n        option: \"Pickup Sendiri\"\r\n    },\r\n    {\r\n        image: \"delivery\",\r\n        option: \"Dikirim\"\r\n    }\r\n    ])\r\n\r\n    const onChangeRadio = (ind) => {\r\n        dispatch({ type: 'PICKUPTYPE', payload: ind })\r\n    }\r\n\r\n    const goToAddress = () => {\r\n        history.push('./pickup/address')\r\n    }\r\n\r\n    const goToShipping = () => {\r\n        history.push('./pickup/shipping')\r\n    }\r\n\r\n    const handleShipperName = (e) => {\r\n        dispatch({ type: 'SHIPPERNAME', payload: e.target.value})\r\n    }\r\n\r\n    const handleShipperPrice= (e) => {\r\n        dispatch({ type: 'SHIPPERPRICE', payload: e.target.value })\r\n    }\r\n\r\n    const pickUpSelection = () => {\r\n        var pickUpRadioSelection = pickUpChoice.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"delivery\") {\r\n                imageOption = deliveryColor;\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                imageOption = takeawayColor;\r\n            }\r\n\r\n            return (\r\n                <div key={keyOption} className='pickup-detailContent'>\r\n                    <div className='pickup-radioSection'>\r\n                        <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption)} name={'PICKUPMETHOD'} defaultChecked={CartRedu.pickupType === keyOption ? true : false} />\r\n                        <label htmlFor={optionVal.image} style={{ borderBottomLeftRadius: CartRedu.pickupType === 1 ? \"0px\" : \"8px\", borderBottomRightRadius: CartRedu.pickupType === 1 ? \"0px\" : \"8px\" }}>\r\n                            <div className='pickup-radioSide'>\r\n                                <img className='pickupradio-image' src={imageOption} alt='' />\r\n                                <div className='pickup-radioTitle'>{optionVal.option}</div>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return pickUpRadioSelection\r\n    }\r\n\r\n    const shipperArea = () => {\r\n        return (\r\n            <div className=\"deliverySelection-layout\">\r\n                <div className=\"deliverySelection-input\" onClick={goToAddress}>\r\n                    <div className=\"deliverySelection-input-leftSide\">\r\n                        <span className=\"deliverySelection-locationIcon\">\r\n                            <img className=\"address-location-icon\" src={LocationIcon} />\r\n                        </span>\r\n\r\n                        <div className=\"deliverySelection-addressLayout\">\r\n                            <div className=\"deliverySelection-addressTitle\">\r\n                                { CartRedu.formattedAddress ? <></> : \"Alamat Pengiriman\" }\r\n                            </div>\r\n                            <div className=\"deliverySelection-addressInputted\">\r\n                                { CartRedu.formattedAddress ? <span className=\"deliverySelection-blackNotes\">{CartRedu.formattedAddress}</span> : \"Masukkan alamat pengiriman sekarang\" }\r\n                            </div>\r\n                            <div className=\"deliverySelection-addressInputted\">\r\n                                { CartRedu.shipperNotes ? <span className=\"deliverySelection-greenNotes\"><span className=\"deliverySelection-grayNotes\">{CartRedu.shipperNotes}</span></span> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <span className=\"deliverySelection-openIcon\">\r\n                        <img className=\"address-open-icon\" src={ArrowGo} />\r\n                    </span>\r\n                </div>\r\n\r\n                <div style={{display: CartRedu.formattedAddress ? 'flex': 'none'}} className=\"deliverySelection-input\" onClick={goToShipping}>\r\n                {/* <div className=\"deliverySelection-input\" onClick={goToShipping}> */}\r\n                    <div className=\"deliverySelection-input-leftSide\">\r\n                        <span className=\"deliverySelection-locationIcon\">\r\n                            <img className=\"address-location-icon\" src={KurirIcon} />\r\n                        </span>\r\n\r\n                        <div className=\"deliverySelection-addressLayout\">\r\n                            <div className=\"deliverySelection-addressTitle\">\r\n                                { CartRedu.shippingType ? <></> : \"Pilih Pengiriman\" }\r\n                            </div>\r\n                            <div className=\"deliverySelection-addressInputted\">\r\n                                { CartRedu.shippingType ? <span className=\"deliverySelection-blackNotes\">{CartRedu.shippingType} - {CartRedu.shippingName} (Rp {Intl.NumberFormat(\"id-ID\").format(CartRedu.shippingPrice)})</span> : null}\r\n                            </div>\r\n                            <div className=\"deliverySelection-addressInputted\">\r\n                                { CartRedu.shippingDesc ? <span className=\"deliverySelection-greenNotes\"><span className=\"deliverySelection-grayNotes\">{CartRedu.shippingDesc}</span></span> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <span className=\"deliverySelection-openIcon\">\r\n                        <img className=\"address-open-icon\" src={ArrowGo} />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if(CartRedu.pickupType === 0) {\r\n            // Save pickup takeaway data\r\n            if (JSON.parse(localStorage.getItem(\"MANUAL_SELECTED_PROMO\"))) {\r\n                let getSelectedPromo = JSON.parse(localStorage.getItem(\"MANUAL_SELECTED_PROMO\"))\r\n                let paymentTypeCookies = JSON.parse(localStorage.getItem(\"MANUAL_PAYMENT_TYPE\"))\r\n                let paymentType = paymentTypeCookies.paymentType\r\n                let totalPaymentManualCart = JSON.parse(Cookies.get(\"MANUAL_TOTALPAYMENT\"))\r\n                let promoMinPrice = parseInt(getSelectedPromo.promo_min_order)\r\n                if (getSelectedPromo.promo_payment_method.includes(paymentType) && getSelectedPromo.promo_shipment_method.includes(\"PICKUP\") && totalPaymentManualCart >= promoMinPrice) {\r\n                    Cookies.set(\"MANUAL_NOTMATCHPROMO\", { theBool: false })\r\n                } else {\r\n                    Cookies.set(\"MANUAL_NOTMATCHPROMO\", { theBool: true })\r\n                }\r\n            }\r\n            localStorage.removeItem(\"SHIPPERNOTES\")\r\n            localStorage.removeItem(\"SHIPPINGTYPE\")\r\n            localStorage.removeItem(\"SHIPPING_WITH_COURIER\")\r\n            localStorage.removeItem(\"FORMATTEDADDRESS\")\r\n            localStorage.removeItem(\"DISTRICT\")\r\n            localStorage.removeItem(\"CITY\")\r\n\r\n            localStorage.setItem(\"SHIPMENT_TYPE\", JSON.stringify({ shipmentType: \"PICKUP\", indexShipment: 0 }))\r\n            window.history.go(-1)\r\n        } else if(CartRedu.formattedAddress && CartRedu.shippingName && CartRedu.shippingPrice) {\r\n            // Save pickup delivery data\r\n            if (JSON.parse(localStorage.getItem(\"MANUAL_SELECTED_PROMO\"))) {\r\n                let getSelectedPromo = JSON.parse(localStorage.getItem(\"MANUAL_SELECTED_PROMO\"))\r\n                let paymentTypeCookies = JSON.parse(localStorage.getItem(\"MANUAL_PAYMENT_TYPE\"))\r\n                let paymentType = paymentTypeCookies.paymentType\r\n                let totalPaymentManualCart = JSON.parse(Cookies.get(\"MANUAL_TOTALPAYMENT\"))\r\n                let promoMinPrice = parseInt(getSelectedPromo.promo_min_order)\r\n                if (getSelectedPromo.promo_payment_method.includes(paymentType) && getSelectedPromo.promo_shipment_method.includes(\"DELIVERY\") && totalPaymentManualCart >= promoMinPrice) {\r\n                    Cookies.set(\"MANUAL_NOTMATCHPROMO\", { theBool: false })\r\n                } else {\r\n                    Cookies.set(\"MANUAL_NOTMATCHPROMO\", { theBool: true })\r\n                }\r\n            }\r\n            dispatch({ type: 'PICKUPTYPE', payload: 1 })\r\n            localStorage.setItem(\"SHIPMENT_TYPE\", JSON.stringify({ shipmentType: \"DELIVERY\", indexShipment: 1 }))\r\n            window.history.go(-1)\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        if(CartRedu.formattedAddress === \"\" && CartRedu.shippingName === \"\" && CartRedu.shippingPrice === \"\") {\r\n            dispatch({ type: 'PICKUPTYPE', payload: -1 })\r\n        }\r\n        window.history.go(-1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pickupSelection-layout\">\r\n                <div className=\"pickupSelection-topSide\">\r\n                    <div className=\"pickupSelection-header\">\r\n                        <span className=\"pickupSelection-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"pickupSelection-title\">Pilih Pengiriman</div>\r\n                    </div>\r\n\r\n                    {pickUpSelection()}\r\n                    {CartRedu.pickupType === 1 ? shipperArea() : null}\r\n                </div>\r\n\r\n                <div \r\n                    onClick={handleSave} \r\n                    className=\"pickupSelection-selectButton\" \r\n                    style={{backgroundColor: \r\n                        CartRedu.pickupType === 0 ? '#4bb7ac' \r\n                        : \r\n                        CartRedu.formattedAddress && CartRedu.shippingName && CartRedu.shippingPrice ? '#4bb7ac'\r\n                        : \r\n                        '#aaaaaa'}}\r\n                >Pilih</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickupSelectionView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js",["366","367","368"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport \"../../Asset/scss/AuthenticationLayout.scss\";\r\nimport ResetPinDialog from '../../Component/Authentication/ResetPin/ResetPinDialog';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ResetPin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const pintoken = props.match.params.pintoken;\r\n    const [showResetDialog, setShowResetDialog] = useState(true);\r\n\r\n    console.log(pintoken);\r\n    // const setMenuDetail = () => {\r\n        // setShowResetDialog(true);\r\n    // }\r\n\r\n    const resetPin = () => {\r\n        dispatch({ type: 'PINTOKEN', payload: pintoken });\r\n        if (showResetDialog) {\r\n            return (\r\n            <ResetPinDialog\r\n                isShowResetPin={showResetDialog}\r\n                onHideResetPin={() => setShowResetDialog(true)}\r\n            />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {resetPin()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPin\r\n// class ResetPinView extends React.Component {\r\n\r\n//     state = {\r\n//         showResetDialog : true\r\n//     }\r\n\r\n//     setMenuDetail(isShow) {\r\n//         this.setState({ showResetDialog: isShow })\r\n//         document.body.style.overflowY = ''\r\n//     }\r\n\r\n//     resetPin = () => {\r\n//         if (this.state.showResetDialog === true) {\r\n//           return (\r\n//             <ResetPinDialog\r\n//                 isShowResetPin={this.state.showResetDialog}\r\n//                 onHideResetPin={() => this.setMenuDetail(true)}\r\n//             />\r\n//           );\r\n//         }\r\n//     }\r\n\r\n//     render() { \r\n//         return (\r\n//             <>\r\n//             {this.resetPin()}\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n// export default connect(null, {LoadingButton, DoneLoad })(ResetPinView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Promo\\PromoView.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../../Asset/scss/PromoLayout.scss'\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport PromoAlert from \"../../Asset/Icon/ic_promo_alert.png\";\r\nimport takeawayColor from '../../Asset/Icon/takeawayColor.png'\r\nimport paymentColor from '../../Asset/Icon/CashierPayment.png'\r\nimport moment from \"moment\";\r\nimport Cookies from \"js-cookie\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nconst PromoView = () => {\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const location = useLocation()\r\n    const promoTitle = location.state.title\r\n    const promoAlert = location.state.alert\r\n    const alertStatus = location.state.alertStatus\r\n    const cartStatus = location.state.cartStatus\r\n    const [manualTxnVar, setManualTxnVar] = useState(0)\r\n    const declaredShipment = [\"PICKUP\", \"DELIVERY\", \"DINE_IN\"]\r\n    const declaredPayment = [\"PAY_BY_CASHIER\", \"WALLET_OVO\", \"WALLET_DANA\", \"WALLET_SHOPEEPAY\"]\r\n    const [promoListData, setPromoListData] = useState([\r\n        {\r\n            promo_title: \"PIKAPPTAHUNBARU 5rb\",\r\n            promo_period_start: \"2021-01-03T19:00:00\",\r\n            promo_period_end: \"2021-01-07T19:00:00\",\r\n            promo_min_order: \"20000\",\r\n            promo_max_discount: \"5000\",\r\n            promo_shipment_method: [\"DELIVERY\", \"PICKUP\", \"DINE_IN\"],\r\n            promo_payment_method: [\"PAY_BY_CASHIER\", \"WALLET_OVO\"]\r\n        },\r\n        {\r\n            promo_title: \"SPESIALKIRIM 15rb\",\r\n            promo_period_start: \"2021-02-04T19:00:00\",\r\n            promo_period_end: \"2021-02-08T19:00:00\",\r\n            promo_min_order: \"40000\",\r\n            promo_max_discount: \"15000\",\r\n            promo_shipment_method: [\"DELIVERY\", \"DINE_IN\"],\r\n            promo_payment_method: [\"PAY_BY_CASHIER\", \"WALLET_OVO\"]\r\n        },\r\n        {\r\n            promo_title: \"SPESIALKIRIM 25rb\",\r\n            promo_period_start: \"2021-02-04T19:00:00\",\r\n            promo_period_end: \"2021-02-08T19:00:00\",\r\n            promo_min_order: \"50000\",\r\n            promo_max_discount: \"25000\",\r\n            promo_shipment_method: [\"DINE_IN\"],\r\n            promo_payment_method: [\"PAY_BY_CASHIER\", \"WALLET_OVO\"]\r\n        },\r\n        {\r\n            promo_title: \"AMBILSENDIRI 10rb\",\r\n            promo_period_start: \"2021-03-05T19:00:00\",\r\n            promo_period_end: \"2021-03-09T19:00:00\",\r\n            promo_min_order: \"30000\",\r\n            promo_max_discount: \"10000\",\r\n            promo_shipment_method: [\"PICKUP\"],\r\n            promo_payment_method: [\"PAY_BY_CASHIER\"]\r\n        },\r\n        {\r\n            promo_title: \"AMBILSENDIRI 15rb\",\r\n            promo_period_start: \"2021-03-05T19:00:00\",\r\n            promo_period_end: \"2021-03-09T19:00:00\",\r\n            promo_min_order: \"50000\",\r\n            promo_max_discount: \"15000\",\r\n            promo_shipment_method: [\"PICKUP\"],\r\n            promo_payment_method: [\"WALLET_OVO\"]\r\n        },\r\n    ])\r\n    const [disabledPromoListData, setDisabledPromoListData] = useState([])\r\n    const [selectedPromo, setSelectedPromo] = useState(-1)\r\n    const [selectedPromoData, setSelectedPromoData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        var selectedPromoListContainer = []\r\n        var disabledPromoListContainer = []\r\n        let isManualTxn = Cookies.get(\"isManualTxn\")\r\n        setManualTxnVar(isManualTxn)\r\n        if (isManualTxn == 0) {\r\n            if (promoAlert == 0) {\r\n                selectedPromoListContainer = promoListData\r\n            } else {\r\n                promoListData.forEach(val => {\r\n                    let promoMinPrice = parseInt(val.promo_min_order)\r\n                    if (val.promo_payment_method.includes(cartStatus.paymentType) && val.promo_shipment_method.includes(cartStatus.bizType) && cartStatus.totalPayment >= promoMinPrice) {\r\n                        selectedPromoListContainer.push(val)\r\n                    } else {\r\n                        disabledPromoListContainer.push(val)\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            if (alertStatus.phoneNumber == \"0\" && alertStatus.paymentType == 0) {\r\n                selectedPromoListContainer = promoListData\r\n            } else if(alertStatus.phoneNumber == \"\" && alertStatus.paymentType == -1) {\r\n                selectedPromoListContainer = promoListData\r\n            } else {\r\n                promoListData.forEach(val => {\r\n                    let promoMinPrice = parseInt(val.promo_min_order)\r\n                    if (val.promo_shipment_method.includes(CartRedu.pickupTitleType) && val.promo_payment_method.includes(CartRedu.paymentTitleType) && cartStatus.totalPayment >= promoMinPrice) {\r\n                        selectedPromoListContainer.push(val)\r\n                    } else {\r\n                        disabledPromoListContainer.push(val)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setPromoListData(selectedPromoListContainer)\r\n        setDisabledPromoListData(disabledPromoListContainer)\r\n    }, [])\r\n\r\n    const selectPromo = (val, ind) => {\r\n        setSelectedPromoData(val)\r\n        setSelectedPromo(ind)\r\n    }\r\n\r\n    const shipmentMethod = (val) => {\r\n        var shipmentString = ''\r\n        if (val.length == 1) {\r\n            if (val[0] == \"PICKUP\") {\r\n                shipmentString = \"Pick Up\"\r\n            } else if(val[0] == \"TAKE_AWAY\") {\r\n                shipmentString = \"Pick Up\"\r\n            } else if(val[0] == \"DINE_IN\") {\r\n                shipmentString = \"Dine In\"\r\n            } else {\r\n                shipmentString += `${val[0].charAt(0).toUpperCase() + val[0].slice(1).toLocaleLowerCase()} `\r\n            }\r\n        } else {\r\n            val.forEach((el, ind) => {\r\n                if (el == \"PICKUP\") {\r\n                    if (ind == val.length-1) {\r\n                        shipmentString += `dan Pick Up`\r\n                    } else if(ind == val.length-2) {\r\n                        shipmentString += `Pick Up `\r\n                    } else {\r\n                        shipmentString += `Pick Up, `\r\n                    }\r\n                } else if(el == \"TAKE_AWAY\") {\r\n                    if (ind == val.length-1) {\r\n                        shipmentString += `dan Pick Up`\r\n                    } else if(ind == val.length-2) {\r\n                        shipmentString += `Pick Up `\r\n                    } else {\r\n                        shipmentString += `Pick Up, `\r\n                    }\r\n                } else if(el == \"DINE_IN\") {\r\n                    if (ind == val.length-1) {\r\n                        shipmentString += `dan Dine In`\r\n                    } else if(ind == val.length-2) {\r\n                        shipmentString += `Dine In `\r\n                    } else {\r\n                        shipmentString += `Dine In, `\r\n                    }\r\n                } else {\r\n                    if (ind == val.length-1) {\r\n                        shipmentString += `dan ${el.charAt(0).toUpperCase() + el.slice(1).toLocaleLowerCase()}`\r\n                    } else if(ind == val.length-2) {\r\n                        shipmentString += `${el.charAt(0).toUpperCase() + el.slice(1).toLocaleLowerCase()} `\r\n                    } else {\r\n                        shipmentString += `${el.charAt(0).toUpperCase() + el.slice(1).toLocaleLowerCase()}, `\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return shipmentString\r\n    }\r\n\r\n    const paymentMethod = (val) => {\r\n        var paymentString = ''\r\n        if (val.length == 1) {\r\n            if (val[0] == \"PAY_BY_CASHIER\") {\r\n                paymentString += \"Cash\"\r\n            } else {\r\n                let splittedPaymentMethod = val[0].split(\"WALLET_\")\r\n                paymentString += splittedPaymentMethod[1]\r\n            }\r\n        } else {\r\n            val.forEach((el, ind) => {\r\n                if (el == \"PAY_BY_CASHIER\") {\r\n                    if (ind == val.length-1) {\r\n                        paymentString += `dan Cash`\r\n                    } else if(ind == val.length-2) {\r\n                        paymentString += `Cash `\r\n                    } else {\r\n                        paymentString += `Cash, `\r\n                    }\r\n                } else {\r\n                    let splittedPaymentMethod = el.split(\"WALLET_\")\r\n                    if (ind == val.length-1) {\r\n                        paymentString += `dan ${splittedPaymentMethod[1]}`\r\n                    } else if(ind == val.length-2) {\r\n                        paymentString += `${splittedPaymentMethod[1]} `\r\n                    } else {\r\n                        paymentString += `${splittedPaymentMethod[1]}, `\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return paymentString\r\n    }\r\n\r\n    const disabledPromoListDeliveryTxn = () => {\r\n        return disabledPromoListData.map((val, ind) => {\r\n            return (\r\n                <div key={ind} className='promolistbox-section-disabled' >\r\n                    <input disabled id={val.promo_title} type='radio' value={val.promo_title} name=\"promoVoucher\" />\r\n                    <label htmlFor={val.promo_title}>\r\n                        <div className='promolist-side'>\r\n                            <div className='promolist-circle-name'>{val.promo_title}</div>\r\n    \r\n                            <div className='promolist-detail'>\r\n                                <div className='promolist-detail-period'>Periode: {moment(new Date(val.promo_period_start)).format(\"DD MMMM YYYY\")} - {moment(new Date(val.promo_period_end)).format(\"DD MMMM YYYY\")}</div>\r\n                                <div className='promolist-detail-minOrder'>Minimal order Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_min_order)}</div>\r\n                                <div className='promolist-detail-maxDiscount'>Maksimal diskon Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_max_discount)}</div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div className=\"promolist-bottomInfo-layout\">\r\n                            <div className=\"promolist-shipment-layout\">\r\n                                <div className=\"promolist-shipment-circleLayout\">\r\n                                    <img src={takeawayColor} className='promolist-shipment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-shipment-text\">\r\n                                    {shipmentMethod(val.promo_shipment_method)}\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"promolist-payment-layout\">\r\n                                <div className=\"promolist-payment-circleLayout\">\r\n                                    <img src={paymentColor} className='promolist-payment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-payment-text\">\r\n                                    {paymentMethod(val.promo_payment_method)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const disabledPromoListDineinTxn = () => {\r\n        return disabledPromoListData.map((val, ind) => {\r\n            return (\r\n                <div key={ind} className='promolistbox-section-disabled' >\r\n                    <input disabled id={val.promo_title} type='radio' value={val.promo_title} name=\"promoVoucher\" />\r\n                    <label htmlFor={val.promo_title}>\r\n                        <div className='promolist-side'>\r\n                            <div className='promolist-circle-name'>{val.promo_title}</div>\r\n    \r\n                            <div className='promolist-detail'>\r\n                                <div className='promolist-detail-period'>Periode: {moment(new Date(val.promo_period_start)).format(\"DD MMMM YYYY\")} - {moment(new Date(val.promo_period_end)).format(\"DD MMMM YYYY\")}</div>\r\n                                <div className='promolist-detail-minOrder'>Minimal order Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_min_order)}</div>\r\n                                <div className='promolist-detail-maxDiscount'>Maksimal diskon Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_max_discount)}</div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div className=\"promolist-bottomInfo-layout\">\r\n                            <div className=\"promolist-shipment-layout\">\r\n                                <div className=\"promolist-shipment-circleLayout\">\r\n                                    <img src={takeawayColor} className='promolist-shipment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-shipment-text\">\r\n                                    {shipmentMethod(val.promo_shipment_method)}\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"promolist-payment-layout\">\r\n                                <div className=\"promolist-payment-circleLayout\">\r\n                                    <img src={paymentColor} className='promolist-payment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-payment-text\">\r\n                                    {paymentMethod(val.promo_payment_method)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const promoPageListDeliveryTxn = () => {\r\n        return promoListData.map((val, ind) => {\r\n            return (\r\n                <div key={ind} className={alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1 ? 'promolistbox-section-disabled':'promolistbox-section'} >\r\n                    <input onClick={() => selectPromo(val, ind)} disabled={ promoAlert == 0 || alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1 } id={val.promo_title} type='radio' value={val.promo_title} name=\"promoVoucher\" />\r\n                    <label htmlFor={val.promo_title}>\r\n                        <div className='promolist-side'>\r\n                            <div className='promolist-circle-name'>{val.promo_title}</div>\r\n    \r\n                            <div className='promolist-detail'>\r\n                                <div className='promolist-detail-period'>Periode: {moment(new Date(val.promo_period_start)).format(\"DD MMMM YYYY\")} - {moment(new Date(val.promo_period_end)).format(\"DD MMMM YYYY\")}</div>\r\n                                <div className='promolist-detail-minOrder'>Minimal order Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_min_order)}</div>\r\n                                <div className='promolist-detail-maxDiscount'>Maksimal diskon Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_max_discount)}</div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div className=\"promolist-bottomInfo-layout\">\r\n                            <div className=\"promolist-shipment-layout\">\r\n                                <div className=\"promolist-shipment-circleLayout\">\r\n                                    <img src={takeawayColor} className='promolist-shipment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-shipment-text\">\r\n                                    {shipmentMethod(val.promo_shipment_method)}\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"promolist-payment-layout\">\r\n                                <div className=\"promolist-payment-circleLayout\">\r\n                                    <img src={paymentColor} className='promolist-payment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-payment-text\">\r\n                                    {paymentMethod(val.promo_payment_method)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const promoPageListDineinTxn = () => {\r\n        return promoListData.map((val, ind) => {\r\n            return (\r\n                <div key={ind} className={alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1 ? 'promolistbox-section-disabled':'promolistbox-section'} >\r\n                    <input onClick={() => selectPromo(val, ind)} disabled={ promoAlert == 0 || alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1 } id={val.promo_title} type='radio' value={val.promo_title} name=\"promoVoucher\" />\r\n                    <label htmlFor={val.promo_title}>\r\n                        <div className='promolist-side'>\r\n                            <div className='promolist-circle-name'>{val.promo_title}</div>\r\n    \r\n                            <div className='promolist-detail'>\r\n                                <div className='promolist-detail-period'>Periode: {moment(new Date(val.promo_period_start)).format(\"DD MMMM YYYY\")} - {moment(new Date(val.promo_period_end)).format(\"DD MMMM YYYY\")}</div>\r\n                                <div className='promolist-detail-minOrder'>Minimal order Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_min_order)}</div>\r\n                                <div className='promolist-detail-maxDiscount'>Maksimal diskon Rp {Intl.NumberFormat(\"id-ID\").format(val.promo_max_discount)}</div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div className=\"promolist-bottomInfo-layout\">\r\n                            <div className=\"promolist-shipment-layout\">\r\n                                <div className=\"promolist-shipment-circleLayout\">\r\n                                    <img src={takeawayColor} className='promolist-shipment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-shipment-text\">\r\n                                    {shipmentMethod(val.promo_shipment_method)}\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div className=\"promolist-payment-layout\">\r\n                                <div className=\"promolist-payment-circleLayout\">\r\n                                    <img src={paymentColor} className='promolist-payment-icon' alt='' />\r\n                                </div>\r\n                                <div className=\"promolist-payment-text\">\r\n                                    {paymentMethod(val.promo_payment_method)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const onSubmitPromo = () => {\r\n        if (selectedPromo != -1) {\r\n            if (manualTxnVar == 0) {\r\n                Cookies.set(\"NOTMATCHPROMO\", { theBool: false })\r\n                localStorage.setItem(\"SELECTED_PROMO\", JSON.stringify(selectedPromoData))\r\n            } else {\r\n                Cookies.set(\"MANUAL_NOTMATCHPROMO\", { theBool: false })\r\n                localStorage.setItem(\"MANUAL_SELECTED_PROMO\", JSON.stringify(selectedPromoData))\r\n            }\r\n            window.history.go(-1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"promoPage-layout\">\r\n                <div className=\"promoPage-topSide\">\r\n                    <div className=\"promoPage-header\">\r\n                        <span className=\"promoPage-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"promoPage-title\">{promoTitle}</div>\r\n                    </div>\r\n\r\n                    {\r\n                        promoAlert == 0 ?\r\n                        null\r\n                        :\r\n                            alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1 ?\r\n                            <div className=\"promo-alert-paymentnotselected\">\r\n                                <span className=\"promo-alert-icon\">\r\n                                    <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                                </span>\r\n\r\n                                <div className=\"promo-alert-title\">Pilih metode pengiriman dan pembayaran terlebih dahulu!</div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                    {\r\n                        promoListData.length > 0 ?\r\n                        <div className=\"selectedPromo-title\" style={{display: promoAlert == 0 || alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1? \"none\":\"block\"}} >\r\n                            Pilih 1\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    {\r\n                        manualTxnVar == 1 ?\r\n                        <div className='promoPage-section' style={{display: \"block\", marginBottom: disabledPromoListData.length == 0? \"45px\":\"0px\"}}>\r\n                            {promoPageListDeliveryTxn()}\r\n                        </div>\r\n                        :\r\n                        <div className='promoPage-section' style={{display: \"block\", marginBottom: disabledPromoListData.length == 0? \"45px\":\"0px\"}}>\r\n                            {promoPageListDineinTxn()}\r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"disabledPromo-title\" style={{display: disabledPromoListData.length == 0? \"none\":\"block\"}}>\r\n                        Voucher Tidak Dapat Dipilih\r\n                    </div>\r\n\r\n                    {\r\n                        manualTxnVar == 1 ?\r\n                        <div className='promoPage-section' style={{display: disabledPromoListData.length == 0? \"none\":\"block\", marginBottom: \"45px\"}}>\r\n                            {disabledPromoListDeliveryTxn()}\r\n                        </div>\r\n                        :\r\n                        <div className='promoPage-section' style={{display: disabledPromoListData.length == 0? \"none\":\"block\", marginBottom: \"45px\"}}>\r\n                            {disabledPromoListDineinTxn()}\r\n                        </div>\r\n                    }\r\n                    \r\n\r\n                    <div className='promoPage-button-layout' style={{display: promoAlert == 0? \"none\":\"flex\"}}>\r\n                        <div \r\n                        className='promoPage-button' \r\n                        style={{ \r\n                            backgroundColor: promoAlert == 0? \"#aaaaaa\" \r\n                            : \r\n                                alertStatus.phoneNumber == \"\" || alertStatus.paymentType == -1 ?\r\n                                \"#aaaaaa\"\r\n                                :\r\n                                selectedPromo == -1 ?\r\n                                \"#aaaaaa\"\r\n                                :\r\n                                \"#4bb7ac\" \r\n                            }}\r\n                        onClick={() => onSubmitPromo()}>\r\n                            Simpan\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PromoView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressInputView.js",["431"],"import React from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport LocationPoint from \"../../../Asset/Icon/location-point.png\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst AddressInputView = () => {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n\r\n    const handleFullAddress = (e) => {\r\n        dispatch({ type: 'FULLADDRESS', payload: e.target.value })\r\n        localStorage.setItem(\"FULLADDRESS\", JSON.stringify(e.target.value))\r\n    }\r\n\r\n    const handlePostalCode = (e) => {\r\n        dispatch({ type: 'POSTALCODE', payload: e.target.value })\r\n        localStorage.setItem(\"POSTALCODE\", JSON.stringify(e.target.value))\r\n    }\r\n\r\n    const handleShipperNotes = (e) => {\r\n        dispatch({ type: 'SHIPPERNOTES', payload: e.target.value })\r\n        localStorage.setItem(\"SHIPPERNOTES\", JSON.stringify(e.target.value))\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (CartRedu.fullAddress) {\r\n            window.history.go('-1')\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        dispatch({ type: 'FORMATTEDADDRESS', payload: \"\" })\r\n        localStorage.setItem(\"FORMATTEDADDRESS\", JSON.stringify(\"\"))\r\n        dispatch({ type: 'FULLADDRESS', payload: \"\" })\r\n        localStorage.setItem(\"FULLADDRESS\", JSON.stringify(\"\"))\r\n        dispatch({ type: 'POSTALCODE', payload: \"\" })\r\n        localStorage.setItem(\"POSTALCODE\", JSON.stringify(\"\"))\r\n        dispatch({ type: 'SHIPPERNOTES', payload: \"\" })\r\n        localStorage.setItem(\"SHIPPERNOTES\", JSON.stringify(\"\"))\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const goToMaps = () => {\r\n        history.push('./location')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pickupSelection-layout\">\r\n                <div className=\"pickupSelection-topSide\">\r\n                    <div className=\"pickupSelection-header\">\r\n                        <span className=\"pickupSelection-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"pickupSelection-title\">Alamat Pengiriman</div>\r\n                    </div>\r\n\r\n                    <div className=\"addressInput-fullAddress\">\r\n                        <div className=\"deliverySelection-input\" onClick={goToMaps}>\r\n                            <div className=\"deliverySelection-input-leftSide\">\r\n                                <span className=\"deliverySelection-locationIcon\">\r\n                                    <img className=\"address-location-icon\" src={LocationPoint} />\r\n                                </span>\r\n                                <div className=\"deliverySelection-addressLayout\">\r\n                                    <div className=\"deliverySelection-addressTitle\">\r\n                                        { CartRedu.formattedAddress ? <></> : \"Alamat Pengiriman\" }\r\n                                    </div>\r\n                                    <div className=\"deliverySelection-addressInputted\">\r\n                                        { CartRedu.formattedAddress ? <span className=\"deliverySelection-blackNotes\">{CartRedu.formattedAddress}</span> : \"Masukkan alamat pengiriman sekarang\" }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"addressInput-fullAddress\">\r\n                        <div className=\"addressInput-fullAddress-title\">Alamat Lengkap <span style={{color: \"red\"}}>*</span></div>\r\n                        <textarea id=\"note\" className=\"addressInput-fullAddress-inputArea\" placeholder=\"Masukkan Alamat Lengkap\" onChange={handleFullAddress} defaultValue={CartRedu.fullAddress} />\r\n                    </div>\r\n\r\n                    <div className=\"addressInput-fullAddress\">\r\n                        <div className=\"addressInput-fullAddress-title\">Kode Pos <span style={{color: \"red\"}}>*</span></div>\r\n                        <input className=\"deliverySelection-shipperName-inputArea\" placeholder=\"Masukkan Kode Pos\" onChange={handlePostalCode} defaultValue={CartRedu.postalCode} />\r\n                    </div>\r\n\r\n                    <div className=\"addressInput-shipperNotes\">\r\n                        <div className=\"addressInput-shipperNotes-title\">Catatan untuk Kurir</div>\r\n                        <textarea id=\"note\" className=\"addressInput-shipperNotes-inputArea\" placeholder=\"Masukkan catatan untuk kurir\" onChange={handleShipperNotes} defaultValue={CartRedu.shipperNotes}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={handleSave} className=\"addressInput-selectButton\" style={{backgroundColor: CartRedu.formattedAddress && CartRedu.fullAddress &&  CartRedu.postalCode ? '#4bb7ac' : '#aaaaaa'}}>Simpan</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressInputView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressMapsView.js",["432","433","434","435","436","437","438","439","440"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport SearchIcon from \"../../../Asset/Icon/search.png\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'\r\nimport MapsComponent from \"../../../Master/MapsLayout/MapsComponent\";\r\nimport CurrentLocationIcon from \"../../../Asset/Icon/current-location.png\";\r\n\r\nconst AddressMapsView = () => {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [formattedAddress, setFormattedAddress] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if(CartRedu.formattedAddress !== \"\") {\r\n            setFormattedAddress(CartRedu.formattedAddress);\r\n        } \r\n    }, [CartRedu.formattedAddress])\r\n\r\n    const handleSave = () => {\r\n        if (CartRedu.formattedAddress) {\r\n            window.history.go(-1)\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const goToAddress = () => {\r\n        history.push('./search')\r\n    }\r\n\r\n    const setCurrentLocation = () => {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                dispatch({ type: 'CENTER', payload: [position.coords.latitude, position.coords.longitude] })\r\n                dispatch({ type: 'LAT', payload: position.coords.latitude })\r\n                localStorage.setItem(\"LAT\", JSON.stringify(position.coords.latitude))\r\n                dispatch({ type: 'LNG', payload: position.coords.longitude })\r\n                localStorage.setItem(\"LNG\", JSON.stringify(position.coords.longitude))\r\n                dispatch({ type: 'ISMARKERCHANGE', payload: false })\r\n            });\r\n        }\r\n        _generateAddress();\r\n    }\r\n\r\n    const _generateAddress = () => {\r\n        const mapApi = CartRedu.mapApi;\r\n\r\n        const geocoder = new mapApi.Geocoder;\r\n\r\n        geocoder.geocode({ 'location': { lat: CartRedu.lat, lng: CartRedu.lng } }, (results, status) => {\r\n            if (status === 'OK') {\r\n                if (results[0]) {\r\n                    results[0].address_components.map((res) => {\r\n                        if(res.types[0] == \"administrative_area_level_3\") {\r\n                            dispatch({ type: 'DISTRICT', payload: res.short_name })\r\n                            localStorage.setItem(\"DISTRICT\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"postal_code\") {\r\n                            dispatch({ type: 'POSTALCODE', payload: res.short_name })\r\n                            localStorage.setItem(\"POSTALCODE\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_2\") {\r\n                            dispatch({ type: 'CITY', payload: res.short_name })\r\n                            localStorage.setItem(\"CITY\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_1\") {\r\n                            dispatch({ type: 'PROVINCE', payload: res.short_name })\r\n                            localStorage.setItem(\"PROVINCE\", JSON.stringify(res.short_name))\r\n                        }\r\n                    })\r\n\r\n                    dispatch({ type: 'FORMATTEDADDRESS', payload: results[0].formatted_address })\r\n                    localStorage.setItem(\"FORMATTEDADDRESS\", JSON.stringify(results[0].formatted_address))\r\n                    setFormattedAddress(results[0].formatted_address)\r\n                } else {\r\n                    window.alert('No results found');\r\n                }\r\n            } else {\r\n                window.alert('Geocoder failed due to: ' + status);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pickupSelection-layout\">\r\n                <div className=\"pickupSelection-topSide\">\r\n                    <div className=\"pickupSelection-header\">\r\n                        <span className=\"pickupSelection-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"pickupSelection-title\">Lokasi Pengiriman</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{marginTop: CartRedu.isMarkerChange ? '0px' : null}} className=\"main-wrapper-maps\">\r\n                    <MapsComponent />\r\n                </div>\r\n\r\n                {/* <div style={{display: CartRedu.isMarkerChange ? 'block' : 'none'}} className='addressmaps-currentlocation-sec' onClick={() => setCurrentLocation()}>\r\n                    <div className='addressmaps-location-title'>\r\n                        <img className='addressmaps-location-logo' src={CurrentLocationIcon} alt='' />\r\n                        <div className='addressmaps-location-mainName'>\r\n                            Gunakan Lokasi Saat Ini\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div style={{marginTop: CartRedu.isMarkerChange ? '30px' : '0px'}} className='addressmaps-locationinfo' onClick={goToAddress}>\r\n                    <div className='addressmaps-section'>\r\n                        <div className='addressmaps-title'>\r\n                            <div className='addressmaps-titlename'>\r\n                                <div className='addressmaps-mainname'>\r\n                                    {CartRedu.formattedAddress}\r\n                                </div>\r\n\r\n                                <div className='addressmaps-detailinfo'>\r\n                                    <div className='addressmaps-detailinfo-text'>\r\n                                        {CartRedu.district}, {CartRedu.city}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='addressmaps-icon-sec'>\r\n                            <div className='addressmaps-icon'>\r\n                            <span className='addressmaps-search'>\r\n                                <img className='addressmaps-search-img' src={SearchIcon} alt='' />\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div onClick={handleSave} className=\"addressInput-selectButton\" style={{backgroundColor: CartRedu.formattedAddress ? '#4bb7ac' : '#aaaaaa'}}>Pilih Lokasi Saat Ini</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressMapsView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressSearchView.js",["441","442","443","444","445","446","447","448","449"],"import React from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport LocationPoint from \"../../../Asset/Icon/location-point.png\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AutoComplete from '../../../Master/MapsLayout/AutoCompleteComponent';\r\nimport CurrentLocationIcon from \"../../../Asset/Icon/current-location.png\";\r\n\r\nconst AddressSearchView = () => {\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n\r\n    const handleSave = () => {\r\n        if (CartRedu.formattedAddress) {\r\n            window.history.go(-1)\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        dispatch({ type: 'FULLADDRESS', payload: \"\" })\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const addPlace = (place) => {\r\n        dispatch({ type: 'PLACES', payload: [place] })\r\n        dispatch({ type: 'LAT', payload: place.geometry.location.lat() })\r\n        localStorage.setItem(\"LAT\", JSON.stringify(place.geometry.location.lat()))\r\n        dispatch({ type: 'LNG', payload: place.geometry.location.lng() })\r\n        localStorage.setItem(\"LNG\", JSON.stringify(place.geometry.location.lng()))\r\n        dispatch({ type: 'ISMARKERCHANGE', payload: true })\r\n    };\r\n\r\n    const setCurrentLocation = () => {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                dispatch({ type: 'CENTER', payload: [position.coords.latitude, position.coords.longitude] })\r\n                dispatch({ type: 'LAT', payload: position.coords.latitude })\r\n                localStorage.setItem(\"LAT\", JSON.stringify(position.coords.latitude))\r\n                dispatch({ type: 'LNG', payload: position.coords.longitude })\r\n                localStorage.setItem(\"LNG\", JSON.stringify(position.coords.longitude))\r\n                dispatch({ type: 'STREETNUMBER', payload: \"\"})\r\n                dispatch({ type: 'STREETNAME', payload: \"\" })\r\n                dispatch({ type: 'ISMARKERCHANGE', payload: false })\r\n            });\r\n        }\r\n        _generateAddress();\r\n    }\r\n\r\n    const _generateAddress = () => {\r\n        const mapApi = CartRedu.mapApi;\r\n\r\n        const geocoder = new mapApi.Geocoder;\r\n\r\n        geocoder.geocode({ 'location': { lat: CartRedu.lat, lng: CartRedu.lng } }, (results, status) => {\r\n            if (status === 'OK') {\r\n                if (results[0]) {\r\n                    results[0].address_components.map((res) => {\r\n                        if(res.types[0] == \"street_number\") {\r\n                            dispatch({ type: 'STREETNUMBER', payload: \"No. \" + res.short_name })\r\n                        }\r\n                        if(res.types[0] == \"route\") {\r\n                            dispatch({ type: 'STREETNAME', payload: res.short_name })\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_3\") {\r\n                            dispatch({ type: 'DISTRICT', payload: res.short_name })\r\n                            localStorage.setItem(\"DISTRICT\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"postal_code\") {\r\n                            dispatch({ type: 'POSTALCODE', payload: res.short_name })\r\n                            localStorage.setItem(\"POSTALCODE\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_2\") {\r\n                            dispatch({ type: 'CITY', payload: res.short_name })\r\n                            localStorage.setItem(\"CITY\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_1\") {\r\n                            dispatch({ type: 'PROVINCE', payload: res.short_name })\r\n                            localStorage.setItem(\"PROVINCE\", JSON.stringify(res.short_name))\r\n                        }\r\n                    })\r\n\r\n                    dispatch({ type: 'FORMATTEDADDRESS', payload: results[0].formatted_address.split(\",\")[0] })\r\n                    localStorage.setItem(\"FORMATTEDADDRESS\", JSON.stringify(results[0].formatted_address.split(\",\")[0]))\r\n                    dispatch({ type: 'CENTER', payload: [CartRedu.lat, CartRedu.lng] })\r\n                    dispatch({ type: 'SEARCHINPUT', payload: results[0].formatted_address })\r\n                } else {\r\n                    window.alert('No results found');\r\n                }\r\n            } else {\r\n                window.alert('Geocoder failed due to: ' + status);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pickupSelection-layout\">\r\n                <div className=\"pickupSelection-topSide\">\r\n                    <div className=\"pickupSelection-header\">\r\n                        <span className=\"pickupSelection-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"pickupSelection-title\">Cari Lokasi Pengiriman</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"main-wrapper-places\">\r\n                    <AutoComplete map={CartRedu.mapInstance} mapApi={CartRedu.mapApi} addplace={addPlace} />\r\n\r\n                    <div className='addresssearch-currentlocation-sec' onClick={() => setCurrentLocation()}>\r\n                        <div className='addresssearch-location-title'>\r\n                            <img className='addresssearch-location-logo' src={CurrentLocationIcon} alt='' />\r\n                            <div className='addresssearch-location-mainName'>\r\n                                Gunakan Lokasi Saat Ini\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={handleSave} className=\"addressInput-selectButton\" style={{backgroundColor: CartRedu.formattedAddress ? '#4bb7ac' : '#aaaaaa'}}>Pilih Lokasi</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressSearchView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\PaymentSelection\\PaymentMethodView.js",["450","451","452","453"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport takeawayColor from '../../../Asset/Icon/takeawayColor.png'\r\nimport deliveryColor from '../../../Asset/Icon/delivery-icon.png'\r\nimport OvoPayment from '../../../Asset/Icon/ovo_icon.png';\r\nimport DanaPayment from \"../../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../../Asset/Icon/shopee_icon.png\";\r\nimport Alertcircle from '../../../Asset/Icon/alertcircle.png'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst PaymentMethodView = () => {\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [ewallet, setEwallet] = useState([\r\n        {\r\n            image: \"ovo\",\r\n            option: \"OVO\"\r\n        },\r\n        {\r\n            image: \"dana\",\r\n            option: \"DANA\"\r\n        },\r\n        {\r\n            image: \"shopee\",\r\n            option: \"ShopeePay\"\r\n        }\r\n        ])\r\n    const [isCheckNumber, setisCheckNumber] = useState(true)\r\n    const [isAlertNumber, setisAlertNumber] = useState(\"\")\r\n    const [phoneNum, setphoneNum] = useState(CartRedu.phoneNumber)\r\n    const [paymentMethod, setPaymentMethod] = useState(CartRedu.paymentMethod)\r\n\r\n    const handleSave = () => {\r\n        if (CartRedu.paymentType === 0 && phoneNum && isAlertNumber === \"\") {\r\n            dispatch({ type: 'PHONENUMBER', payload: phoneNum })\r\n            dispatch({ type: 'PAYMENTMETHOD', payload: paymentMethod })\r\n            localStorage.setItem(\"MANUAL_PAYMENT_TYPE\", JSON.stringify({ paymentType: \"WALLET_OVO\", indexPayment: 0 }))\r\n            localStorage.setItem(\"MANUAL_PHONE_NUMBER\", JSON.stringify({ phoneNumber: phoneNum }))\r\n            window.history.go(-1)\r\n        } else if(CartRedu.paymentType === -1) {\r\n            console.log(\"CANNOT GO THROUGH\")\r\n        } else {\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n            dispatch({ type: 'PAYMENTMETHOD', payload: paymentMethod })\r\n            localStorage.setItem(\"MANUAL_PAYMENT_TYPE\", JSON.stringify({ paymentType: `WALLET_${paymentMethod.toUpperCase()}`, indexPayment: CartRedu.paymentType }))\r\n            localStorage.setItem(\"MANUAL_PHONE_NUMBER\", JSON.stringify({ phoneNumber: \"\" }))\r\n            window.history.go(-1)\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        if (!CartRedu.paymentMethod) {\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n            dispatch({ type: 'PAYMENTTYPE', payload: -1 })\r\n            dispatch({ type: 'PAYMENTMETHOD', payload: \"\" })\r\n        }\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const onChangeRadio = (ind, option) => {\r\n        dispatch({ type: 'PAYMENTTYPE', payload: ind })\r\n        setPaymentMethod(option);\r\n    }\r\n\r\n    const hideTooltip = () => {\r\n        setTimeout(() => {\r\n            ReactTooltip.hide()\r\n        }, 3000);\r\n    }\r\n\r\n    const onChangeNumber = (e) => {\r\n        let reg = /^(?!00)(?!01)(?!02)(?!03)(?!04)(?!05)(?!06)(?!07)(?!09)[0][0-9]\\d{0,12}$/\r\n        let checkNumber = reg.test(e.target.value)\r\n        setphoneNum(e.target.value)\r\n        if (checkNumber) {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('')\r\n        } else if (e.target.value === '') {\r\n            setisCheckNumber(false)\r\n            setisAlertNumber('Nomor harus diisi')\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n        } else {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('Masukkan nomor dengan benar')\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n        }\r\n    }\r\n\r\n    const ewalletPaymentOption = () => {\r\n        var ewalletRadioSelection = ewallet.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"gopay\") {\r\n                imageOption = deliveryColor;\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            } else if (optionVal.image === \"dana\") {\r\n                imageOption = DanaPayment;\r\n            } else if (optionVal.image === \"shopee\") {\r\n                imageOption = ShopeePayment;\r\n            }\r\n\r\n            return (\r\n                <div key={keyOption} className='payment-detailContent'>\r\n                    <div className='payment-radioSection'>\r\n                        <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, optionVal.option)} name={'PAYMENTMETHOD'} defaultChecked={CartRedu.paymentType === keyOption ? true : false} />\r\n                        <label htmlFor={optionVal.image}>\r\n                            <div className='payment-radioSide'>\r\n                                <img className='paymentradio-image' src={imageOption} alt='' />\r\n                                <div className='payment-radioTitle'>{optionVal.option}</div>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    {\r\n                        CartRedu.paymentType === 0 && keyOption === 0 ?\r\n                        <div className='ovoNumber-layout'>\r\n                            <div className='payment-ovoNumber-topSide'>\r\n                                <div className='payment-ovoNumber-title'>\r\n                                    Masukkan Nomor Anda\r\n                                </div>\r\n\r\n                                <a data-tip='Masukkan Nomor Yang Terdaftar Di OVO Untuk Melakukan Pembayaran' data-event='click'><img src={Alertcircle} className='payment-alertImg' alt='' /></a>\r\n                                <ReactTooltip className='payment-extraClass' effect='solid' arrowColor='#F8FAFC' globalEventOff='click' afterShow={() => hideTooltip()} />\r\n                            </div>\r\n\r\n                            <input defaultValue={CartRedu.phoneNumber} type='number' inputMode='numeric' className='payment-ovoNumber-bottomSide' onChange={onChangeNumber} style={{ borderBottom: !isCheckNumber ? '0.5px solid #DC6A84' : '0.5px solid #D9CECE', color: !isCheckNumber ? '#DC6A84' : '#111111' }} />\r\n                            {\r\n                                isAlertNumber !== '' ?\r\n                                    <h4 className='payment-ovoNumber-alert'>\r\n                                        {isAlertNumber}\r\n                                    </h4>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return ewalletRadioSelection\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"paymentMethod-layout\">\r\n                <div className=\"paymentMethod-header\">\r\n                    <span className=\"paymentMethod-backArrow\" onClick={goBack}>\r\n                        <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                    </span>\r\n                    <div className=\"paymentMethod-title\">Metode Pembayaran</div>\r\n                </div>\r\n\r\n                <div className=\"ewallet-layout\">\r\n                    <div className=\"ewallet-title\">E-Wallet</div>\r\n                    {ewalletPaymentOption()}\r\n                </div>\r\n\r\n                <div className=\"paymentMethod-buttonLayout\">\r\n                    <div \r\n                        onClick={handleSave} \r\n                        className=\"paymentMethod-selectButton\" \r\n                        style={{backgroundColor: \r\n                            CartRedu.paymentType === -1 ? '#aaaaaa'\r\n                            :\r\n                            CartRedu.paymentType >= 0 ? '#4bb7ac' \r\n                            : \r\n                            CartRedu.phoneNumber ? '#4bb7ac'\r\n                            :\r\n                            '#aaaaaa'}}\r\n                    >Simpan</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentMethodView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\ShippingSelection\\ShippingTypeView.js",["454","455","456","457","458","459","460"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport LocationPoint from \"../../../Asset/Icon/location-point.png\";\r\nimport NoDataCourier from \"../../../Asset/Icon/nodata-courier.png\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Cookies from \"js-cookie\"\r\nimport Axios from \"axios\";\r\nimport { addressShipping, clientId } from \"../../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Loader from 'react-loader';\r\n\r\nconst options = {\r\n    lines: 13,\r\n    length: 20,\r\n    width: 10,\r\n    radius: 30,\r\n    scale: 0.25,\r\n    corners: 1,\r\n    color: '#000',\r\n    opacity: 0.25,\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    trail: 60,\r\n    fps: 20,\r\n    shadow: false,\r\n    hwaccel: false,\r\n};\r\n\r\nconst ShippingTypeView = () => {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [product, setProduct] = useState([])\r\n    const [shippinglist, setShippingList] = useState([])\r\n    const [courierlist, setCourierList] = useState([])\r\n    const [noDataCourier, setNoDataCourier] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let allProduct = [];\r\n        let currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"));\r\n\r\n        let cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        cart.shift();\r\n        cart[0].food.map((prod) => {\r\n            return allProduct.push({\r\n                name: prod.foodName,\r\n                quantity: prod.foodAmount,\r\n                value : prod.foodTotalPrice\r\n            });\r\n        })\r\n\r\n        setProduct(allProduct);\r\n\r\n        let req = {\r\n            destination_latitude : CartRedu.lat,\r\n            destination_longitude : CartRedu.lng,\r\n            items : allProduct\r\n        }\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        \r\n        Axios(addressShipping + `/api/transaction/courier-pricing`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"merchant-id\": currentCartMerchant.mid,\r\n                \"x-request-id\": uuid,\r\n                \"x-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"x-token\" : \"PUBLIC\"\r\n            },\r\n            method: 'POST',\r\n            data : req\r\n        }).then(res => {\r\n            let response = []\r\n            \r\n            if(res.data.err_code !== \"404\" && res.data.result.length !== 0) {\r\n                res.data.result.map((ship, ind) => {\r\n                    let courierList = []\r\n                    ship.courier_list.forEach(cour => {\r\n                        courierList.push({\r\n                            courier_code: cour.courier_code,\r\n                            courier_image: cour.courier_image,\r\n                            description: cour.description,\r\n                            name: cour.name,\r\n                            price: cour.price,\r\n                            service_name: cour.service_name,\r\n                            service_type: cour.service_type,\r\n                            imagestatus: false\r\n                        })\r\n                    })\r\n                    response.push({\r\n                        categShip : ship.name,\r\n                        lowerLimit : ship.lower_limit,\r\n                        upperLimit : ship.upper_limit,\r\n                        description : ship.description,\r\n                        shipId : ind,\r\n                        courierList : courierList \r\n                    })\r\n                })\r\n    \r\n                setShippingList(response);\r\n            } else {\r\n                setNoDataCourier(true);\r\n            }\r\n            \r\n            setIsLoading(true);\r\n        }).catch(err => { \r\n            console.log(err);\r\n            setNoDataCourier(true);\r\n            setIsLoading(true);\r\n        })\r\n\r\n    }, [])\r\n\r\n    const handleSave = (shippingtype, courier) => {\r\n        dispatch({ type: 'SHIPPINGTYPE', payload: shippingtype })\r\n        localStorage.setItem(\"SHIPPINGTYPE\", JSON.stringify(shippingtype))\r\n        dispatch({ type: 'COURIERLIST', payload: courier })\r\n        history.push('./detail')\r\n    }\r\n\r\n    const goBack = () => {\r\n        if(CartRedu.shippingName === \"\") {\r\n            dispatch({ type: 'SHIPPINGTYPE', payload: \"\" })\r\n            localStorage.setItem(\"SHIPPINGTYPE\", JSON.stringify(\"\"))\r\n        }\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const shippingTypeList = () => {\r\n        return shippinglist.map((ship, ind) => {\r\n            return (\r\n                <div key={ind} className='shippingSelection-eachList' onClick={() => handleSave(ship.categShip, ship.courierList)}>\r\n\r\n                    <div className=\"shippingSelection-titleLayout\">\r\n                        <div className=\"shippingSelection-shippingName\">\r\n                            <span className=\"shippingSelection-blackNotes\">{ship.categShip} \r\n                            {\r\n                                ship.lowerLimit === 0 ?\r\n                                <span> (Rp {Intl.NumberFormat(\"id-ID\").format(ship.upperLimit)})</span>\r\n                                :\r\n                                <span>\r\n                                    (Rp {Intl.NumberFormat(\"id-ID\").format(ship.lowerLimit)} - Rp {Intl.NumberFormat(\"id-ID\").format(ship.upperLimit)})\r\n                                </span>\r\n                            }\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"shippingSelection-shippingDetail\">\r\n                            <span className=\"shippingSelection-grayNotes\">{ship.description}</span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <Loader loaded={isLoading} options={options} className=\"spinner\"/>\r\n            <div className=\"shippingSelection-layout\">\r\n                <div className=\"shippingSelection-topSide\">\r\n                    <div className=\"shippingSelection-header\">\r\n                        <span className=\"shippingSelection-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"shippingSelection-title\">Pilih Kurir</div>\r\n                    </div>\r\n                    <div style={{display: noDataCourier ? 'flex' : 'block'}} className='shippingSelection-section'>\r\n                        { noDataCourier ?\r\n                        <img src={NoDataCourier} className=\"shippingSelection-nodata\"></img>\r\n                        :\r\n                        shippingTypeList()\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShippingTypeView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\ShippingSelection\\ShippingDetailView.js",["461","462","463","464","465","466","467","468"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport LocationPoint from \"../../../Asset/Icon/location-point.png\";\r\nimport CheckIcon from \"../../../Asset/Icon/check.png\";\r\nimport GojekLogo from \"../../../Asset/Icon/gojek-logo.png\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ShippingDetailView = () => {\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [radioStatus, setradioStatus] = useState(0)\r\n    const [courierChecked, setCourierChecked] = useState(false)\r\n    const [dataIndex, setDataIndex] = useState(null)\r\n    const [courierName, setCourierName] = useState(\"\")\r\n    const [courierPrice, setCourierPrice] = useState(0)\r\n    const [courierDesc, setCourierDesc] = useState(0)\r\n    const [courierService, setCourierService] = useState(\"\")\r\n    const [courierCode, setCourierCode] = useState(\"\")\r\n    const [courierList, setCourierList] = useState([])\r\n\r\n    useEffect(() => {\r\n        CartRedu.courierList.map((ship, ind) => {\r\n            if(CartRedu.shippingName !== \"\") {\r\n                if(ship.name === CartRedu.shippingName) {\r\n                    setDataIndex(ind);\r\n                    ship.imagestatus = true;\r\n                    setCourierName(ship.name);\r\n                    setCourierPrice(ship.price);\r\n                    setCourierDesc(ship.description);\r\n                    setCourierService(ship.service_type);\r\n                    setCourierCode(ship.courier_code);\r\n                }\r\n            }\r\n        })\r\n        setCourierList(CartRedu.courierList);\r\n    }, [courierList])\r\n\r\n    const handleSave = () => {\r\n        let shippingWithCourier = {\r\n            shippingName: courierName,\r\n            shippingPrice: courierPrice,\r\n            shippingDesc: courierDesc,\r\n            courierServiceType: courierService,\r\n            shippingCode: courierCode,\r\n            insuranceCheckbox: false,\r\n            insurancePrice: 0\r\n        }\r\n        localStorage.setItem(\"SHIPPING_WITH_COURIER\", JSON.stringify(shippingWithCourier))\r\n        dispatch({ type: 'SHIPPINGNAME', payload: courierName });\r\n        dispatch({ type: 'SHIPPINGPRICE', payload: courierPrice });\r\n        dispatch({ type: 'SHIPPINGDESC', payload: courierDesc });\r\n        dispatch({ type: 'COURIERSERVICETYPE', payload: courierService });\r\n        dispatch({ type: 'SHIPPINGCODE', payload: courierCode });\r\n        dispatch({ type: 'INSURANCECHECKBOX', payload: false });\r\n        dispatch({ type: 'INSURANCEPRICE', payload: 0 });\r\n        window.history.go('-2')\r\n    }\r\n\r\n    const onChangeRadio = (ind, courier, index) => {\r\n        setradioStatus(ind)\r\n        setCourierChecked(true);\r\n        if(index === null ) {\r\n            setDataIndex(index);\r\n            courier.imagestatus = true;\r\n        } else if (index !== dataIndex) {\r\n            courierList.map((ship, ind) => {\r\n                if(ind === dataIndex) {\r\n                    ship.imagestatus = false;\r\n                }\r\n            })\r\n            setDataIndex(index);\r\n            courier.imagestatus = true;\r\n        }\r\n        setCourierName(courier.name);\r\n        setCourierPrice(courier.price);\r\n        setCourierDesc(courier.description);\r\n        setCourierService(courier.service_type);\r\n        setCourierCode(courier.courier_code);\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const shippingDetailList = () => {\r\n        return courierList.map((courier, ind) => {\r\n            return (\r\n                <div key={ind} className='shippingDetail-eachList' onClick={() => onChangeRadio(1, courier, ind)}>\r\n\r\n                    <div className=\"shippingDetail-titleLayout\">\r\n                        <div>\r\n                            <img className='shippingDetail-courier-logo' src={courier.courier_image} alt='' />\r\n                        </div>\r\n                        <div>\r\n                        <div className=\"shippingDetail-shippingName\">\r\n                            <span className=\"shippingDetail-blackNotes\">{courier.name} (Rp {Intl.NumberFormat(\"id-ID\").format(courier.price)}) </span>\r\n                        </div>\r\n                        <div className=\"shippingDetail-shippingDetail\">\r\n                            <span className=\"shippingDetail-grayNotes\">{courier.description}</span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='shippingDetail-radioButton'>\r\n                        <img style={{display: courier.imagestatus ? null : 'none'}} class=\"shippingDetail-checkimg\" src={CheckIcon} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"shippingDetail-layout\">\r\n                <div className=\"shippingDetail-topSide\">\r\n                    <div className=\"shippingDetail-header\">\r\n                        <span className=\"shippingDetail-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"shippingDetail-title\">Pilih Kurir</div>\r\n                    </div>\r\n                    <div className='shippingDetail-section'>\r\n                        {shippingDetailList()}\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div onClick={handleSave} className=\"shippingDetail-selectButton\" style={{backgroundColor: courierName ? '#4bb7ac' : '#aaaaaa'}}>Pilih</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShippingDetailView","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\ShippingDate\\ShippingDateView.js",["469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport ShippingDate from \"../../../Asset/Icon/shipping-date.png\";\r\nimport PromoAlert from \"../../../Asset/Icon/ic_promo_alert.png\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from \"moment\";\r\nimport idLocale from \"moment/locale/id\";\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\nimport Cookies from \"js-cookie\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport { address, clientId } from \"../../../Asset/Constant/APIConstant\";\r\n\r\nconst ShippingDateView = () => {\r\n    const ref = useRef();\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [choiceDate, setChoiceDate] = useState(false)\r\n    const [currentDate, setCurrentDate] = useState(\"\");\r\n    const [currentTime, setCurrentTime] = useState(\"\");\r\n    const [closeTime, setCloseTime] = useState(\"\");\r\n    const [closeOrOpen, setCloseOrOpen] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n    const [selectedTime, setSelectedTime] = useState(\"\");\r\n    const [isTomorrow, setIsTomorrow] = useState(false);\r\n    const [pickUpChoice, setPickUpChoice] = useState([\r\n    {\r\n        image: \"now\",\r\n        option: \"Sekarang\"\r\n    },\r\n    {\r\n        image: \"custom\",\r\n        option: \"Custom Tanggal\"\r\n    }\r\n    ])\r\n    const [merchantHourStatus, setMerchantHourStatus] = useState({\r\n        minutes_remaining: null,\r\n        open_time: null,\r\n        merchant_status: null,\r\n        close_time: null,\r\n        next_open_day: null,\r\n        next_open_time: null,\r\n        next_close_time: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        let selectedMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n        Axios(address + \"merchant/v1/shop/status/\", {\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"token\": \"PUBLIC\",\r\n            \"mid\": selectedMerchant[0].mid,\r\n            },\r\n            method: \"GET\"\r\n        }).then((shopStatusRes) => {\r\n            let merchantHourCheckingResult = shopStatusRes.data.results\r\n            setMerchantHourStatus({\r\n                minutes_remaining: merchantHourCheckingResult.minutes_remaining,\r\n                open_time: merchantHourCheckingResult.open_time,\r\n                merchant_status: merchantHourCheckingResult.merchant_status,\r\n                close_time: merchantHourCheckingResult.close_time,\r\n                next_open_day: merchantHourCheckingResult.next_open_day,\r\n                next_open_time: merchantHourCheckingResult.next_open_time,\r\n                next_close_time: merchantHourCheckingResult.next_close_time\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const onChangeRadio = (ind) => {\r\n        dispatch({ type: 'SHIPPINGDATETYPE', payload: ind })\r\n        Cookies.set(\"SHIPMENTDATETYPE\", { shipmentDateType: ind })\r\n        if(ind === 1) {\r\n            moment.updateLocale('id', idLocale);\r\n            setChoiceDate(true);\r\n            var today = new Date();\r\n            var todayEnd = new Date();\r\n\r\n            if (merchantHourStatus.merchant_status == \"CLOSE\") {\r\n                const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n                let nowDate = new Date()\r\n                if (weekday[nowDate.getDay()] == merchantHourStatus.next_open_day) { \r\n                    var openHour = merchantHourStatus.open_time.split(\":\")\r\n                    var closeHour = merchantHourStatus.close_time.split(\":\")\r\n                    today.setHours(parseInt(openHour[0]))\r\n                    today.setMinutes(parseInt(openHour[1]))\r\n                    todayEnd.setHours(parseInt(closeHour[0]))\r\n                    todayEnd.setMinutes(parseInt(closeHour[1]))\r\n                } else if(weekday[nowDate.getDay()+1] == merchantHourStatus.next_open_day) { // set time, open next day  \r\n                    today.setDate(today.getDate() + 1)\r\n                    var openHour = merchantHourStatus.next_open_time.split(\":\")\r\n                    var closeHour = merchantHourStatus.next_close_time.split(\":\") //LATER NEED TO BE CHANGED BY NEXT_CLOSE_TIME\r\n                    today.setHours(parseInt(openHour[0]))\r\n                    today.setMinutes(parseInt(openHour[1]))\r\n                    todayEnd.setHours(parseInt(closeHour[0]))\r\n                    todayEnd.setMinutes(parseInt(closeHour[1]))\r\n                } else { // set time, next day is close, open at specific day\r\n                    let nextOpenDayInd = weekday.indexOf(merchantHourStatus.next_open_day)\r\n                    let nowOpenDayInd = nowDate.getDay()\r\n                    let countDay\r\n                    if (nextOpenDayInd > nowOpenDayInd) {\r\n                        countDay = nextOpenDayInd - nowOpenDayInd\r\n                    } else {\r\n                        countDay = (6 - nowOpenDayInd) + (1 + nextOpenDayInd)\r\n                    }\r\n                    today.setDate(today.getDate() + countDay)\r\n                    var openHour = merchantHourStatus.next_open_time.split(\":\")\r\n                    var closeHour = merchantHourStatus.next_close_time.split(\":\")\r\n                    today.setHours(parseInt(openHour[0]))\r\n                    today.setMinutes(parseInt(openHour[1]))\r\n                    todayEnd.setHours(parseInt(closeHour[0]))\r\n                    todayEnd.setMinutes(parseInt(closeHour[1]))\r\n                }\r\n            } else { // set time, rest of time till near close\r\n                if (merchantHourStatus.minutes_remaining < \"31\") {\r\n                    var openHour = merchantHourStatus.open_time.split(\":\")\r\n                    var closeHour = merchantHourStatus.close_time.split(\":\")\r\n                    today.setDate(today.getDate() + 1)\r\n                    today.setHours(parseInt(openHour[0]))\r\n                    today.setMinutes(parseInt(openHour[1]) + 30)\r\n                    todayEnd.setHours(parseInt(closeHour[0]))\r\n                    todayEnd.setMinutes(parseInt(closeHour[1]))\r\n                } else {\r\n                    var closeHour = merchantHourStatus.close_time.split(\":\")\r\n                    today.setHours(today.getHours());\r\n                    today.setMinutes(30)\r\n                    todayEnd.setHours(parseInt(closeHour[0]))\r\n                    todayEnd.setMinutes(parseInt(closeHour[1]))\r\n                }\r\n            }\r\n\r\n            var convertDate = moment(new Date(today)).format(\"yyyy-MM-DD\");\r\n            var convertTime = moment(new Date(today)).format(\"HH\");\r\n            var convertCloseTime = moment(new Date(todayEnd)).format(\"HH\");\r\n            setCurrentDate(convertDate);\r\n            setCurrentTime(convertTime);\r\n            setCloseTime(convertCloseTime);\r\n            setSelectedDate(convertDate);\r\n            setSelectedTime(convertTime);\r\n        } else {\r\n            setCloseOrOpen(false)\r\n            setChoiceDate(false);\r\n            var today = new Date();\r\n            today.setHours(today.getHours() + 1);\r\n            setSelectedDate(today);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleShippingDate = (e) => {\r\n        var today = new Date();\r\n        today = moment(new Date(today)).format(\"yyyy-MM-DD\");\r\n        var pickDate = moment(new Date(e)).format(\"yyyy-MM-DD\");\r\n\r\n        if(pickDate !== today) {\r\n            let uuid = uuidV4();\r\n            uuid = uuid.replace(/-/g, \"\");\r\n            const date = new Date().toISOString();\r\n            let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n            Axios(address + \"merchant/v1/shop/management/list/\", {\r\n                headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\": \"PUBLIC\",\r\n                \"mid\": selectedMerchant[0].mid,\r\n                },\r\n                method: \"GET\"\r\n            }).then((res) => {\r\n                let timeManagement = res.data.results.time_management\r\n                const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n                let filteredDay = timeManagement.filter(valDay => {\r\n                    return valDay.days == weekday[e.getDay()].toLocaleUpperCase()\r\n                })\r\n                let selectedDayStart = new Date();\r\n                let selectedDayEnd = new Date();\r\n                if (filteredDay[0].open_time == \"00:00\" && filteredDay[0].close_time == \"00:00\") {\r\n                    setCloseOrOpen(true)\r\n                } else {\r\n                    setIsTomorrow(true);\r\n                    setCloseOrOpen(false)\r\n                    let selectedDayOpenHour = filteredDay[0].open_time.split(\":\")\r\n                    let selectedDayCloseHour = filteredDay[0].close_time.split(\":\")\r\n                    selectedDayStart.setHours(parseInt(selectedDayOpenHour[0]))\r\n                    selectedDayStart.setMinutes(parseInt(selectedDayOpenHour[1]))\r\n                    selectedDayEnd.setHours(parseInt(selectedDayCloseHour[0]))\r\n                    selectedDayEnd.setMinutes(parseInt(selectedDayCloseHour[1]))\r\n                    let convertTime = moment(new Date(selectedDayStart)).format(\"HH\");\r\n                    let convertCloseTime = moment(new Date(selectedDayEnd)).format(\"HH\");\r\n                    setCurrentTime(convertTime);\r\n                    setCloseTime(convertCloseTime);\r\n                    setSelectedTime(convertTime);\r\n                }\r\n            }).catch((err) => console.log(err))\r\n        } else {\r\n            setIsTomorrow(false);\r\n        }\r\n\r\n        var date = moment(new Date(e)).format(\"yyyy-MM-DD\");\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    const handleShippingTime = (e) => {\r\n        var hours   = Math.floor(e / 3600);\r\n        var minutes = Math.floor((e - (hours * 3600)) / 60);\r\n        var time = hours + \":\" + minutes;\r\n\r\n        setSelectedTime(time);\r\n    }\r\n\r\n    const shippingSelection = () => {\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    merchantHourStatus.merchant_status == \"OPEN\" ?\r\n                        merchantHourStatus.minutes_remaining <= \"30\" ?\r\n                        null\r\n                        :\r\n                        <div>\r\n                            <div className='shippingdate-detailContent'>\r\n                                <div className='shippingdate-radioSection'>\r\n                                    <input type='radio' id='now' onChange={() => onChangeRadio(0)} name={'DATETYPE'} />\r\n                                    <label htmlFor='now'>\r\n                                        <div className='shippingdate-radioSide'>\r\n                                            <div className='shippingdate-radioTitle'>Sekarang</div>\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                    null\r\n                }\r\n                <div>\r\n                    <div className='shippingdate-detailContent'>\r\n                        <div className='shippingdate-radioSection'>\r\n                            <input type='radio' id='custom' onChange={() => onChangeRadio(1)} name={'DATETYPE'} />\r\n                            <label htmlFor='custom'>\r\n                                <div className='shippingdate-radioSide'>\r\n                                    <div className='shippingdate-radioTitle'>Custom Tanggal</div>\r\n                                </div>\r\n                                <img className='shippingdate-radio-image' src={ShippingDate} alt='' />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n\r\n    const shippingDateCustom = () => {\r\n        return (\r\n            <div className=\"shippingdate-selection-layout\">\r\n                <div>    \r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        id=\"registerDate\"\r\n                        onChange={handleShippingDate}\r\n                        inputVariant=\"outlined\" \r\n                        className={\"shippingdate-datetimepicker\"}\r\n                        format={\"d MMMM yyyy\"}\r\n                        minDate={currentDate}\r\n                        value={selectedDate}\r\n                        ampm={false}\r\n                        disablePast={true}\r\n                    />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div>\r\n                {\r\n                    !closeOrOpen?\r\n                    <TimePicker \r\n                        className={\"shippingdate-timepicker\"}\r\n                        format={24}\r\n                        start={currentTime} \r\n                        end={closeTime} \r\n                        step={30}\r\n                        value={selectedTime}\r\n                        onChange={handleShippingTime}\r\n                    />\r\n                    :\r\n                    <div className=\"shippingdate-timepicker-close\">\r\n                        Tutup\r\n                    </div>\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if(CartRedu.shippingDateType === 1) {\r\n            const dateTime = moment(`${selectedDate} ${selectedTime}`, 'yyyy-MM-DD HH:mm:ss').format();\r\n            dispatch({ type: 'SHIPPINGDATE', payload: Date.parse(dateTime)});\r\n            Cookies.set(\"SHIPMENTDATE\", { shipmentDate: Date.parse(dateTime) })\r\n        } else {\r\n            Cookies.set(\"SHIPMENTDATE\", { shipmentDate: selectedDate })\r\n            dispatch({ type: 'SHIPPINGDATE', payload: selectedDate});\r\n        }\r\n        \r\n        if (!closeOrOpen) {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        if (!closeOrOpen) {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    const shippingDateWarning = () => {\r\n        if (merchantHourStatus.merchant_status != null) {\r\n            if (merchantHourStatus.merchant_status == \"CLOSE\") {\r\n                const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n                const weekdayId = [\"Minggu\",\"Senin\",\"Selasa\",\"Rabu\",\"Kamis\",\"Jumat\",\"Sabtu\"];\r\n                let nowDate = new Date()\r\n                if (weekday[nowDate.getDay()] == merchantHourStatus.next_open_day) {\r\n                    return (\r\n                        <div className=\"shippingdate-alert-paymentnotselected\">\r\n                            <span className=\"shippingdate-alert-icon\">\r\n                                <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                            </span>\r\n            \r\n                            <div className=\"shippingdate-alert-title\">Toko masih tutup, Pengiriman hanya dapat dilakukan ketika toko buka</div>\r\n                        </div>\r\n                    )\r\n                } else if(weekday[nowDate.getDay()+1] == merchantHourStatus.next_open_day) {   \r\n                    return (\r\n                        <div className=\"shippingdate-alert-paymentnotselected\">\r\n                            <span className=\"shippingdate-alert-icon\">\r\n                                <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                            </span>\r\n            \r\n                            <div className=\"shippingdate-alert-title\">Toko sudah tutup, Pengiriman hanya dapat dilakukan esok hari</div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    let nextOpenDay = weekday.indexOf(merchantHourStatus.next_open_day)\r\n                    let finalNextOpenDay = weekdayId[nextOpenDay]\r\n                    return (\r\n                        <div className=\"shippingdate-alert-paymentnotselected\">\r\n                            <span className=\"shippingdate-alert-icon\">\r\n                                <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                            </span>\r\n            \r\n                            <div className=\"shippingdate-alert-title\">Toko sudah tutup, Pengiriman hanya dapat dilakukan hari {finalNextOpenDay}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n            } else {\r\n                if (merchantHourStatus.minutes_remaining < \"31\") {\r\n                    return (\r\n                        <div className=\"shippingdate-alert-paymentnotselected\">\r\n                            <span className=\"shippingdate-alert-icon\">\r\n                                <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                            </span>\r\n            \r\n                            <div className=\"shippingdate-alert-title\">Toko akan tutup, Pengiriman hanya dapat dilakukan esok hari</div>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"shippingdate-layout\">\r\n                <div className=\"shippingdate-topSide\">\r\n                    <div className=\"shippingdate-header\">\r\n                        <span className=\"shippingdate-backArrow\" onClick={goBack}>\r\n                            <img className=\"shippingdate-backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"shippingdate-title\">Atur Tanggal Pengiriman</div>\r\n                    </div>\r\n\r\n                    {shippingDateWarning()}\r\n\r\n                    {shippingSelection()}\r\n                    {choiceDate ? shippingDateCustom() : null}\r\n                </div>\r\n\r\n                <div \r\n                    onClick={handleSave} \r\n                    className=\"shippingdate-selectButton\" \r\n                    style={{backgroundColor: \r\n                        selectedDate ? '#4bb7ac' \r\n                        : \r\n                        '#aaaaaa'}}\r\n                >Pilih</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShippingDateView","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520"],"import React from \"react\";\r\nimport eatMethodIcon from \"../../Asset/Icon/ic_eatmethod.png\";\r\nimport diningTableColor from \"../../Asset/Icon/diningTableColor.png\";\r\nimport takeawayColor from \"../../Asset/Icon/takeawayColor.png\";\r\nimport paymentMethodIcon from \"../../Asset/Icon/ic_paymentmethod.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport DanaPayment from \"../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../Asset/Icon/shopee_icon.png\";\r\nimport VoucherIcon from \"../../Asset/Icon/ic_voucher.png\";\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport ArrowRight from \"../../Asset/Icon/arrowright-icon.png\";\r\nimport PromoAlert from \"../../Asset/Icon/ic_promo_alert.png\";\r\nimport NoMatchPromo from \"../../Asset/Icon/ic_promo_match.png\";\r\nimport MerchantHourStatusIcon from '../../Asset/Icon/ic_clock.png'\r\nimport CartModal from \"../../Component/Modal/CartModal\";\r\nimport CartCancelModal from \"../../Component/Modal/CartCancel\";\r\nimport { cart } from \"../../App\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport MenuDetail from '../../Component/Menu/MenuDetail'\r\nimport NotifModal from '../../Component/Modal/NotifModal'\r\nimport { connect } from \"react-redux\";\r\nimport { EditMenuCart, IsMerchantQR, DataOrder } from '../../Redux/Actions'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { LoadingButton, DoneLoad } from '../../Redux/Actions'\r\nimport TourPage from '../../Component/Tour/TourPage';\r\nimport { firebaseAnalytics } from '../../firebaseConfig'\r\nimport moment from \"moment\";\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n  foodCategory: '',\r\n  listcheckbox: [],\r\n  listradio: []\r\n};\r\n\r\nvar currentTotal = 0\r\n\r\nvar finalProduct = [\r\n  {\r\n    totalPrice: 20000,\r\n    discountPrice: 0,\r\n  },\r\n]\r\n\r\nvar phoneNumber = ''\r\n\r\nclass CartView extends React.Component {\r\n  state = {\r\n    phoneNumberState: this.props.phoneNum ? this.props.phoneNum : '',\r\n    selectedPromo: this.props.selectedPromo ? this.props.selectedPromo : null,\r\n    notMatchPromo: this.props.notMatchPromo !== undefined ? this.props.notMatchPromo : false,\r\n    changeUI: true,\r\n    showModal: false,\r\n    cancelCartModal: false,\r\n    currentModalTitle: \"\",\r\n    paymentOption: this.props.paymentOption ? this.props.paymentOption : \"Pembayaran Di Kasir\",\r\n    paymentType: this.props.paymentType ? this.props.paymentType : \"PAY_BY_CASHIER\",\r\n    biz_type: this.props.noTable !== undefined ? this.props.noTable > 0 ? \"DINE_IN\" : \"TAKE_AWAY\" : \"DINE_IN\",\r\n    eat_type: this.props.noTable !== undefined ? this.props.noTable > 0 ? \"Makan Di Tempat\" : \"Bungkus / Takeaway\" : \"Makan Di Tempat\",\r\n    indexOptionEat: this.props.noTable !== undefined ? this.props.noTable > 0 ? 0 : 1 : 0,\r\n    indexOptionPay: this.props.indexOptionPay !== undefined ? this.props.indexOptionPay : -1,\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n    loadButton: false,\r\n    showMenuDet: false,\r\n    filteredCart: [],\r\n    currentData: {},\r\n    themid: '',\r\n    indexEdit: 0,\r\n    updateData: '',\r\n    successMessage: '',\r\n    isShowCounterTime : false,\r\n    countHit : 0,\r\n    counterTime : 120,\r\n    startTour : false,\r\n    steptour:[\r\n      {\r\n        selector: '.cart-serviceDeliveryType',\r\n        content : () => (\r\n          <div>\r\n            <h4>Mau makan dimana?</h4>\r\n            <br />\r\n            <span>Kamu bisa ubah pilihan makan kamu antara Makan di Tempat atau Takeaway</span>\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        selector: '.cart-servicePaymentType',\r\n        content : () => (\r\n          <div>\r\n            <h4>Bayar pakai apa?</h4>\r\n            <br />\r\n            <span>Kami menyediakan beberapa tipe pembayaran, secara e-wallet ataupun bayar di kasir</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.cart-OrderButton-mob',\r\n        content : () => (\r\n          <div>\r\n            <h4>Sudah siap makan?</h4>\r\n            <br />\r\n            <span>Silakan tekan tombol Order untuk melakukan pembayaran (psstt, untuk pembayaran di kasir, jangan lupa ke kasir ya!)</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.cart-OrderButton',\r\n        content : () => (\r\n          <div>\r\n            <h4>Sudah siap makan?</h4>\r\n            <br />\r\n            <span>Silakan tekan tombol Buat Pesanan untuk melakukan pembayaran (psstt, untuk pembayaran di kasir, jangan lupa ke kasir ya!)</span>\r\n          </div>\r\n        )\r\n      }\r\n    ],\r\n    merchantHourStatus: null, // OPEN OR CLOSE\r\n    merchantHourOpenTime: null, // ex: 10:00\r\n    merchantHourGracePeriod: null, // ex: 30\r\n    merchantHourNextOpenDay: null, // ex: Sunday\r\n    merchantHourNextOpenTime: null // ex: 10:00\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebaseAnalytics.logEvent(\"cart_visited\")\r\n    this.sendTracking();\r\n\r\n    phoneNumber = this.state.phoneNumberState\r\n\r\n    if(window.innerWidth < 700) {\r\n      this.state.steptour.splice(2,1);\r\n    } else {\r\n      this.state.steptour.pop();\r\n    }\r\n\r\n    if (localStorage.getItem(\"cartTour\") == 1) {\r\n      this.setState({ startTour : true});\r\n    } else if ((localStorage.getItem('cartMerchant') == 1) && (this.props.AuthRedu.isMerchantQR === true)) {\r\n      this.setState({ startTour : true});\r\n    }\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    let selectedMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n    Axios(address + \"merchant/v1/shop/status/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\": \"PUBLIC\",\r\n        \"mid\": selectedMerchant[0].mid,\r\n      },\r\n      method: \"GET\"\r\n    }).then((shopStatusRes) => {\r\n      let merchantHourCheckingResult = shopStatusRes.data.results\r\n      this.setState({ \r\n        merchantHourStatus: merchantHourCheckingResult.merchant_status, \r\n        merchantHourOpenTime: merchantHourCheckingResult.open_time, \r\n        merchantHourGracePeriod: merchantHourCheckingResult.minutes_remaining,\r\n        merchantHourNextOpenDay: merchantHourCheckingResult.next_open_day,\r\n        merchantHourNextOpenTime: merchantHourCheckingResult.next_open_time\r\n        })\r\n    }).catch((err) => console.log(err))\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.counterTime === 0) {\r\n      clearInterval(this.interval);\r\n      console.log(\"clear\");\r\n    }\r\n  }\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Pilih Cara Makan Anda\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan Di Tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Takeaway / Bungkus\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar Pakai Apa\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cashier\",\r\n            option: \"Pembayaran Di Kasir\",\r\n          },\r\n          {\r\n            image: \"ovo\",\r\n            option: \"OVO\",\r\n          },\r\n          {\r\n            image: \"dana\",\r\n            option: \"DANA\",\r\n          },\r\n          {\r\n            image: \"shopee\",\r\n            option: \"ShopeePay\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"payment-detail\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Rincian Pembayaran\" });\r\n      this.setState({\r\n        currentModal: finalProduct\r\n      });\r\n    } else if (data === \"payment-checking\") {\r\n      if (this.state.indexOptionPay != -1 && !this.state.notMatchPromo) {\r\n        this.setState({ showModal: true });\r\n        this.setState({ currentModalTitle: \"Pesanan yang Anda buat tidak dapat dibatalkan\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e, ind, mid) {\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    if (e.foodAmount > 1) {\r\n      let filteredStore = []\r\n      allCart.forEach((store) => {\r\n        if (store.mid === mid) {\r\n          filteredStore = store.food.filter((data, index) => {\r\n            return index === ind\r\n          })\r\n\r\n          let { foodAmount, foodTotalPrice } = filteredStore[0]\r\n\r\n          let countAmount = foodTotalPrice - (foodTotalPrice / foodAmount)\r\n\r\n          filteredStore[0].foodTotalPrice = countAmount\r\n          filteredStore[0].foodAmount = foodAmount - 1\r\n          store.food[ind] = filteredStore[0]\r\n        }\r\n      });\r\n\r\n      localStorage.setItem('cart', JSON.stringify(allCart))\r\n      this.setState({ updateData: 'updated' })\r\n    } else {\r\n      let filteredCart;\r\n      let addedMerchants = []\r\n      let newAllCart = []\r\n      allCart.forEach((store) => {\r\n        if (store.mid === mid) {\r\n          let filteredStore = store.food.filter((data, index) => {\r\n            return index !== ind\r\n          })\r\n\r\n          if (filteredStore.length === 0) {\r\n            filteredCart = cart.filter((filterStore) => {\r\n              return filterStore.mid !== store.mid;\r\n            });\r\n            localStorage.setItem(\"cart\", JSON.stringify(filteredCart))\r\n            filteredCart.forEach((cart) => {\r\n              addedMerchants.push(cart.mid)\r\n              Cookies.set(\"addedMerchants\", addedMerchants)\r\n            })\r\n          } else {\r\n            let newFilter = store.food\r\n            newFilter = []\r\n            filteredStore.forEach((val) => {\r\n              newFilter.push(val)\r\n            })\r\n            store.food = newFilter\r\n            newAllCart.push(store)\r\n          }\r\n        } else {\r\n          newAllCart.push(store)\r\n        }\r\n      });\r\n\r\n      if (newAllCart.length < 2) {\r\n        cart.splice(1)\r\n        localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n        window.history.back()\r\n        localStorage.removeItem(\"PAYMENT_TYPE\")\r\n        localStorage.removeItem(\"PHONE_NUMBER\")\r\n        localStorage.removeItem(\"SELECTED_PROMO\")\r\n        Cookies.remove(\"NOTMATCHPROMO\")\r\n      } else {\r\n        let filterMerchantCart = newAllCart.filter(valueCart => {\r\n          return valueCart.mid === mid\r\n        })\r\n        localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n        if (filterMerchantCart.length) {\r\n          this.setState({ updateData: 'updated' })\r\n        } else {\r\n          window.history.back()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleIncrease(e, ind, mid) {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === mid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === ind\r\n        })\r\n\r\n        let { foodAmount, foodTotalPrice } = filteredStore[0]\r\n\r\n        let countAmount = foodTotalPrice + (foodTotalPrice / foodAmount)\r\n\r\n        filteredStore[0].foodTotalPrice = countAmount\r\n        filteredStore[0].foodAmount = foodAmount + 1\r\n        store.food[ind] = filteredStore[0]\r\n      }\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(allCart))\r\n    this.setState({ updateData: 'updated' })\r\n  }\r\n\r\n  handleOption = (data) => {\r\n    let valueTab\r\n    if (this.props.noTable !== undefined) {\r\n      if (this.state.currentModalTitle === \"Pilih Cara Makan Anda\") {\r\n        if (data == 1) {\r\n          valueTab = 0\r\n          valueTab.toString()\r\n          localStorage.setItem('table', valueTab)\r\n        } else {\r\n          valueTab = localStorage.getItem('lastTable')\r\n          valueTab.toString()\r\n          localStorage.setItem('table', valueTab)\r\n        }\r\n      }\r\n    }\r\n    if (this.state.currentModalTitle === \"Pilih Cara Makan Anda\") {\r\n      let getSelectedPromo\r\n      if (data == 0) {\r\n        if (JSON.parse(localStorage.getItem(\"SELECTED_PROMO\"))) {\r\n          getSelectedPromo = JSON.parse(localStorage.getItem(\"SELECTED_PROMO\"))\r\n          let promoMinPrice = parseInt(getSelectedPromo.promo_min_order)\r\n          if (getSelectedPromo.promo_payment_method.includes(this.state.paymentType) && getSelectedPromo.promo_shipment_method.includes(\"DINE_IN\") && finalProduct[0].totalPrice >= promoMinPrice) {\r\n            Cookies.set(\"NOTMATCHPROMO\", { theBool: false })\r\n            this.setState({ notMatchPromo: false })\r\n          } else {\r\n            Cookies.set(\"NOTMATCHPROMO\", { theBool: true })\r\n            this.setState({ notMatchPromo: true })\r\n          }\r\n        }\r\n        this.setState({ biz_type: \"DINE_IN\", eat_type: \"Makan Di Tempat\", indexOptionEat: 0 })\r\n      } else {\r\n        if (JSON.parse(localStorage.getItem(\"SELECTED_PROMO\"))) {\r\n          getSelectedPromo = JSON.parse(localStorage.getItem(\"SELECTED_PROMO\"))\r\n          let promoMinPrice = parseInt(getSelectedPromo.promo_min_order)\r\n          if (getSelectedPromo.promo_payment_method.includes(this.state.paymentType) && getSelectedPromo.promo_shipment_method.includes(\"PICKUP\") && finalProduct[0].totalPrice >= promoMinPrice) {\r\n            Cookies.set(\"NOTMATCHPROMO\", { theBool: false })\r\n            this.setState({ notMatchPromo: false })\r\n          } else {\r\n            Cookies.set(\"NOTMATCHPROMO\", { theBool: true }) \r\n            this.setState({ notMatchPromo: true })\r\n          }\r\n        }\r\n        this.setState({ biz_type: \"TAKE_AWAY\", eat_type: \"Bungkus / Takeaway\", indexOptionEat: data })\r\n      }\r\n    } else if (this.state.currentModalTitle === \"Bayar Pakai Apa\") {\r\n      let getSelectedPromo\r\n      if (JSON.parse(localStorage.getItem(\"SELECTED_PROMO\"))) {\r\n        getSelectedPromo = JSON.parse(localStorage.getItem(\"SELECTED_PROMO\"))\r\n        let eatMethod = this.state.biz_type == \"TAKE_AWAY\" ? \"PICKUP\" : this.state.biz_type\r\n        let promoMinPrice = parseInt(getSelectedPromo.promo_min_order)\r\n        let paymentTypeData = \"\"\r\n        if (data === 0) {\r\n          paymentTypeData = \"PAY_BY_CASHIER\"\r\n        } else if (data === 1) {\r\n          paymentTypeData = \"WALLET_OVO\"\r\n        } else if (data === 2) {\r\n          paymentTypeData = \"WALLET_DANA\"\r\n        } else if (data === 3) {\r\n          paymentTypeData = \"WALLET_SHOPEEPAY\"\r\n        }\r\n\r\n        if (getSelectedPromo.promo_payment_method.includes(paymentTypeData) && getSelectedPromo.promo_shipment_method.includes(eatMethod) && finalProduct[0].totalPrice >= promoMinPrice) {\r\n          Cookies.set(\"NOTMATCHPROMO\", { theBool: false })\r\n          this.setState({ notMatchPromo: false })\r\n        } else {\r\n          Cookies.set(\"NOTMATCHPROMO\", { theBool: true })\r\n          this.setState({ notMatchPromo: true })\r\n        }\r\n      }\r\n      if (data === 0) {\r\n        localStorage.setItem(\"PAYMENT_TYPE\", JSON.stringify({ paymentType: \"PAY_BY_CASHIER\", paymentOption: \"Pembayaran Di Kasir\", indexOptionPay: 0 }))\r\n        this.setState({ paymentType: \"PAY_BY_CASHIER\", paymentOption: \"Pembayaran Di Kasir\", indexOptionPay: 0 })\r\n      } else if (data === 1) {\r\n        localStorage.setItem(\"PAYMENT_TYPE\", JSON.stringify({ paymentType: \"WALLET_OVO\", paymentOption: \"OVO\", indexOptionPay: data }))\r\n        this.setState({ paymentType: \"WALLET_OVO\", paymentOption: \"OVO\", indexOptionPay: data })\r\n      } else if (data === 2) {\r\n        localStorage.setItem(\"PAYMENT_TYPE\", JSON.stringify({ paymentType: \"WALLET_DANA\", paymentOption: \"DANA\", indexOptionPay: data }))\r\n        this.setState({ paymentType: \"WALLET_DANA\", paymentOption: \"DANA\", indexOptionPay: data })\r\n      } else if (data === 3) {\r\n        localStorage.setItem(\"PAYMENT_TYPE\", JSON.stringify({ paymentType: \"WALLET_SHOPEEPAY\", paymentOption: \"ShopeePay\", indexOptionPay: data }))\r\n        this.setState({ paymentType: \"WALLET_SHOPEEPAY\", paymentOption: \"ShopeePay\", indexOptionPay: data })\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePayment = () => {\r\n    let theUUID = uuidV4();\r\n      theUUID = theUUID.replace(/-/g, \"\");\r\n      const dateNow = new Date().toISOString();\r\n      let selectedMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n      Axios(address + \"merchant/v1/shop/status/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": theUUID,\r\n          \"x-request-timestamp\": dateNow,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"mid\": selectedMerchant[0].mid,\r\n        },\r\n        method: \"GET\"\r\n      }).then((shopStatusRes) => {\r\n        let merchantHourCheckingResult = shopStatusRes.data.results\r\n        if (merchantHourCheckingResult.minutes_remaining < \"2\") {\r\n          this.setState({ cancelCartModal: true })\r\n        } else {\r\n          this.props.LoadingButton()\r\n          const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n          let storageData = JSON.parse(localStorage.getItem('cart'))\r\n          let noTab = this.props.noTable ? this.props.noTable : 0\r\n          let allMenu = storageData.filter(filterCart => {\r\n            return filterCart.mid === currentCartMerchant.mid\r\n          })\r\n          let selectedProd = []\r\n      \r\n          allMenu[0].food.forEach(selectMenu => {\r\n            let newlistArr = ''\r\n            let extraprice = 0\r\n            selectMenu.foodListCheckbox.forEach((val) => {\r\n              val.forEach((val2) => {\r\n                newlistArr += `${val2.name}, `\r\n                extraprice += val2.price\r\n              })\r\n            })\r\n      \r\n            selectMenu.foodListRadio.forEach((val) => {\r\n              val.forEach((val2) => {\r\n                newlistArr += `${val2.name}, `\r\n                extraprice += val2.price\r\n              })\r\n            })\r\n      \r\n            newlistArr += selectMenu.foodNote\r\n            extraprice = extraprice.toString()\r\n      \r\n            selectedProd.push({\r\n              product_id: selectMenu.productId,\r\n              notes: newlistArr,\r\n              qty: selectMenu.foodAmount,\r\n              extra_price: extraprice\r\n            })\r\n          })\r\n      \r\n          let newDate = new Date().getTime()\r\n          let expiryDate = ''\r\n          if (this.state.paymentType === 'PAY_BY_CASHIER') {\r\n            newDate += 1800000\r\n            phoneNumber = ''\r\n          } else if (this.state.paymentType === 'WALLET_OVO') {\r\n            newDate += 60000\r\n          } else if (this.state.paymentType === 'WALLET_DANA' || this.state.paymentType === 'WALLET_SHOPEEPAY') {\r\n            newDate += 600000\r\n          }\r\n          expiryDate = moment(new Date(newDate)).format(\"DD-MM-yyyy HH:mm:ss\")\r\n      \r\n          var requestData = {\r\n            products: selectedProd,\r\n            payment_with: this.state.paymentType,\r\n            mid: currentCartMerchant.mid,\r\n            prices: finalProduct[0].totalPrice.toString(),\r\n            biz_type: this.state.biz_type,\r\n            table_no: noTab.toString(),\r\n            phone_number: phoneNumber,\r\n            expiry_date: expiryDate\r\n          }\r\n      \r\n          let uuid = uuidV4();\r\n          uuid = uuid.replace(/-/g, \"\");\r\n          const date = new Date().toISOString();\r\n          \r\n          Axios(address + \"/txn/v4/txn-post/\", {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-request-id\": uuid,\r\n              \"x-request-timestamp\": date,\r\n              \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: requestData,\r\n          })\r\n            .then((res) => {\r\n              if (this.state.paymentType === 'PAY_BY_CASHIER') {\r\n                this.setState({ successMessage: 'Silahkan Bayar ke Kasir/Penjual' })\r\n                setTimeout(() => {\r\n                  let filterOtherCart = storageData.filter(valFilter => {\r\n                    return valFilter.mid !== currentCartMerchant.mid\r\n                  })\r\n                  var dataOrder = {\r\n                    transactionId : res.data.results[0].transaction_id,\r\n                    totalPayment : requestData.prices,\r\n                    paymentType : this.state.paymentType,\r\n                    transactionTime : newDate\r\n                  };\r\n                  this.props.DataOrder(dataOrder);\r\n                  localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n                  localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n                  localStorage.removeItem(\"lastTable\")\r\n                  localStorage.removeItem(\"fctable\")\r\n                  localStorage.removeItem(\"counterPayment\");\r\n                  this.setState({ loadButton: true })\r\n                  this.props.DoneLoad()\r\n                }, 1000);\r\n              } \r\n              else if(this.state.paymentType === 'WALLET_OVO') {\r\n                this.setState({ successMessage: 'Silahkan Bayar melalui OVO' })\r\n                setTimeout(() => {\r\n                  let filterOtherCart = storageData.filter(valFilter => {\r\n                    return valFilter.mid !== currentCartMerchant.mid\r\n                  })\r\n                  var dataOrder = {\r\n                    transactionId : res.data.results[0].transaction_id,\r\n                    totalPayment : requestData.prices,\r\n                    paymentType : this.state.paymentType,\r\n                    transactionTime : newDate\r\n                  };\r\n                  this.props.DataOrder(dataOrder);\r\n                  localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n                  localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n                  localStorage.removeItem(\"lastTable\")\r\n                  localStorage.removeItem(\"fctable\")\r\n                  localStorage.removeItem(\"counterPayment\");\r\n                  this.setState({ loadButton: true })\r\n                  this.props.DoneLoad()\r\n                }, 1000);\r\n              }\r\n              else if(this.state.paymentType === 'WALLET_DANA') {\r\n                this.setState({ successMessage: 'Silahkan Bayar melalui DANA' })\r\n                setTimeout(() => {\r\n                  let filterOtherCart = storageData.filter(valFilter => {\r\n                    return valFilter.mid !== currentCartMerchant.mid\r\n                  })\r\n                  var dataOrder = {\r\n                    transactionId : res.data.results[0].transaction_id,\r\n                    totalPayment : requestData.prices,\r\n                    paymentType : this.state.paymentType,\r\n                    transactionTime : newDate\r\n                  };\r\n                  this.props.DataOrder(dataOrder);\r\n                  localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n                  localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n                  localStorage.removeItem(\"lastTable\")\r\n                  localStorage.removeItem(\"fctable\")\r\n                  localStorage.removeItem(\"counterPayment\");\r\n                  window.location.href = res.data.results[0].checkout_url_mobile;\r\n                }, 1000);\r\n              }\r\n              else if(this.state.paymentType === 'WALLET_SHOPEEPAY') {\r\n                this.setState({ successMessage: 'Silahkan Bayar melalui ShopeePay' })\r\n                setTimeout(() => {\r\n                  let filterOtherCart = storageData.filter(valFilter => {\r\n                    return valFilter.mid !== currentCartMerchant.mid\r\n                  })\r\n                  var dataOrder = {\r\n                    transactionId : res.data.results[0].transaction_id,\r\n                    totalPayment : requestData.prices,\r\n                    paymentType : this.state.paymentType,\r\n                    transactionTime : newDate\r\n                  };\r\n                  this.props.DataOrder(dataOrder);\r\n                  localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n                  localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n                  localStorage.removeItem(\"lastTable\")\r\n                  localStorage.removeItem(\"fctable\")\r\n                  localStorage.removeItem(\"counterPayment\");\r\n                  window.location.assign(res.data.results[0].checkout_url_deeplink);\r\n                }, 1000);\r\n              }\r\n              localStorage.removeItem(\"PAYMENT_TYPE\")\r\n              localStorage.removeItem(\"PHONE_NUMBER\")\r\n              localStorage.removeItem(\"SELECTED_PROMO\")\r\n              Cookies.remove(\"NOTMATCHPROMO\")\r\n            })\r\n            .catch((err) => {\r\n              if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                this.props.DoneLoad()\r\n              }\r\n            });\r\n        }\r\n      }).catch((err) => console.log(err))\r\n  };\r\n\r\n  notifModal = () => {\r\n    if (this.props.AllRedu.buttonLoad === false) {\r\n      return <NotifModal isShowNotif={this.props.AllRedu.buttonLoad} responseMessage={this.state.successMessage} />\r\n    }\r\n  }\r\n\r\n  newListAllChoices = (food) => {\r\n    let newlistArr = ''\r\n    food.foodListCheckbox.forEach((val) => {\r\n      val.forEach((val2) => {\r\n        return newlistArr += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    food.foodListRadio.forEach((val) => {\r\n      val.forEach((val2) => {\r\n        return newlistArr += `${val2.name}, `\r\n      })\r\n    })\r\n    if (newlistArr == \"\") {\r\n      return null\r\n    } else {  \r\n      return <div className='cartList-content-choice' style={{display: \"flex\", fontWeight: \"bold\", color: \"black\"}}>\r\n        Tambahan<div style={{marginLeft: \"5px\", marginRight: \"5px\"}}>:</div><span className='cartList-content-notes'>{newlistArr}</span>\r\n        </div>\r\n    }\r\n  }\r\n\r\n  onEditCart = (ind, mid) => {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === mid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === ind\r\n        })\r\n      }\r\n    });\r\n\r\n    var objFilteredCart = {\r\n      productId: filteredStore[0].productId,\r\n      foodName: filteredStore[0].foodName,\r\n      foodDesc: \"\",\r\n      foodCategory: filteredStore[0].foodCategory,\r\n      foodPrice: filteredStore[0].foodPrice,\r\n      foodImage: filteredStore[0].foodImage,\r\n      foodNote: filteredStore[0].foodNote,\r\n      foodListCheckbox: filteredStore[0].foodListCheckbox,\r\n      foodListRadio: filteredStore[0].foodListRadio,\r\n      foodTotalPrice: filteredStore[0].foodTotalPrice,\r\n      foodExt: [\r\n        {\r\n          name: \"\",\r\n          amount: filteredStore[0].foodAmount,\r\n        },\r\n      ],\r\n    }\r\n\r\n    this.setState({ showMenuDet: true, filteredCart: filteredStore, currentData: objFilteredCart, indexEdit: ind, themid: mid })\r\n    this.props.EditMenuCart(true)\r\n    document.body.style.overflowY = 'hidden'\r\n  }\r\n\r\n  setMenuDetail(isShow) {\r\n    this.setState({ showMenuDet: isShow })\r\n    document.body.style.overflowY = ''\r\n  }\r\n\r\n  handleCartAmount = (price) => {\r\n    currentTotal = price\r\n  }\r\n\r\n  menuDetail = () => {\r\n    if (this.state.showMenuDet === true) {\r\n      return (\r\n        <MenuDetail\r\n          isShow={this.state.showMenuDet}\r\n          onHide={() => this.setMenuDetail(false)}\r\n          datas={this.state.currentData}\r\n          handleAmount={this.handleCartAmount}\r\n          handleClick={this.handleSaveCart}\r\n          handleData={this.handleCart}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCart = (data) => {\r\n    currentExt = data\r\n  }\r\n\r\n  handleSaveCart = () => {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    let getProductId\r\n    allCart.forEach((store) => {\r\n      if (store.mid === this.state.themid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === this.state.indexEdit\r\n        })\r\n\r\n        getProductId = filteredStore[0].productId\r\n\r\n        filteredStore[0].foodAmount = currentExt.detailCategory[0].amount\r\n        filteredStore[0].foodListCheckbox = currentExt.listcheckbox\r\n        filteredStore[0].foodListRadio = currentExt.listradio\r\n        filteredStore[0].foodNote = currentExt.note\r\n        filteredStore[0].foodTotalPrice = currentTotal\r\n\r\n        store.food[this.state.indexEdit] = filteredStore[0]\r\n      }\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(allCart))\r\n    this.setState({ updateData: 'updated' })\r\n\r\n    let newNotes = ''\r\n    currentExt.listcheckbox.forEach(val => {\r\n      val.forEach(val2 => {\r\n        return newNotes += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    currentExt.listradio.forEach(val => {\r\n      val.forEach(val2 => {\r\n        return newNotes += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    if (currentExt.note) {\r\n      newNotes += currentExt.note\r\n    }\r\n\r\n    let tableNumber = ''\r\n    if (localStorage.getItem('table')) {\r\n      tableNumber = localStorage.getItem('table')\r\n    } else {\r\n      tableNumber = 0\r\n    }\r\n\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    Axios(address + \"txn/v2/cart-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"table-no\": tableNumber.toString()\r\n      },\r\n      method: \"POST\",\r\n      data: {\r\n        mid: this.state.themid,\r\n        pid: getProductId,\r\n        notes: newNotes,\r\n        qty: currentExt.detailCategory[0].amount,\r\n      }\r\n    })\r\n      .then(() => {\r\n        console.log('savetocart succeed');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  countDownTime = () => {\r\n    this.interval = setInterval(\r\n      () => this.setState((state)=> ({ counterTime: this.state.counterTime - 1 })),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tourPage = () => {\r\n    if (this.state.startTour === true) {\r\n      return (\r\n        <TourPage \r\n          stepsContent={this.state.steptour}\r\n          isShowTour={this.state.startTour}\r\n          isHideTour={() =>this.showTourPage(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  showTourPage = (isShowTour) => {\r\n    this.setState({ startTour: isShowTour });\r\n    document.body.style.overflowY = 'auto';\r\n    this.props.IsMerchantQR(false);\r\n    localStorage.setItem('cartTour', 0);\r\n    localStorage.setItem('storeTour',0);\r\n    localStorage.setItem('cartMerchant', 0);\r\n    localStorage.setItem('merchantFlow', 0);\r\n    localStorage.setItem('productTour', 0);\r\n  }\r\n\r\n  isPhoneNum = (num) => {\r\n    phoneNumber = num\r\n    this.setState({ phoneNumberState: num })\r\n    localStorage.setItem(\"PHONE_NUMBER\", JSON.stringify(num))\r\n  }\r\n\r\n  sendTracking() {\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n\r\n    const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n\r\n    Axios(address + \"home/v1/event/add\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\" : \"PUBLIC\"\r\n      },\r\n      method: \"POST\",  \r\n      data: { \r\n        merchant_id: currentCartMerchant.mid,\r\n        event_type: \"ORDER_DETAIL\",\r\n        page_name: window.location.pathname\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(\"SUCCEED\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  merchantHourStatusWarning = () => {\r\n    if (this.state.merchantHourStatus == \"CLOSE\") {\r\n      const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n      const weekdayId = [\"Minggu\",\"Senin\",\"Selasa\",\"Rabu\",\"Kamis\",\"Jumat\",\"Sabtu\"];\r\n      let nowDate = new Date()\r\n      if (weekday[nowDate.getDay()] == this.state.merchantHourNextOpenDay) {\r\n        return (\r\n          <div className=\"merchant-hour-status-layout\" style={{backgroundColor: \"#dc6a84\"}}>\r\n            <img className=\"merchant-hour-status-icon\" src={MerchantHourStatusIcon} />\r\n            <div className=\"merchant-hour-status-text\">Tutup, Buka Hari ini Pukul {this.state.merchantHourOpenTime} WIB</div>\r\n          </div>\r\n        )\r\n      } else if(weekday[nowDate.getDay()+1] == this.state.merchantHourNextOpenDay) {   \r\n        return (\r\n          <div className=\"merchant-hour-status-layout\" style={{backgroundColor: \"#dc6a84\"}}>\r\n            <img className=\"merchant-hour-status-icon\" src={MerchantHourStatusIcon} />\r\n            <div className=\"merchant-hour-status-text\">Tutup, Buka Besok Pukul {this.state.merchantHourNextOpenTime} WIB</div>\r\n          </div>\r\n        )\r\n      } else {\r\n        let nextOpenDay = weekday.indexOf(this.state.merchantHourNextOpenDay)\r\n        let finalNextOpenDay = weekdayId[nextOpenDay]\r\n        return (\r\n          <div className=\"merchant-hour-status-layout\" style={{backgroundColor: \"#dc6a84\"}}>\r\n            <img className=\"merchant-hour-status-icon\" src={MerchantHourStatusIcon} />\r\n            <div className=\"merchant-hour-status-text\">Tutup, Buka Hari {finalNextOpenDay} Pukul {this.state.merchantHourNextOpenTime} WIB</div>\r\n          </div>\r\n        )\r\n      }\r\n    } else if (this.state.merchantHourStatus == \"OPEN\") {\r\n      if (this.state.merchantHourGracePeriod <= 30) {\r\n        return (\r\n          <div className=\"cart-merchant-hour-status-layout\" style={{backgroundColor: \"#f4b55b\"}}>\r\n            <div className=\"cart-merchant-hour-status-text\">Toko akan Tutup {this.state.merchantHourGracePeriod} Menit Lagi</div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loadButton) {\r\n      return <Redirect to='/orderconfirmation' />\r\n    }\r\n\r\n    const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    let filterCart = allCart.filter(valCart => {\r\n      return valCart.mid === currentCartMerchant.mid\r\n    })\r\n    if (filterCart.length === 0) {\r\n      window.history.go(-1)\r\n    } else {\r\n      if (this.state.changeUI) {\r\n        this.setState({ changeUI: false })\r\n      }\r\n    }\r\n\r\n    let modal;\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={this.state.showModal}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n          handleData={this.handleOption}\r\n          indexOptionEat={this.state.indexOptionEat}\r\n          indexOptionPay={this.state.indexOptionPay}\r\n          setPhoneNumber={this.isPhoneNum}\r\n          confirmPay={this.handlePayment}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>\r\n    }\r\n\r\n    // Cart Cancel Modal\r\n    let cartCancelModal;\r\n    if (this.state.cancelCartModal === true) {\r\n      cartCancelModal = (\r\n        <CartCancelModal\r\n          isShow={this.state.cancelCartModal}\r\n          onHide={() => this.setState({ cancelCartModal: false })}\r\n        />\r\n      );\r\n    } else {\r\n      cartCancelModal = <></>\r\n    }\r\n\r\n    let storageData = JSON.parse(localStorage.getItem('cart'))\r\n    let data = storageData;\r\n    let storeList = data.filter((store) => {\r\n      if (store.mid !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    let contentView = storeList.map((store) => {\r\n      let storeFood\r\n      if (store.mid === currentCartMerchant.mid) {\r\n        storeFood = store.food.map((food, index) => {\r\n          return (\r\n            <div key={index} className='cartList-content'>\r\n              <div className='cartList-content-frame'>\r\n                <img className='cartList-content-image' src={food.foodImage} alt='' />\r\n              </div>\r\n\r\n              <div className='cartList-content-detail'>\r\n                <div className='cartList-content-detail-left'>\r\n                  <div className='cartList-content-title'>{food.foodName}</div>\r\n                  {this.newListAllChoices(food)}\r\n                  <div className='cartList-content-specialnotes' style={{display: food.foodNote == \"\"? \"none\":\"block\"}}>\r\n                    {\r\n                      food.foodNote != \"\" ?\r\n                      `Catatan : ${food.foodNote}`\r\n                      :\r\n                      null\r\n                    }\r\n                  </div>\r\n                  <div className='cartList-content-price'>Rp {Intl.NumberFormat(\"id-ID\").format(food.foodTotalPrice)}</div>\r\n                </div>\r\n\r\n                <div className='cartList-content-detail-right'>\r\n                  <div className='cartList-editButton' onClick={() => this.onEditCart(index, store.mid)}>\r\n                    <div className='cartList-editWord'>Ubah</div>\r\n                  </div>\r\n\r\n                  <div className='cartList-amountBox'>\r\n                    <div className='cartList-amountBox-inside'>\r\n                      <div className='cartList-minusBox' onClick={() => this.handleDecrease(food, index, store.mid)}>\r\n                        <div className='cartList-minusSym'>\r\n                          -\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cartList-numberArea'>\r\n                        {food.foodAmount}\r\n                      </div>\r\n\r\n                      <div className='cartList-plusBox' onClick={() => this.handleIncrease(food, index, store.mid)}>\r\n                        <div className='cartList-plusSym'>\r\n                          +\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      return storeFood\r\n    });\r\n\r\n    let detailView = storeList.map((store, index) => {\r\n      if (store.mid === currentCartMerchant.mid) {\r\n        return (\r\n          <div key={index} className='cart-customerinfo'>\r\n            <div className='cart-customerinfo-header'>\r\n              <div className='cart-customerinfo-title'>\r\n                Detail Restoran\r\n              </div>\r\n            </div>\r\n\r\n            <div className='cart-customerinfo-content'>\r\n              <h2 className='cart-detailcontent-address'>\r\n                {store.storeName}\r\n              </h2>\r\n\r\n              <h4 className='cart-detailcontent-addressdesc'>\r\n                {store.storeAdress}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n\r\n    let totalPaymentShow = 0\r\n    let totalItem = 0\r\n    let selectedMerch = storeList.filter(store => {\r\n      return store.mid === currentCartMerchant.mid\r\n    });\r\n\r\n    totalItem = selectedMerch[0].food.length;\r\n    selectedMerch[0].food.forEach(thefood => {\r\n      totalPaymentShow += thefood.foodTotalPrice\r\n    })\r\n\r\n    finalProduct = [\r\n      {\r\n        totalPrice: totalPaymentShow,\r\n        discountPrice: 0,\r\n      },\r\n    ]\r\n\r\n    let paymentImage;\r\n    let eatImage;\r\n    if (this.state.biz_type === \"DINE_IN\") {\r\n      eatImage = diningTableColor;\r\n    } else if (this.state.biz_type === \"TAKE_AWAY\") {\r\n      eatImage = takeawayColor;\r\n    }\r\n    if (this.state.paymentType === \"PAY_BY_CASHIER\") {\r\n      paymentImage = CashierPayment\r\n    } else if (this.state.paymentType === \"WALLET_OVO\") {\r\n      paymentImage = OvoPayment\r\n    } else if (this.state.paymentType === \"WALLET_DANA\") {\r\n      paymentImage = DanaPayment\r\n    } else if (this.state.paymentType === \"WALLET_SHOPEEPAY\") {\r\n      paymentImage = ShopeePayment\r\n    }\r\n\r\n    if (this.state.changeUI) {\r\n      return (\r\n        <div style={{ display: 'flex', position: 'absolute', height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#4bb7ac\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    let tableNumberOfCart = localStorage.getItem(\"table\") ? localStorage.getItem(\"table\") : \"0\"\r\n\r\n    return (\r\n      <>\r\n        <div className='cartLayout'>\r\n          <div className='cartTitle'>\r\n            <span className='logopikappCenter' onClick={() => window.history.back()} >\r\n              <img className='LogoPikappCart' src={ArrowBack} alt='' />\r\n            </span>\r\n            <div className='confirmationOrder'>Pesanan Anda</div>\r\n          </div>\r\n          {this.merchantHourStatusWarning()}\r\n\r\n          {\r\n            this.state.notMatchPromo ?\r\n            <div className=\"promo-alert-paymentnotselected\">\r\n                <span className=\"promo-alert-icon\">\r\n                    <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                </span>\r\n\r\n                <div className=\"promo-alert-title\">Voucher tidak bisa digunakan, silahkan ubah terlebih dahulu</div>\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n\r\n          {\r\n            tableNumberOfCart != \"0\" ?\r\n            <div className='cartTableNumber-layout'>\r\n              <div className='cartTableNumber-Title'>Nomor Meja</div>\r\n\r\n              <div className=\"cartTableNumber-Number\">{tableNumberOfCart}</div>\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n\r\n          <div className='cartContent'>\r\n            <div className='cart-LeftSide'>\r\n              <div className='cartList'>\r\n                <div className='cartList-header'>\r\n                  <h4 className='cartList-title'>\r\n                    Item Yang Dibeli\r\n                  </h4>\r\n                  <h4 className='cartmanual-List-itembox'>\r\n                      {totalItem} Item\r\n                    </h4>\r\n                </div>\r\n\r\n                {contentView}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='cart-RightSide'>\r\n              <div className='flex-RightSide'>\r\n                {detailView}\r\n\r\n                <div className='cart-serviceDeliveryType' onClick={() => this.handleDetail(\"eat-method\")}>\r\n                  <div className='cart-detailContent'>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                          <div className='cart-leftSide'>\r\n                              <img className='cart-foodService-img-icon' src={eatMethodIcon} alt='' />\r\n                              <div className='cart-title'>Pilih Cara Makan</div>\r\n                            </div>\r\n\r\n                            <span className=\"cart-arrowright\">\r\n                              <img className=\"cart-arrowright-icon\" src={ArrowRight} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className='cart-selectiondetail'>\r\n                          <div className=\"cart-selectiondetail-border\"></div>\r\n\r\n                          <div className='cart-selectiondetail-desc'>\r\n                              <div>{this.state.eat_type}</div>\r\n                          </div>\r\n                        </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='cart-servicePaymentType' onClick={() => this.handleDetail(\"pay-method\")}>\r\n                  <div className='cart-detailContent'>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                          <div className='cart-leftSide'>\r\n                              <img className='cart-foodService-img-icon' src={paymentMethodIcon} alt='' />\r\n                              <div className='cart-title'>Pilih Metode Pembayaran</div>\r\n                            </div>\r\n\r\n                            <span className=\"cart-arrowright\">\r\n                              <img className=\"cart-arrowright-icon\" src={ArrowRight} />\r\n                            </span>\r\n                        </div>\r\n\r\n                        {\r\n                          this.state.indexOptionPay != -1 ?\r\n                          <div className='cart-selectiondetail'>\r\n                            <div className=\"cart-selectiondetail-border\"></div>\r\n\r\n                            <div className='cart-selectiondetail-desc'>\r\n                                <img src={paymentImage} style={{width: \"20px\", height: \"20px\", marginRight: \"14px\"}} />\r\n                                <div>{this.state.paymentOption}</div>\r\n                                {\r\n                                  this.state.paymentOption === 'OVO' ?\r\n                                    this.state.phoneNumberState != '' ?\r\n                                      <div>{`(${phoneNumber})`}</div>\r\n                                      : null\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='promoCart-voucherinfo'style={{marginTop: \"10px\"}} >\r\n                    <Link to={{ pathname: \"/promo\", state: { title : \"Pilih Voucher Diskon\", alertStatus : { phoneNumber: \"0\", paymentType : 0 }, cartStatus : { bizType: this.state.biz_type == \"TAKE_AWAY\" ? \"PICKUP\" : this.state.biz_type, paymentType: this.state.paymentType, totalPayment: totalPaymentShow }}}} style={{ textDecoration: \"none\", width: \"100%\" }}>\r\n                      <div className='promoCart-detailContent'>\r\n                            <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                              <div className='promoCart-leftSide'>\r\n                                  <img className='promoCart-img-icon' src={VoucherIcon} alt='' />\r\n                                  <div className='promoCart-title'>Voucher Diskon</div>\r\n                                </div>\r\n\r\n                                <span className=\"promoCart-arrowright\">\r\n                                  <img className=\"promoCart-arrowright-icon\" src={ArrowRight} />\r\n                                </span>\r\n                            </div>\r\n\r\n                            {\r\n                              this.state.selectedPromo != null ?\r\n                              <div className='promoCart-selectiondetail'>\r\n                                <div className=\"promoCart-selectiondetail-border\"></div>\r\n\r\n                                <div className='promoCart-selectiondetail-desc'>\r\n                                  { this.state.notMatchPromo ? <img src={NoMatchPromo} style={{width: \"18px\", height: \"16px\", marginRight: \"10px\"}} /> : null }\r\n                                  <div style={{color: this.state.notMatchPromo ? \"#DC6A84\" : \"#111111\"}}>{this.state.selectedPromo.promo_title}</div>\r\n                                </div>\r\n                              </div>\r\n                              :\r\n                              null\r\n                            }\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                <div className='cart-summarypayment'>\r\n                    <div className='cart-detailcontent-payment'>\r\n                      <div>\r\n                      <div className='cart-detailprice-header'>\r\n                        <div className='cart-detailprice-title'>\r\n                          Ringkasan Belanja\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cart-detailprice-desc'>\r\n                        <div className='orderDetail-detailprice-word'>\r\n                          <div>Total Harga ({totalItem} Item(s))</div>\r\n                          <div>Rp. {Intl.NumberFormat(\"id-ID\").format(totalPaymentShow)}</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cart-detailprice-desc'>\r\n                        <div className='orderDetail-detailprice-word'>\r\n                          <div>Total Diskon Item</div>\r\n                          <div>Rp. 0</div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='cart-Layout'>\r\n          <div className='cart-checkoutArea'>\r\n\r\n            <div className='cart-TotalAmount'>\r\n              <h3 className='cart-TotalAmount-title'>Total Harga</h3>\r\n\r\n              <div className='cart-TotalAmount-bottom'>\r\n                <h2 className='cart-TotalAmount-price'>Rp. {Intl.NumberFormat(\"id-ID\").format(totalPaymentShow)}</h2>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className='cart-OrderButton buttonorder' \r\n            onClick={() => this.handleDetail(\"payment-checking\")} \r\n            style={{ backgroundColor: \r\n              this.state.indexOptionPay == -1 ? \r\n              '#aaaaaa'\r\n              :\r\n                this.state.notMatchPromo ?\r\n                '#aaaaaa'\r\n                :\r\n                '#4bb7ac'\r\n              }} >\r\n              <div className='cart-OrderButton-content'>\r\n                <div className='cart-OrderButton-word'>Buat Pesanan</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {modal}\r\n        {cartCancelModal}\r\n        {this.menuDetail()}\r\n        {this.notifModal()}\r\n        {this.tourPage()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    AllRedu: state.AllRedu,\r\n    AuthRedu: state.AuthRedu\r\n  }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { EditMenuCart, LoadingButton, DoneLoad, IsMerchantQR, DataOrder })(CartView)","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js",["521","522"],"import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport bellIcon from \"../Asset/Icon/icon_bell2x.png\";\r\nimport profileIcon from \"../Asset/Icon/icon_profile2x.png\";\r\nimport logo from \"../Asset/Logo/logo4x.png\";\r\nimport Cookies from \"js-cookie\";\r\nimport orderIcon from \"../Asset/Icon/OrderIcon.png\";\r\n\r\nexport default class MainNavigation extends React.Component {\r\n  state = {\r\n    isLogin : false\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'white';\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"));\r\n      this.setState({ isLogin: auth.isLogged });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let homePage = \"/\" + Cookies.get(\"homePage\")\r\n    return (\r\n      // <div className={\"resize-mobile-nav\"}>\r\n      <div className={\"mobile-view\"}>\r\n        <Navbar>\r\n          <Navbar>\r\n            <Link to={homePage}> <img src={logo} alt={\"logo\"} class=\"icon\"></img> </Link>\r\n          </Navbar>\r\n\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Link to={\"/status\"}>\r\n              <img src={orderIcon} class=\"iconStatus\" alt={\"status\"}></img>\r\n            </Link>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        {/* <Navbar.Collapse className=\"justify-content-end\">\r\n            <Link to={\"/profile\"}>\r\n              <img src={profileIcon} class=\"icon\" alt={\"profile\"}></img>\r\n            </Link>\r\n          </Navbar.Collapse> */}\r\n\r\n        <div className='listTitle'>\r\n            <h2 className='listTitleContent'>Daftar Restoran</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartManualView.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558"],"import React from \"react\";\r\nimport ArrowDownColor from \"../../Asset/Icon/ArrowDownColor.png\";\r\nimport ArrowRightWhite from \"../../Asset/Icon/ArrowRightWhite.png\";\r\nimport diningTableColor from \"../../Asset/Icon/diningTableColor.png\";\r\nimport takeawayColor from \"../../Asset/Icon/takeawayColor.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport DanaPayment from \"../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../Asset/Icon/shopee_icon.png\";\r\nimport checklistLogo from \"../../Asset/Icon/checklist.png\";\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport InfoIcon from \"../../Asset/Icon/info-icon.png\";\r\nimport PromoAlert from \"../../Asset/Icon/ic_promo_alert.png\";\r\nimport NoMatchPromo from \"../../Asset/Icon/ic_promo_match.png\";\r\nimport CartModal from \"../../Component/Modal/CartModal\";\r\nimport CartCancelModal from \"../../Component/Modal/CartCancel\";\r\nimport { cart } from \"../../App\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport MenuDetail from '../../Component/Menu/MenuDetail'\r\nimport NotifModal from '../../Component/Modal/NotifModal'\r\nimport { connect } from \"react-redux\";\r\nimport { EditMenuCart, IsMerchantQR, DataOrder, CustomerName, CustomerPhoneNumber, InsuranceCheckbox, InsurancePrice } from '../../Redux/Actions'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { LoadingButton, DoneLoad } from '../../Redux/Actions'\r\nimport TourPage from '../../Component/Tour/TourPage';\r\nimport { firebaseAnalytics } from '../../firebaseConfig';\r\nimport moment from \"moment\";\r\nimport DeliveryIcon from \"../../Asset/Icon/delivery.png\";\r\nimport ShippingDate from \"../../Asset/Icon/shipping-date.png\";\r\nimport PaymentMethod from \"../../Asset/Icon/payment-method.png\";\r\nimport VoucherIcon from \"../../Asset/Icon/ic_voucher.png\";\r\nimport ArrowRight from \"../../Asset/Icon/arrowright-icon.png\";\r\nimport ArrowUp from \"../../Asset/Icon/item-arrowup.png\";\r\nimport ArrowDown from \"../../Asset/Icon/item-arrowdown.png\";\r\nimport MerchantHourStatusIcon from '../../Asset/Icon/ic_clock.png'\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n  foodCategory: '',\r\n  listcheckbox: [],\r\n  listradio: []\r\n};\r\n\r\nvar currentTotal = 0\r\n\r\nvar finalProduct = [\r\n  {\r\n    totalPrice: 20000,\r\n    discountPrice: 0,\r\n  },\r\n]\r\n\r\nvar phoneNumber = ''\r\n\r\nclass CartManualView extends React.Component {\r\n    state = {\r\n      selectedPromo: this.props.selectedPromo ? this.props.selectedPromo : null,\r\n      notMatchPromo: this.props.notMatchPromo !== undefined ? this.props.notMatchPromo : false,\r\n      changeUI: true,\r\n      showModal: false,\r\n      cancelCartModal: false,\r\n      currentModalTitle: \"\",\r\n      paymentOption: \"Pembayaran Di Kasir\",\r\n      paymentType: \"WALLET_OVO\",\r\n      biz_type: this.props.noTable !== undefined ? this.props.noTable > 0 ? \"DINE_IN\" : \"TAKE_AWAY\" : \"DINE_IN\",\r\n      eat_type: this.props.noTable !== undefined ? this.props.noTable > 0 ? \"Makan Di Tempat\" : \"Bungkus / Takeaway\" : \"Makan Di Tempat\",\r\n      indexOptionEat: this.props.noTable !== undefined ? this.props.noTable > 0 ? 0 : 1 : 0,\r\n      indexOptionPay: 0,\r\n      currentModal: [\r\n        {\r\n          image: \"cashier\",\r\n          option: \"Pembayaran Di Kasir\",\r\n          icon: CashierPayment,\r\n          type: \"PAY_BY_CASHIER\"\r\n        },\r\n        {\r\n          image: \"ovo\",\r\n          option: \"OVO\",\r\n          icon: OvoPayment,\r\n          type: \"WALLET_OVO\"\r\n        },\r\n        {\r\n          image: \"dana\",\r\n          option: \"DANA\",\r\n          icon: DanaPayment,\r\n          type: \"WALLET_DANA\"\r\n        },\r\n        {\r\n          image: \"shopee\",\r\n          option: \"ShopeePay\",\r\n          icon: ShopeePayment,\r\n          type: \"WALLET_SHOPEEPAY\"\r\n        }\r\n      ],\r\n      loadButton: false,\r\n      showMenuDet: false,\r\n      filteredCart: [],\r\n      currentData: {},\r\n      themid: '',\r\n      indexEdit: 0,\r\n      updateData: '',\r\n      successMessage: '',\r\n      isShowCounterTime : false,\r\n      countHit : 0,\r\n      counterTime : 120,\r\n      startTour : false,\r\n      steptour:[\r\n        {\r\n          selector: '.cartmanual-foodService',\r\n          content : () => (\r\n            <div>\r\n              <h4>Mau makan dimana?</h4>\r\n              <br />\r\n              <span>Kamu bisa ubah pilihan makan kamu antara Makan di Tempat atau Takeaway</span>\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          selector: '.cartmanual-paymentService',\r\n          content : () => (\r\n            <div>\r\n              <h4>Bayar pakai apa?</h4>\r\n              <br />\r\n              <span>Kami menyediakan 2 tipe pembayaran, secara OVO ataupun bayar di kasir</span>\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          selector: '.cartmanual-OrderButton-mob',\r\n          content : () => (\r\n            <div>\r\n              <h4>Sudah siap makan?</h4>\r\n              <br />\r\n              <span>Silakan tekan tombol Order untuk melakukan pembayaran (psstt, untuk pembayaran di kasir, jangan lupa ke kasir ya!)</span>\r\n            </div>\r\n          )\r\n        },\r\n        {\r\n          selector: '.cartmanual-OrderButton-mob',\r\n          content : () => (\r\n            <div>\r\n              <h4>Sudah siap makan?</h4>\r\n              <br />\r\n              <span>Silakan tekan tombol Order untuk melakukan pembayaran (psstt, untuk pembayaran di kasir, jangan lupa ke kasir ya!)</span>\r\n            </div>\r\n          )\r\n        }\r\n      ],\r\n      customerName : \"\",\r\n      customerPhoneNumber : \"\",\r\n      customerShippingDate : \"\",\r\n      isShowItem : undefined,\r\n      disabledSubmitButton : true,\r\n      insuranceCheckbox : false,\r\n      insurancePrice : 0,\r\n      cartReduData : {\r\n        pickupType: -1, //PICKUP PAGE\r\n        fullAddress: \"\",\r\n        postalCode : \"\",\r\n        shipperNotes: \"\",\r\n        shipperName: \"\",\r\n        shipperPrice: \"\",\r\n        shippingDateType : \"\", //SHIPPING DATE PAGE\r\n        shippingDate : \"\",\r\n        paymentType: -1, //PAYMENT PAGE\r\n        paymentImage : null,\r\n        paymentMethod : \"\",\r\n        phoneNumber: \"\",\r\n        customerName: \"\",\r\n        customerPhoneNumber: \"\",\r\n        lat : 0,\r\n        lng : 0,\r\n        district : \"\",\r\n        city : \"\",\r\n        province : \"\",\r\n        formattedAddress : \"\",\r\n        shippingType : \"\",\r\n        shippingName : \"\",\r\n        shippingPrice : 0,\r\n        shippingDesc : \"\",\r\n        shippingCode : \"\",\r\n        courierServiceType : \"\"\r\n      },\r\n      paymentImage: \"\",\r\n      merchantHourStatus: null, // OPEN OR CLOSE\r\n      merchantHourOpenTime: null, // ex: 10:00\r\n      merchantHourGracePeriod: null, // ex: 30\r\n      merchantHourNextOpenDay: null, // ex: Sunday\r\n      merchantHourNextOpenTime: null // ex: 10:00\r\n    };\r\n\r\n    componentDidMount() {\r\n      firebaseAnalytics.logEvent(\"cartmanual_visited\");\r\n      this.sendTracking();\r\n      if(window.innerWidth < 700) {\r\n        this.state.steptour.splice(2,1);\r\n      } else {\r\n        this.state.steptour.pop();\r\n      }\r\n\r\n      if(this.props.CartRedu) {\r\n\r\n        this.state.currentModal.forEach((value) => {\r\n          if(value.type == this.props.CartRedu.paymentTitleType) {\r\n            this.setState({ paymentImage: value.icon, paymentType: value.type, paymentOption: value.option });\r\n          }\r\n        })\r\n\r\n        this.setState({ cartReduData : this.props.CartRedu, insuranceCheckbox : this.props.CartRedu.insuranceCheckbox, insurancePrice : this.props.CartRedu.insurancePrice });\r\n      }\r\n\r\n      if(this.props.CartRedu.pickupType === 0) {\r\n        this.setState({ cartReduData : { ...this.props.CartRedu, shippingPrice: 0 }, insuranceCheckbox : false, insurancePrice : 0});\r\n      }\r\n      \r\n      if(this.props.CartRedu.shippingDate) {\r\n        this.setState({ customerShippingDate : moment(new Date(this.props.CartRedu.shippingDate)).format(\"Do MMMM YYYY, H:mm\")})\r\n      }\r\n\r\n      if(this.props.CartRedu.customerName) {\r\n        this.setState({ customerName : this.props.CartRedu.customerName })\r\n      }\r\n      if(this.props.CartRedu.customerPhoneNumber) {\r\n        this.setState({ customerPhoneNumber : this.props.CartRedu.customerPhoneNumber })\r\n      }\r\n\r\n      if(this.props.CartRedu.customerName !== \"\" && this.props.CartRedu.customerPhoneNumber !== \"\" && this.props.CartRedu.pickupType !== -1 && this.props.CartRedu.shippingDate !== \"\" && this.props.CartRedu.paymentType !== -1) {\r\n        this.setState({ disabledSubmitButton : false})\r\n      }\r\n\r\n      if(this.state.cartReduData.customerName !== \"\" && this.state.cartReduData.customerPhoneNumber !== \"\" && this.state.cartReduData.pickupType !== -1 && this.state.cartReduData.shippingDate !== \"\" && this.state.cartReduData.paymentType !== -1) {\r\n        this.setState({ disabledSubmitButton : false})\r\n      }\r\n\r\n      if (this.state.notMatchPromo) {\r\n        this.setState({ disabledSubmitButton : true})\r\n      }\r\n\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      let selectedMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n      Axios(address + \"merchant/v1/shop/status/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"mid\": selectedMerchant[0].mid,\r\n        },\r\n        method: \"GET\"\r\n      }).then((shopStatusRes) => {\r\n        let merchantHourCheckingResult = shopStatusRes.data.results\r\n        this.setState({ \r\n          merchantHourStatus: merchantHourCheckingResult.merchant_status, \r\n          merchantHourOpenTime: merchantHourCheckingResult.open_time, \r\n          merchantHourGracePeriod: merchantHourCheckingResult.minutes_remaining,\r\n          merchantHourNextOpenDay: merchantHourCheckingResult.next_open_day,\r\n          merchantHourNextOpenTime: merchantHourCheckingResult.next_open_time\r\n         })\r\n      }).catch((err) => console.log(err))\r\n    }\r\n\r\n    handleDetail(data) {\r\n      if (data === \"eat-method\") {\r\n        this.setState({ showModal: true });\r\n        this.setState({ currentModalTitle: \"Pilih Cara Makan Anda\" });\r\n        this.setState({\r\n          currentModal: [\r\n            {\r\n              image: \"dineIn\",\r\n              option: \"Makan Di Tempat\",\r\n            },\r\n            {\r\n              image: \"takeaway\",\r\n              option: \"Takeaway / Bungkus\",\r\n            },\r\n          ],\r\n        });\r\n      } else if (data === \"pay-method\") {\r\n        this.setState({ showModal: true });\r\n        this.setState({ currentModalTitle: \"Bayar Pakai Apa\" });\r\n        this.setState({\r\n          currentModal: [\r\n            {\r\n              image: \"cashier\",\r\n              option: \"Pembayaran Di Kasir\",\r\n              icon: CashierPayment\r\n            },\r\n            {\r\n              image: \"ovo\",\r\n              option: \"OVO\",\r\n              icon: OvoPayment\r\n            },\r\n            {\r\n              image: \"dana\",\r\n              option: \"DANA\",\r\n              icon: DanaPayment\r\n            },\r\n            {\r\n              image: \"shopee\",\r\n              option: \"ShopeePay\",\r\n              icon: ShopeePayment\r\n            }\r\n          ],\r\n        });\r\n      } else if (data === \"payment-detail\") {\r\n        this.setState({ showModal: true });\r\n        this.setState({ currentModalTitle: \"Rincian Pembayaran\" });\r\n        this.setState({\r\n          currentModal: finalProduct\r\n        });\r\n      } else if (data === \"payment-checking\") {\r\n        if (!this.state.disabledSubmitButton) {\r\n          this.setState({ showModal: true });\r\n          this.setState({ currentModalTitle: \"Pesanan yang Anda buat tidak dapat dibatalkan\" }); \r\n        }\r\n      }\r\n    }\r\n  \r\n    setModal(isShow) {\r\n      this.setState({ showModal: isShow });\r\n    }\r\n\r\n    handleDecrease(e, ind, mid) {\r\n      let allCart = JSON.parse(localStorage.getItem('cart'))\r\n      if (e.foodAmount > 1) {\r\n        let filteredStore = []\r\n        allCart.forEach((store) => {\r\n          if (store.mid === mid) {\r\n            filteredStore = store.food.filter((data, index) => {\r\n              return index === ind\r\n            })\r\n  \r\n            let { foodAmount, foodTotalPrice } = filteredStore[0]\r\n  \r\n            let countAmount = foodTotalPrice - (foodTotalPrice / foodAmount)\r\n  \r\n            filteredStore[0].foodTotalPrice = countAmount\r\n            filteredStore[0].foodAmount = foodAmount - 1\r\n            store.food[ind] = filteredStore[0]\r\n          }\r\n        });\r\n  \r\n        localStorage.setItem('cart', JSON.stringify(allCart))\r\n        this.setState({ updateData: 'updated' })\r\n      } else {\r\n        let filteredCart;\r\n        let addedMerchants = []\r\n        let newAllCart = []\r\n        allCart.forEach((store) => {\r\n          if (store.mid === mid) {\r\n            let filteredStore = store.food.filter((data, index) => {\r\n              return index !== ind\r\n            })\r\n  \r\n            if (filteredStore.length === 0) {\r\n              filteredCart = cart.filter((filterStore) => {\r\n                return filterStore.mid !== store.mid;\r\n              });\r\n              localStorage.setItem(\"cart\", JSON.stringify(filteredCart))\r\n              filteredCart.forEach((cart) => {\r\n                addedMerchants.push(cart.mid)\r\n                Cookies.set(\"addedMerchants\", addedMerchants)\r\n              })\r\n            } else {\r\n              let newFilter = store.food\r\n              newFilter = []\r\n              filteredStore.forEach((val) => {\r\n                newFilter.push(val)\r\n              })\r\n              store.food = newFilter\r\n              newAllCart.push(store)\r\n            }\r\n          } else {\r\n            newAllCart.push(store)\r\n          }\r\n        });\r\n\r\n        let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n  \r\n        if (newAllCart.length < 2) {\r\n          cart.splice(1)\r\n          localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n          window.location.href = '/' + selectedMerchant[0].username;\r\n          this.removeStorage()\r\n        } else {\r\n          let filterMerchantCart = newAllCart.filter(valueCart => {\r\n            return valueCart.mid === mid\r\n          })\r\n          localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n          if (filterMerchantCart.length) {\r\n            this.setState({ updateData: 'updated' })\r\n          } else {\r\n            window.location.href = '/' + selectedMerchant[0].username;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setState({ insurancePrice: 0});\r\n      this.setState({ insuranceCheckbox: false });\r\n      this.props.InsurancePrice(0);\r\n      this.props.InsuranceCheckbox(false);\r\n    }\r\n  \r\n    handleIncrease(e, ind, mid) {\r\n      let filteredStore = []\r\n      let allCart = JSON.parse(localStorage.getItem('cart'))\r\n      allCart.forEach((store) => {\r\n        if (store.mid === mid) {\r\n          filteredStore = store.food.filter((data, index) => {\r\n            return index === ind\r\n          })\r\n  \r\n          let { foodAmount, foodTotalPrice } = filteredStore[0]\r\n  \r\n          let countAmount = foodTotalPrice + (foodTotalPrice / foodAmount)\r\n  \r\n          filteredStore[0].foodTotalPrice = countAmount\r\n          filteredStore[0].foodAmount = foodAmount + 1\r\n          store.food[ind] = filteredStore[0]\r\n        }\r\n      });\r\n  \r\n      localStorage.setItem('cart', JSON.stringify(allCart))\r\n      this.setState({ updateData: 'updated' });\r\n      \r\n      this.setState({ insurancePrice: 0});\r\n      this.setState({ insuranceCheckbox: false });\r\n      this.props.InsurancePrice(0);\r\n      this.props.InsuranceCheckbox(false);\r\n    }\r\n\r\n    handleOption = (data) => {\r\n      let valueTab\r\n      if (this.props.noTable !== undefined) {\r\n        if (this.state.currentModalTitle === \"Pilih Cara Makan Anda\") {\r\n          if (data == 1) {\r\n            valueTab = 0\r\n            valueTab.toString()\r\n            localStorage.setItem('table', valueTab)\r\n          } else {\r\n            valueTab = localStorage.getItem('lastTable')\r\n            valueTab.toString()\r\n            localStorage.setItem('table', valueTab)\r\n          }\r\n        }\r\n      }\r\n      if (this.state.currentModalTitle === \"Pilih Cara Makan Anda\") {\r\n        if (data == 0) {\r\n          this.setState({ biz_type: \"DINE_IN\", eat_type: \"Makan Di Tempat\", indexOptionEat: 0 })\r\n        } else {\r\n          this.setState({ biz_type: \"TAKE_AWAY\", eat_type: \"Bungkus / Takeaway\", indexOptionEat: data })\r\n        }\r\n      } else if (this.state.currentModalTitle === \"Bayar Pakai Apa\") {\r\n        if (data === 0) {\r\n          this.setState({ paymentType: \"PAY_BY_CASHIER\", paymentOption: \"Pembayaran Di Kasir\", indexOptionPay: 0 })\r\n        } else {\r\n          this.setState({ paymentType: \"WALLET_OVO\", paymentOption: \"OVO\", indexOptionPay: data })\r\n        }\r\n      }\r\n    }\r\n\r\n    handlePayment = () => {\r\n      let theUUID = uuidV4();\r\n      theUUID = theUUID.replace(/-/g, \"\");\r\n      const dateNow = new Date().toISOString();\r\n      let selectedMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n      Axios(address + \"merchant/v1/shop/status/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": theUUID,\r\n          \"x-request-timestamp\": dateNow,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"mid\": selectedMerchant[0].mid,\r\n        },\r\n        method: \"GET\"\r\n      }).then((shopStatusRes) => {\r\n        let merchantHourCheckingResult = shopStatusRes.data.results\r\n        if (merchantHourCheckingResult.minutes_remaining < \"2\") {\r\n          if (this.state.cartReduData.shippingDateType == 1) {\r\n            this.paymentProcess()\r\n          } else {\r\n            this.setState({ cancelCartModal: true })\r\n          }\r\n        } else if(merchantHourCheckingResult.minutes_remaining < \"31\") {\r\n          if (this.state.cartReduData.shippingDateType == 1) {\r\n            this.paymentProcess()\r\n          } else {\r\n            this.setState({ cancelCartModal: true })\r\n          }\r\n        } else {\r\n          this.paymentProcess()\r\n        }\r\n      }).catch((err) => console.log(err))\r\n    };\r\n\r\n    paymentProcess = () => {\r\n      this.props.LoadingButton()\r\n      const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n      let storageData = JSON.parse(localStorage.getItem('cart'))\r\n      let noTab = this.props.noTable ? this.props.noTable : 0\r\n      let allMenu = storageData.filter(filterCart => {\r\n        return filterCart.mid === currentCartMerchant.mid\r\n      })\r\n      let selectedProd = []\r\n  \r\n      allMenu[0].food.forEach(selectMenu => {\r\n        let newlistArr = ''\r\n        let extraprice = 0\r\n        selectMenu.foodListCheckbox.forEach((val) => {\r\n          val.forEach((val2) => {\r\n            newlistArr += `${val2.name}, `\r\n            extraprice += val2.price\r\n          })\r\n        })\r\n  \r\n        selectMenu.foodListRadio.forEach((val) => {\r\n          val.forEach((val2) => {\r\n            newlistArr += `${val2.name}, `\r\n            extraprice += val2.price\r\n          })\r\n        })\r\n  \r\n        newlistArr += selectMenu.foodNote\r\n        extraprice = extraprice.toString()\r\n  \r\n        selectedProd.push({\r\n          product_id: selectMenu.productId,\r\n          product_name: selectMenu.foodName,\r\n          product_price: Number(selectMenu.foodPrice),\r\n          notes: newlistArr,\r\n          quantity: selectMenu.foodAmount,\r\n          discount: 0,\r\n          extra_price: Number(extraprice),\r\n          extra_menus: [],\r\n        })\r\n      })\r\n  \r\n      let newDate = new Date().getTime()\r\n      let expiryDate = ''\r\n      if (this.state.paymentType === 'PAY_BY_CASHIER') {\r\n        newDate += 1800000\r\n        phoneNumber = ''\r\n      } else if (this.state.paymentType === 'WALLET_OVO') {\r\n        newDate += 60000\r\n      } else if (this.state.paymentType === 'WALLET_DANA' || this.state.paymentType === 'WALLET_SHOPEEPAY') {\r\n        newDate += 600000\r\n      }\r\n      expiryDate = moment(new Date(newDate)).format(\"yyyy-MM-DD HH:mm:ss\")\r\n\r\n      let customerInfo = {\r\n        customer_name: this.state.customerName,\r\n        customer_address: this.state.cartReduData.fullAddress,\r\n        customer_address_detail: this.state.cartReduData.shipperNotes,\r\n        customer_phone_number: \"0\" + this.state.customerPhoneNumber,\r\n        latitude: this.state.cartReduData.lat,\r\n        longitude: this.state.cartReduData.lng,\r\n        subdistrict_name: this.state.cartReduData.district,\r\n        city: this.state.cartReduData.city,\r\n        province: this.state.cartReduData.province,\r\n        postal_code: this.state.cartReduData.postalCode,\r\n      }\r\n\r\n      let pickupType = ''\r\n      let shipperName = ''\r\n      let shipperType = ''\r\n      let shipperCategoryType = ''\r\n      let shipperPrice = 0\r\n\r\n      if(this.state.cartReduData.pickupType === 0) {\r\n        pickupType = \"PICKUP\";\r\n        shipperName = \"Pickup Sendiri\";\r\n        shipperPrice = 0;\r\n        shipperType = \"\";\r\n        shipperCategoryType = \"\";\r\n        customerInfo.customer_address = \"\";\r\n        customerInfo.customer_address_detail = \"\";\r\n        customerInfo.latitude = 0;\r\n        customerInfo.longitude = 0;\r\n        customerInfo.subdistrict_name = \"\";\r\n        customerInfo.city = \"\";\r\n        customerInfo.province = \"\";\r\n        customerInfo.postal_code = \"\";\r\n      } else {\r\n        pickupType = \"DELIVERY\";\r\n        shipperName = this.state.cartReduData.shippingCode;\r\n        shipperPrice = this.state.cartReduData.shippingPrice;\r\n        shipperType = this.state.cartReduData.courierServiceType;\r\n        shipperCategoryType = this.state.cartReduData.shippingType;\r\n      }\r\n\r\n      let shippingTime = '';\r\n      let shippingType = '';\r\n\r\n      if(this.state.cartReduData.shippingDateType === 0) {\r\n        shippingTime = moment(new Date()).format(\"yyyy-MM-DD HH:mm:ss\");\r\n        shippingType = \"NOW\";\r\n      } else {\r\n        shippingTime = moment(new Date(this.state.cartReduData.shippingDate)).format(\"yyyy-MM-DD HH:mm:ss\");\r\n        shippingType = \"CUSTOM\";\r\n      }\r\n\r\n      let shippingMethod = {\r\n        shipping_method: shipperName,\r\n        shipping_cost: shipperPrice,\r\n        shipping_time: shippingTime,\r\n        shipping_time_type: shippingType,\r\n        shipping_insurance: this.state.insurancePrice,\r\n        shipping_service_type: shipperType,\r\n        shipping_service_type_category: shipperCategoryType\r\n      }\r\n\r\n      let totalPayment = finalProduct[0].totalPrice + Number(shipperPrice)\r\n  \r\n      var requestData = {\r\n        products: selectedProd,\r\n        shipping : shippingMethod,\r\n        customer : customerInfo,\r\n        mid: currentCartMerchant.mid,\r\n        order_type: pickupType,\r\n        order_platform: \"PIKAPP\",\r\n        total_product_price: finalProduct[0].totalPrice,\r\n        payment_method: this.state.paymentType,\r\n        billing_phone_number: this.state.cartReduData.phoneNumber,\r\n        order_status: \"OPEN\",\r\n        total_discount: 0,\r\n        total_payment: totalPayment + this.state.insurancePrice,\r\n        expiry_date: expiryDate\r\n      }\r\n    \r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      \r\n      Axios(address + \"pos/v2/web/transaction/add/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: requestData,\r\n      })\r\n        .then((res) => {\r\n          if(this.state.paymentType === 'WALLET_OVO') {\r\n            this.setState({ successMessage: 'Silahkan Bayar melalui OVO' })\r\n            setTimeout(() => {\r\n              let filterOtherCart = storageData.filter(valFilter => {\r\n                return valFilter.mid !== currentCartMerchant.mid\r\n              })\r\n              var dataOrder = {\r\n                transactionId : res.data.results[0].transaction_id,\r\n                totalPayment : requestData.total_payment,\r\n                paymentType : this.state.paymentType,\r\n                transactionTime : newDate\r\n              };\r\n              this.props.DataOrder(dataOrder);\r\n              localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n              localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n              localStorage.removeItem(\"lastTable\")\r\n              localStorage.removeItem(\"fctable\")\r\n              localStorage.removeItem(\"counterPayment\");\r\n              this.removeStorage()\r\n              this.setState({ loadButton: true })\r\n              this.props.DoneLoad()\r\n            }, 1000);\r\n          }\r\n          else if(this.state.paymentType === 'WALLET_DANA') {\r\n            this.setState({ successMessage: 'Silahkan Bayar melalui DANA' })\r\n            setTimeout(() => {\r\n              let filterOtherCart = storageData.filter(valFilter => {\r\n                return valFilter.mid !== currentCartMerchant.mid\r\n              })\r\n              var dataOrder = {\r\n                transactionId : res.data.results[0].transaction_id,\r\n                totalPayment : requestData.total_payment,\r\n                paymentType : this.state.paymentType,\r\n                transactionTime : newDate\r\n              };\r\n              this.props.DataOrder(dataOrder);\r\n              localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n              localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n              localStorage.removeItem(\"lastTable\")\r\n              localStorage.removeItem(\"fctable\")\r\n              localStorage.removeItem(\"counterPayment\");\r\n              this.removeStorage()\r\n              window.location.href = res.data.results[0].checkout_url_mobile;\r\n            }, 1000);\r\n          }\r\n          else if(this.state.paymentType === 'WALLET_SHOPEEPAY') {\r\n            this.setState({ successMessage: 'Silahkan Bayar melalui ShopeePay' })\r\n            setTimeout(() => {\r\n              let filterOtherCart = storageData.filter(valFilter => {\r\n                return valFilter.mid !== currentCartMerchant.mid\r\n              })\r\n              var dataOrder = {\r\n                transactionId : res.data.results[0].transaction_id,\r\n                totalPayment : requestData.total_payment,\r\n                paymentType : this.state.paymentType,\r\n                transactionTime : newDate\r\n              };\r\n              this.props.DataOrder(dataOrder);\r\n              localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n              localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n              localStorage.removeItem(\"lastTable\")\r\n              localStorage.removeItem(\"fctable\")\r\n              localStorage.removeItem(\"counterPayment\");\r\n              this.removeStorage()\r\n              window.location.assign(res.data.results[0].checkout_url_deeplink);\r\n            }, 1000);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.data !== undefined) {\r\n            alert(err.response.data.err_message)\r\n            this.props.DoneLoad()\r\n          }\r\n        });\r\n    }\r\n\r\n    removeStorage = () => {\r\n      localStorage.removeItem(\"SHIPMENT_TYPE\")\r\n      localStorage.removeItem(\"MANUAL_PAYMENT_TYPE\")\r\n      localStorage.removeItem(\"MANUAL_PHONE_NUMBER\")\r\n      localStorage.removeItem(\"MANUAL_SELECTED_PROMO\")\r\n      localStorage.removeItem(\"SHIPPERNOTES\")\r\n      localStorage.removeItem(\"SHIPPINGTYPE\")\r\n      localStorage.removeItem(\"SHIPPING_WITH_COURIER\")\r\n      localStorage.removeItem(\"FULLADDRESS\")\r\n      localStorage.removeItem(\"FORMATTEDADDRESS\")\r\n      localStorage.removeItem(\"LAT\")\r\n      localStorage.removeItem(\"LNG\")\r\n      localStorage.removeItem(\"DISTRICT\")\r\n      localStorage.removeItem(\"CITY\")\r\n      localStorage.removeItem(\"POSTALCODE\")\r\n      localStorage.removeItem(\"PROVINCE\")\r\n      Cookies.remove(\"MANUAL_NOTMATCHPROMO\")\r\n      Cookies.remove(\"MANUAL_TOTALPAYMENT\")\r\n      Cookies.remove(\"SHIPMENTDATETYPE\")\r\n      Cookies.remove(\"SHIPMENTDATE\")\r\n      Cookies.remove(\"MANUAL_CUSTOMER_NAME\")\r\n      Cookies.remove(\"MANUAL_CUSTOMER_PHONENUM\")\r\n    }\r\n  \r\n    notifModal = () => {\r\n      if (this.props.AllRedu.buttonLoad === false) {\r\n        return <NotifModal isShowNotif={this.props.AllRedu.buttonLoad} responseMessage={this.state.successMessage} />\r\n      }\r\n    }\r\n\r\n    newListAllChoices = (food) => {\r\n      let newlistArr = ''\r\n      food.foodListCheckbox.forEach((val) => {\r\n        val.forEach((val2) => {\r\n          return newlistArr += `${val2.name}, `\r\n        })\r\n      })\r\n  \r\n      food.foodListRadio.forEach((val) => {\r\n        val.forEach((val2) => {\r\n          return newlistArr += `${val2.name}, `\r\n        })\r\n      })\r\n      return <h5 className='cartmanual-List-content-choice' style={{display: \"flex\"}}><h5 className='cartmanual-List-content-notes' style={{fontWeight: \"bold\", color: \"black\"}}>Tambahan :</h5>{newlistArr}</h5>\r\n    }\r\n  \r\n    onEditCart = (ind, mid) => {\r\n      let filteredStore = []\r\n      let allCart = JSON.parse(localStorage.getItem('cart'))\r\n      allCart.forEach((store) => {\r\n        if (store.mid === mid) {\r\n          filteredStore = store.food.filter((data, index) => {\r\n            return index === ind\r\n          })\r\n        }\r\n      });\r\n  \r\n      var objFilteredCart = {\r\n        productId: filteredStore[0].productId,\r\n        foodName: filteredStore[0].foodName,\r\n        foodDesc: \"\",\r\n        foodCategory: filteredStore[0].foodCategory,\r\n        foodPrice: filteredStore[0].foodPrice,\r\n        foodImage: filteredStore[0].foodImage,\r\n        foodNote: filteredStore[0].foodNote,\r\n        foodListCheckbox: filteredStore[0].foodListCheckbox,\r\n        foodListRadio: filteredStore[0].foodListRadio,\r\n        foodTotalPrice: filteredStore[0].foodTotalPrice,\r\n        foodExt: [\r\n          {\r\n            name: \"\",\r\n            amount: filteredStore[0].foodAmount,\r\n          },\r\n        ],\r\n      }\r\n  \r\n      this.setState({ showMenuDet: true, filteredCart: filteredStore, currentData: objFilteredCart, indexEdit: ind, themid: mid })\r\n      this.props.EditMenuCart(true)\r\n\r\n      this.setState({ insurancePrice: 0});\r\n      this.setState({ insuranceCheckbox: false });\r\n      this.props.InsurancePrice(0);\r\n      this.props.InsuranceCheckbox(false);\r\n\r\n      document.body.style.overflowY = 'hidden'\r\n    }\r\n  \r\n    setMenuDetail(isShow) {\r\n      this.setState({ showMenuDet: isShow })\r\n      document.body.style.overflowY = ''\r\n    }\r\n  \r\n    handleCartAmount = (price) => {\r\n      currentTotal = price\r\n    }\r\n  \r\n    menuDetail = () => {\r\n      if (this.state.showMenuDet === true) {\r\n        return (\r\n          <MenuDetail\r\n            isShow={this.state.showMenuDet}\r\n            onHide={() => this.setMenuDetail(false)}\r\n            datas={this.state.currentData}\r\n            handleAmount={this.handleCartAmount}\r\n            handleClick={this.handleSaveCart}\r\n            handleData={this.handleCart}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  \r\n    handleCart = (data) => {\r\n      currentExt = data\r\n    }\r\n  \r\n    handleSaveCart = () => {\r\n      let filteredStore = []\r\n      let allCart = JSON.parse(localStorage.getItem('cart'))\r\n      let getProductId\r\n      allCart.forEach((store) => {\r\n        if (store.mid === this.state.themid) {\r\n          filteredStore = store.food.filter((data, index) => {\r\n            return index === this.state.indexEdit\r\n          })\r\n  \r\n          getProductId = filteredStore[0].productId\r\n  \r\n          filteredStore[0].foodAmount = currentExt.detailCategory[0].amount\r\n          filteredStore[0].foodListCheckbox = currentExt.listcheckbox\r\n          filteredStore[0].foodListRadio = currentExt.listradio\r\n          filteredStore[0].foodNote = currentExt.note\r\n          filteredStore[0].foodTotalPrice = currentTotal\r\n  \r\n          store.food[this.state.indexEdit] = filteredStore[0]\r\n        }\r\n      });\r\n      localStorage.setItem('cart', JSON.stringify(allCart))\r\n      this.setState({ updateData: 'updated' })\r\n  \r\n      let newNotes = ''\r\n      currentExt.listcheckbox.forEach(val => {\r\n        val.forEach(val2 => {\r\n          return newNotes += `${val2.name}, `\r\n        })\r\n      })\r\n  \r\n      currentExt.listradio.forEach(val => {\r\n        val.forEach(val2 => {\r\n          return newNotes += `${val2.name}, `\r\n        })\r\n      })\r\n  \r\n      if (currentExt.note) {\r\n        newNotes += currentExt.note\r\n      }\r\n  \r\n      let tableNumber = ''\r\n      if (localStorage.getItem('table')) {\r\n        tableNumber = localStorage.getItem('table')\r\n      } else {\r\n        tableNumber = 0\r\n      }\r\n  \r\n      let uuid = uuidV4();\r\n      const date = new Date().toISOString();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      Axios(address + \"txn/v2/cart-post/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"table-no\": tableNumber.toString()\r\n        },\r\n        method: \"POST\",\r\n        data: {\r\n          mid: this.state.themid,\r\n          pid: getProductId,\r\n          notes: newNotes,\r\n          qty: currentExt.detailCategory[0].amount,\r\n        }\r\n      })\r\n      .then(() => {\r\n        console.log('savetocart succeed');\r\n        this.setState({ insurancePrice: 0});\r\n        this.setState({ insuranceCheckbox: false });\r\n        this.props.InsurancePrice(0);\r\n        this.props.InsuranceCheckbox(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n    tourPage = () => {\r\n      if (this.state.startTour === true) {\r\n        return (\r\n          <TourPage \r\n            stepsContent={this.state.steptour}\r\n            isShowTour={this.state.startTour}\r\n            isHideTour={() =>this.showTourPage(false)}\r\n          />\r\n        )\r\n      }\r\n    }\r\n  \r\n    showTourPage = (isShowTour) => {\r\n      this.setState({ startTour: isShowTour });\r\n      document.body.style.overflowY = 'auto';\r\n      this.props.IsMerchantQR(false);\r\n      localStorage.setItem('cartTour', 0);\r\n      localStorage.setItem('storeTour',0);\r\n      localStorage.setItem('cartMerchant', 0);\r\n      localStorage.setItem('merchantFlow', 0);\r\n      localStorage.setItem('productTour', 0);\r\n    }\r\n  \r\n    isPhoneNum = (num) => {\r\n      phoneNumber = num\r\n    }\r\n\r\n    handleCustomerName = (e) =>{\r\n      this.setState({ customerName: e.target.value});\r\n      Cookies.set(\"MANUAL_CUSTOMER_NAME\", { custName: e.target.value })\r\n      this.props.CustomerName(e.target.value);\r\n\r\n      if(e.target.value !== \"\" && this.state.customerPhoneNumber !== \"\" && this.state.cartReduData.pickupType !== -1 && this.state.cartReduData.shippingDate !== \"\" && this.state.cartReduData.paymentType !== -1) {\r\n        this.setState({ disabledSubmitButton : false})\r\n      } else {\r\n        this.setState({ disabledSubmitButton : true})\r\n      }\r\n    }\r\n\r\n    handleCustomerPhoneNumber = (e) =>{\r\n      this.setState({ customerPhoneNumber: e.target.value});\r\n      Cookies.set(\"MANUAL_CUSTOMER_PHONENUM\", { phoneNum: e.target.value })\r\n      this.props.CustomerPhoneNumber(e.target.value);\r\n\r\n      if(this.state.customerName !== \"\" && e.target.value !== \"\" && this.state.cartReduData.pickupType !== -1 && this.state.cartReduData.shippingDate !== \"\" && this.state.cartReduData.paymentType !== -1) {\r\n        this.setState({ disabledSubmitButton : false})\r\n      } else {\r\n        this.setState({ disabledSubmitButton : true})\r\n      }\r\n    }\r\n\r\n    handleShowMenu = (status) => {\r\n      this.setState({ isShowItem: status });\r\n    }\r\n\r\n    sendTracking() {\r\n      let uuid = uuidV4();\r\n      const date = new Date().toISOString();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n  \r\n      const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n  \r\n      Axios(address + \"home/v1/event/add\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\" : \"PUBLIC\"\r\n        },\r\n        method: \"POST\",  \r\n        data: { \r\n          merchant_id: currentCartMerchant.mid,\r\n          event_type: \"ORDER_DETAIL\",\r\n          page_name: window.location.pathname\r\n        }\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.results);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n\r\n    handleInsurancePrice = (e) => {\r\n      if (e.target.checked) {\r\n        let totalPayment = finalProduct[0].totalPrice\r\n        let insurance = totalPayment * 0.5 / 100;\r\n\r\n        let finalNumber = 0;\r\n\r\n        if(insurance % 0.5 === 0) {\r\n          finalNumber = Math.ceil(insurance);\r\n        } else {\r\n          finalNumber = Math.floor(insurance);\r\n        }\r\n\r\n        this.setState({ insurancePrice: finalNumber});\r\n        this.setState({ insuranceCheckbox: e.target.checked });\r\n\r\n        this.props.InsurancePrice(finalNumber);\r\n        this.props.InsuranceCheckbox(e.target.checked);\r\n        if (JSON.parse(localStorage.getItem(\"SHIPPING_WITH_COURIER\"))) {\r\n          let shipmentWithCourier = JSON.parse(localStorage.getItem(\"SHIPPING_WITH_COURIER\"))\r\n          let shippingWithCourier = {\r\n            shippingName: shipmentWithCourier.shippingName,\r\n            shippingPrice: shipmentWithCourier.shippingPrice,\r\n            shippingDesc: shipmentWithCourier.shippingDesc,\r\n            courierServiceType: shipmentWithCourier.courierServiceType,\r\n            shippingCode: shipmentWithCourier.shippingCode,\r\n            insuranceCheckbox: e.target.checked,\r\n            insurancePrice: finalNumber\r\n          }\r\n          localStorage.setItem(\"SHIPPING_WITH_COURIER\", JSON.stringify(shippingWithCourier))\r\n        }\r\n      } else {\r\n        this.setState({ insurancePrice: 0});\r\n        this.setState({ insuranceCheckbox: e.target.checked });\r\n\r\n        this.props.InsurancePrice(0);\r\n        this.props.InsuranceCheckbox(e.target.checked);\r\n        if (JSON.parse(localStorage.getItem(\"SHIPPING_WITH_COURIER\"))) {\r\n          let shipmentWithCourier = JSON.parse(localStorage.getItem(\"SHIPPING_WITH_COURIER\"))\r\n          let shippingWithCourier = {\r\n            shippingName: shipmentWithCourier.shippingName,\r\n            shippingPrice: shipmentWithCourier.shippingPrice,\r\n            shippingDesc: shipmentWithCourier.shippingDesc,\r\n            courierServiceType: shipmentWithCourier.courierServiceType,\r\n            shippingCode: shipmentWithCourier.shippingCode,\r\n            insuranceCheckbox: e.target.checked,\r\n            insurancePrice: 0\r\n          }\r\n          localStorage.setItem(\"SHIPPING_WITH_COURIER\", JSON.stringify(shippingWithCourier))\r\n        }\r\n      }\r\n    }\r\n\r\n    merchantHourStatusWarning = () => {\r\n      if (this.state.merchantHourStatus == \"CLOSE\") {\r\n        const weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n        const weekdayId = [\"Minggu\",\"Senin\",\"Selasa\",\"Rabu\",\"Kamis\",\"Jumat\",\"Sabtu\"];\r\n        let nowDate = new Date()\r\n        if (weekday[nowDate.getDay()] == this.state.merchantHourNextOpenDay) {\r\n          return (\r\n            <div className=\"merchant-hour-status-layout\" style={{backgroundColor: \"#dc6a84\"}}>\r\n              <img className=\"merchant-hour-status-icon\" src={MerchantHourStatusIcon} />\r\n              <div className=\"merchant-hour-status-text\">Tutup, Buka Hari ini Pukul {this.state.merchantHourOpenTime} WIB</div>\r\n            </div>\r\n          )\r\n        } else if(weekday[nowDate.getDay()+1] == this.state.merchantHourNextOpenDay) {   \r\n          return (\r\n            <div className=\"merchant-hour-status-layout\" style={{backgroundColor: \"#dc6a84\"}}>\r\n              <img className=\"merchant-hour-status-icon\" src={MerchantHourStatusIcon} />\r\n              <div className=\"merchant-hour-status-text\">Tutup, Buka Besok Pukul {this.state.merchantHourNextOpenTime} WIB</div>\r\n            </div>\r\n          )\r\n        } else {\r\n          let nextOpenDay = weekday.indexOf(this.state.merchantHourNextOpenDay)\r\n          let finalNextOpenDay = weekdayId[nextOpenDay]\r\n          return (\r\n            <div className=\"merchant-hour-status-layout\" style={{backgroundColor: \"#dc6a84\"}}>\r\n              <img className=\"merchant-hour-status-icon\" src={MerchantHourStatusIcon} />\r\n              <div className=\"merchant-hour-status-text\">Tutup, Buka Hari {finalNextOpenDay} Pukul {this.state.merchantHourNextOpenTime} WIB</div>\r\n            </div>\r\n          )\r\n        }\r\n      } else if (this.state.merchantHourStatus == \"OPEN\") {\r\n        if (this.state.merchantHourGracePeriod <= 30) {\r\n          return (\r\n            <div className=\"cart-merchant-hour-status-layout\" style={{backgroundColor: \"#f4b55b\"}}>\r\n              <div className=\"cart-merchant-hour-status-text\">Toko akan Tutup {this.state.merchantHourGracePeriod} Menit Lagi</div>\r\n            </div>\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.loadButton) {\r\n        return <Redirect to='/orderconfirmation' />\r\n      }\r\n  \r\n      const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n      let allCart = JSON.parse(localStorage.getItem('cart'))\r\n      let filterCart = allCart.filter(valCart => {\r\n        return valCart.mid === currentCartMerchant.mid\r\n      })\r\n      if (filterCart.length === 0) {\r\n        // window.history.go(-1)\r\n        let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n        window.location.href = '/' + selectedMerchant[0].username;\r\n      } else {\r\n        if (this.state.changeUI) {\r\n          this.setState({ changeUI: false })\r\n        }\r\n      }\r\n\r\n      let modal;\r\n      if (this.state.showModal === true) {\r\n        modal = (\r\n          <CartModal\r\n            isShow={this.state.showModal}\r\n            onHide={() => this.setModal(false)}\r\n            title={this.state.currentModalTitle}\r\n            detailOptions={this.state.currentModal}\r\n            handleData={this.handleOption}\r\n            indexOptionEat={this.state.indexOptionEat}\r\n            indexOptionPay={this.state.indexOptionPay}\r\n            setPhoneNumber={this.isPhoneNum}\r\n            confirmPay={this.handlePayment}\r\n          />\r\n        );\r\n      } else {\r\n        modal = <></>\r\n      }\r\n\r\n      // Cart Cancel Modal\r\n      let cartCancelModal;\r\n      if (this.state.cancelCartModal === true) {\r\n        cartCancelModal = (\r\n          <CartCancelModal\r\n            isShow={this.state.cancelCartModal}\r\n            onHide={() => this.setState({ cancelCartModal: false })}\r\n          />\r\n        );\r\n      } else {\r\n        cartCancelModal = <></>\r\n      }\r\n  \r\n      let storageData = JSON.parse(localStorage.getItem('cart'))\r\n      let data = storageData;\r\n      let storeList = data.filter((store) => {\r\n        if (store.mid !== \"\") {\r\n          return store;\r\n        }\r\n      });\r\n  \r\n      let contentView = storeList.map((store) => {\r\n        let storeFood\r\n        let diffFood = [];\r\n        if(this.state.isShowItem === false || this.state.isShowItem === undefined) {\r\n          diffFood.push(store.food[0]);\r\n        } else {\r\n          diffFood = store.food;\r\n        }\r\n        if (store.mid === currentCartMerchant.mid) {\r\n          storeFood = diffFood.map((food, index) => {\r\n            return (\r\n              <div key={index} className='cartmanual-List-content'>\r\n                <div className='cartmanual-List-content-frame'>\r\n                  <img className='cartmanual-List-content-image' src={food.foodImage} alt='' />\r\n                </div>\r\n  \r\n                <div className='cartmanual-List-content-detail'>\r\n                  <div className='cartmanual-List-content-detail-left'>\r\n                    <h2 className='cartmanual-List-content-title'>{food.foodName}</h2>\r\n                    {this.newListAllChoices(food)}\r\n                    <h3 className='cartmanual-List-content-price'>Rp {Intl.NumberFormat(\"id-ID\").format(food.foodTotalPrice)}</h3>\r\n                    <h5 className='cartmanual-List-content-notes' style={{display: food.foodNote == \"\"? \"none\":\"block\"}}>{food.foodNote}</h5>\r\n                  </div>\r\n  \r\n                  <div className='cartmanual-List-content-detail-right'>\r\n                    <div className='cartmanual-List-editButton' onClick={() => this.onEditCart(index, store.mid)}>\r\n                      <div className='cartmanual-List-editWord'>Ubah</div>\r\n                    </div>\r\n  \r\n                    <div className='cartmanual-List-amountBox'>\r\n                      <div className='cartmanual-List-amountBox-inside'>\r\n                        <div className='cartmanual-List-minusBox' onClick={() => this.handleDecrease(food, index, store.mid)}>\r\n                          <div className='cartmanual-List-minusSym'>\r\n                            -\r\n                          </div>\r\n                        </div>\r\n  \r\n                        <div className='cartmanual-List-numberArea'>\r\n                          {food.foodAmount}\r\n                        </div>\r\n  \r\n                        <div className='cartmanual-List-plusBox' onClick={() => this.handleIncrease(food, index, store.mid)}>\r\n                          <div className='cartmanual-List-plusSym'>\r\n                            +\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        return storeFood\r\n      });\r\n\r\n      let detailView = storeList.map((store, index) => {\r\n        if (store.mid === currentCartMerchant.mid) {\r\n          return (\r\n            <div key={index} className='cartmanual-customerinfo'>\r\n              <div className='cartmanual-customerinfo-header'>\r\n                <div className='cartmanual-customerinfo-title'>\r\n                  Detail Restoran\r\n                </div>\r\n              </div>\r\n\r\n              <div className='cartmanual-customerinfo-content'>\r\n                <h2 className='cartmanual-detailcontent-address'>\r\n                  {store.storeName}\r\n                </h2>\r\n\r\n                <h4 className='cartmanual-detailcontent-addressdesc'>\r\n                  {store.storeAdress}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      });\r\n  \r\n      let totalPaymentShow = 0\r\n      let totalItem = 0\r\n      let selectedMerch = storeList.filter(store => {\r\n        return store.mid === currentCartMerchant.mid\r\n      });\r\n      \r\n      totalItem = selectedMerch[0].food.length;\r\n      selectedMerch[0].food.forEach(thefood => {\r\n        totalPaymentShow += thefood.foodTotalPrice\r\n      })\r\n  \r\n      finalProduct = [\r\n        {\r\n          totalPrice: totalPaymentShow,\r\n          discountPrice: 0,\r\n        },\r\n      ]\r\n      Cookies.set(\"MANUAL_TOTALPAYMENT\", totalPaymentShow)\r\n\r\n      let totalFinalProduct = totalPaymentShow + Number(this.state.cartReduData.shippingPrice) + this.state.insurancePrice;\r\n  \r\n      let paymentImage;\r\n      let eatImage;\r\n      if (this.state.biz_type === \"DINE_IN\") {\r\n        eatImage = diningTableColor;\r\n      } else if (this.state.biz_type === \"TAKE_AWAY\") {\r\n        eatImage = takeawayColor;\r\n      }\r\n      if (this.state.paymentType === \"PAY_BY_CASHIER\") {\r\n        paymentImage = CashierPayment\r\n      } else if (this.state.paymentType === \"WALLET_OVO\") {\r\n        paymentImage = OvoPayment\r\n      }\r\n    \r\n      if (this.state.changeUI) {\r\n        return (\r\n          <div style={{ display: 'flex', position: 'absolute', height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#4bb7ac\"\r\n              height={100}\r\n              width={100}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n  \r\n      return (\r\n        <>\r\n          <div className='cartmanual-Layout'>\r\n            <div className=\"cartmanual-header\">\r\n                <span className=\"cartmanual-back\" onClick={() => window.history.back()}>\r\n                    <img className=\"cartmanual-backicon\" src={ArrowBack} alt='' />\r\n                </span>\r\n                <div className=\"cartmanual-title\">Checkout</div>\r\n            </div>\r\n            {this.merchantHourStatusWarning()}\r\n\r\n            {\r\n              this.state.notMatchPromo ?\r\n              <div className=\"promo-alert-paymentnotselected\">\r\n                  <span className=\"promo-alert-icon\">\r\n                      <img className=\"alert-icon\" src={PromoAlert} alt='' />\r\n                  </span>\r\n\r\n                  <div className=\"promo-alert-title\">Voucher tidak bisa digunakan, silahkan ubah terlebih dahulu</div>\r\n              </div>\r\n              :\r\n              null\r\n            }\r\n  \r\n            <div className='cartmanual-Content'>\r\n              <div className='cartmanual-LeftSide'>\r\n                <div className='cartmanual-List'>\r\n                  <div className='cartmanual-List-header'>\r\n                    <h4 className='cartmanual-List-title'>\r\n                      Keranjang\r\n                    </h4>\r\n                    <h4 className='cartmanual-List-itembox'>\r\n                      {totalItem} Item\r\n                    </h4>\r\n                  </div>\r\n  \r\n                  {contentView}\r\n\r\n                  {/* <div className='cartmanual-List-itemaction' onClick={() => this.handleShowMenu(true)} style={{ width: this.state.isShowItem ? \"160px\" : \"210px\" }}> */}\r\n                    {\r\n                      totalItem > 1 ?\r\n                      this.state.isShowItem ? \r\n                      <div className='cartmanual-List-itemaction' onClick={() => this.handleShowMenu(false)} style={{ width: this.state.isShowItem ? \"160px\" : \"210px\" }}>\r\n                        <div className='cartmanual-List-hidemenu-word'>Sembunyikan</div>\r\n                        <img className='cartmanual-List-hidemenu-icon' src={ArrowUp}></img>\r\n                      </div>\r\n                      :\r\n                      <div className='cartmanual-List-itemaction' onClick={() => this.handleShowMenu(true)} style={{ width: this.state.isShowItem ? \"160px\" : \"210px\" }}>\r\n                        <div className='cartmanual-List-showmenu-word'>Lihat {totalItem-1} pesanan lagi</div>\r\n                        <img className='cartmanual-List-showmenu-icon' src={ArrowDown}></img>\r\n                      </div>\r\n                      :\r\n                      <></>\r\n                    }\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n  \r\n              <div className='cartmanual-RightSide'>\r\n                <div className='cartmanual-flex-RightSide'>\r\n                  {detailView}\r\n  \r\n                  <div className='cartmanual-customerinfo'>\r\n                    <div className='cartmanual-customerinfo-header'>\r\n                      <div className='cartmanual-customerinfo-title'>\r\n                        Info Pelanggan\r\n                      </div>\r\n                    </div>\r\n  \r\n                    <div className='cartmanual-customerinfo-content'>\r\n                      <div className=\"cartmanual-infoname\">\r\n                        <div className=\"cartmanual-infoname-title\">Nama <span style={{color: \"red\"}}>*</span></div>\r\n                        <input className=\"cartmanual-infoname-inputArea\" placeholder=\"Masukkan nama Anda disini...\" onChange={this.handleCustomerName} value={this.state.customerName} />\r\n                      </div>\r\n\r\n                      <div className=\"cartmanual-phonenumber\">\r\n                        <div className=\"cartmanual-phonenumber-title\">No. Handphone <span style={{color: \"red\"}}>*</span></div>\r\n                        <div className=\"cartmanual-phonenumber-layout\">\r\n                          <div className=\"cartmanual-phonenumber-code\">+62</div>\r\n                          <input className=\"cartmanual-phonenumber-inputArea\" type='number' inputMode='numeric' placeholder=\"Masukkan nomor HP Anda disini\" onChange={this.handleCustomerPhoneNumber} value={this.state.customerPhoneNumber}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    \r\n                  <div className='cartmanual-deliveryinfo'>\r\n                    <div className='cartmanual-detailContent'>\r\n                      <div className='cartmanual-radioSection'>\r\n                        <div>\r\n                        <Link to={\"/cartmanual/pickup\"} style={{ textDecoration: \"none\" }}>\r\n                        <label>\r\n                          <div className='cartmanual-radioSide'>\r\n                            <img className='cartmanual-radio-image' src={DeliveryIcon} alt='' />\r\n                            <div className='cartmanual-radioTitle'>Pilih Pengiriman</div>\r\n                          </div>\r\n                          <span className=\"cartmanual-arrowright\">\r\n                            <img className=\"cartmanual-arrowright-icon\" src={ArrowRight} />\r\n                          </span>\r\n                        </label>\r\n                        </Link>\r\n                        </div>\r\n                        {\r\n                          this.state.cartReduData.pickupType != -1 ?\r\n                          <div className='cartmanual-deliverydetail'>\r\n                            <div className=\"cartmanual-deliverydetail-border\"></div>\r\n\r\n                            <div className='cartmanual-deliverydetail-desc'>\r\n                              {\r\n                                this.state.cartReduData.pickupType === 1 ?\r\n                                <>\r\n                                  <div className='cartmanual-deliverydetail-title'>Dikirim ke</div>\r\n                                  <div className='cartmanual-deliverydetail-address'>{this.state.cartReduData.formattedAddress}, {this.state.cartReduData.district}, {this.state.cartReduData.city}</div>\r\n                                  {\r\n                                    this.state.cartReduData.shipperNotes != \"\" ?\r\n                                    <div className='cartmanual-deliverydetail-shipperNotesTitle'>Catatan : <span className='cartmanual-deliverydetail-shipperNotes'>{this.state.cartReduData.shipperNotes}</span></div>\r\n                                    :\r\n                                    null\r\n                                  }\r\n                                  <div className='cartmanual-deliverydetail-shipperLayout'>\r\n                                    <div className='cartmanual-deliverydetail-shipperLayout-shipperName'>{this.state.cartReduData.shippingType} - {this.state.cartReduData.shippingName}</div>\r\n                                    <div className='cartmanual-deliverydetail-shipperLayout-shipperPrice'>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.cartReduData.shippingPrice)}</div>\r\n                                  </div>\r\n                                  <div className='cartmanual-deliverydetail-insurance'>\r\n                                    <input id=\"insuranceCheckbox\" name=\"insuranceCheckbox\" className=\"cartmanual-deliverydetail-insurance-check\" type=\"checkbox\" checked={this.state.insuranceCheckbox} defaultChecked={this.state.insuranceCheckbox} onChange={this.handleInsurancePrice} />\r\n                                    <div className='cartmanual-deliverydetail-insurance-info'>Asuransi Pengiriman</div>\r\n                                    {/* <label htmlFor=\"insuranceCheckbox\" className='cartmanual-deliverydetail-insurance-info'>Asuransi Pengiriman</label> */}\r\n                                    {/* <img className='cartmanual-deliverydetail-insuranceicon' src={InfoIcon}></img> */}\r\n                                  </div>\r\n                                </>\r\n                                :\r\n                                <div className='cartmanual-deliverydetail-title'>Pickup Sendiri</div>\r\n                              }\r\n                            </div>\r\n                          </div> \r\n                          :\r\n                          null\r\n                        } \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='cartmanual-shippingdate'>\r\n                    <div className='cartmanual-detailContent'>\r\n                      <div className='cartmanual-radioSection'>\r\n                        <div>\r\n                          <Link to={\"/cartmanual/shipping\"} style={{ textDecoration: \"none\" }}>\r\n                          <label>\r\n                            <div className='cartmanual-radioSide'>\r\n                              <img className='cartmanual-radio-image' src={ShippingDate} alt='' />\r\n                              <div className='cartmanual-radioTitle'>Atur Tanggal Pengiriman</div>\r\n                            </div>\r\n                            <span className=\"cartmanual-arrowright\">\r\n                              <img className=\"cartmanual-arrowright-icon\" src={ArrowRight} />\r\n                            </span>\r\n                          </label>\r\n                          </Link>\r\n                        </div>\r\n                        {\r\n                          this.state.customerShippingDate ? \r\n                          <div className='cartmanual-shippingdatedetail'>\r\n                            <div className=\"cartmanual-shippingdatedetail-border\"></div>\r\n\r\n                            {\r\n                              this.state.cartReduData.shippingDateType === 1 ?\r\n                              <div className='cartmanual-shippingdatedetail-desc'>\r\n                                <div>{this.state.customerShippingDate}</div>\r\n                              </div>\r\n                              :\r\n                              <div className='cartmanual-shippingdatedetail-desc'>\r\n                                <div>Sekarang</div>\r\n                              </div>\r\n                            }\r\n                          </div>\r\n                          :\r\n                          <></>\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='cartmanual-paymentmethod'>\r\n                    <div className='cartmanual-detailContent'>\r\n                      <div className='cartmanual-radioSection'>\r\n                        <div>\r\n                        <Link to={\"/cartmanual/payment\"} style={{ textDecoration: \"none\" }}>\r\n                        <label>\r\n                          <div className='cartmanual-radioSide'>\r\n                            <img className='cartmanual-radio-image' src={PaymentMethod} alt='' />\r\n                            <div className='cartmanual-radioTitle'>Metode Pembayaran</div>\r\n                          </div>\r\n                          <span className=\"cartmanual-arrowright\">\r\n                            <img className=\"cartmanual-arrowright-icon\" src={ArrowRight} />\r\n                          </span>\r\n                        </label>\r\n                        </Link>\r\n                        </div>\r\n                        {\r\n                          this.props.CartRedu.paymentType != -1 ?\r\n                          <div className='cartmanual-paymentdetail'>\r\n                            <div className=\"cartmanual-paymentdetail-border\"></div>\r\n\r\n                            <div className='cartmanual-paymentdetail-desc'>\r\n                                <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                                  <img style={{height: '25px', width: '25px'}} src={this.state.paymentImage} />\r\n                                  <div style={{marginLeft: '10px'}}>{this.state.paymentOption}</div>\r\n                                </div>\r\n                                {\r\n                                  this.state.cartReduData.phoneNumber !== \"\" ?\r\n                                  <div>{this.state.cartReduData.phoneNumber}</div>\r\n                                  :\r\n                                  <></>\r\n                                }\r\n                            </div>\r\n                          </div>\r\n                          :\r\n                          null\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='promoCart-voucherinfo'>\r\n                    <Link to={{ pathname: \"/promo\", state: { title : \"Pilih Voucher Diskon\", alertStatus : { phoneNumber: this.props.CartRedu.phoneNumber, paymentType : this.props.CartRedu.paymentType }, cartStatus : { totalPayment: totalPaymentShow }}}} style={{ textDecoration: \"none\", width: \"100%\" }}>\r\n                      <div className='promoCart-detailContent'>\r\n                            <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n                              <div className='promoCart-leftSide'>\r\n                                  <img className='promoCart-img-icon' src={VoucherIcon} alt='' />\r\n                                  <div className='promoCart-title'>Voucher Diskon</div>\r\n                                </div>\r\n\r\n                                <span className=\"promoCart-arrowright\">\r\n                                  <img className=\"promoCart-arrowright-icon\" src={ArrowRight} />\r\n                                </span>\r\n                            </div>\r\n\r\n                            {\r\n                              this.state.selectedPromo != null ?\r\n                              <div className='promoCart-selectiondetail'>\r\n                                <div className=\"promoCart-selectiondetail-border\"></div>\r\n\r\n                                <div className='promoCart-selectiondetail-desc'>\r\n                                  { this.state.notMatchPromo ? <img src={NoMatchPromo} style={{width: \"18px\", height: \"16px\", marginRight: \"10px\"}} /> : null }\r\n                                  <div style={{color: this.state.notMatchPromo ? \"#DC6A84\" : \"#111111\"}}>{this.state.selectedPromo.promo_title}</div>\r\n                                </div>\r\n                              </div>\r\n                              :\r\n                              null\r\n                            }\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className='cartmanual-summarypayment'>\r\n                    <div className='cartmanual-detailcontent-payment'>\r\n                      <div>\r\n                      <div className='cartmanual-detailprice-header'>\r\n                        <div className='cartmanual-detailprice-title'>\r\n                          Ringkasan Belanja\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cartmanual-detailprice-desc'>\r\n                        <div className='orderDetail-detailprice-word'>\r\n                          <div>Total Harga ({totalItem} Item(s))</div>\r\n                          <div>Rp. {Intl.NumberFormat(\"id-ID\").format(totalPaymentShow)}</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cartmanual-detailprice-desc'>\r\n                        <div className='orderDetail-detailprice-word'>\r\n                          <div>Total Diskon Item</div>\r\n                          <div>Rp. 0</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cartmanual-detailprice-desc'>\r\n                        <div className='orderDetail-detailprice-word'>\r\n                          <div>Total Ongkos Kirim</div>\r\n                          <div>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.cartReduData.shippingPrice)}</div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      {\r\n                        this.state.insuranceCheckbox ?\r\n                        <div className='cartmanual-detailprice-desc'>\r\n                          <div className='orderDetail-detailprice-word'>\r\n                            <div>Asuransi Pengiriman</div>\r\n                            <div>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.insurancePrice)}</div>\r\n                          </div>\r\n                        </div>\r\n                        : \r\n                        <></>\r\n                      }\r\n                      \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n  \r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='cartmanual-Layout-mob'>\r\n            <div className='cartmanual-checkoutArea-mob'>\r\n  \r\n              <div className='cartmanual-TotalAmount-mob'>\r\n                <h3 className='cartmanual-TotalAmount-title-mob'>Total Harga</h3>\r\n  \r\n                <div className='cartmanual-TotalAmount-bottom-mob'>\r\n                  <h2 className='cartmanual-TotalAmount-price-mob'>Rp. {Intl.NumberFormat(\"id-ID\").format(totalFinalProduct)}</h2>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className='cartmanual-OrderButton-mob buttonorder' onClick={() => this.handleDetail(\"payment-checking\")} \r\n              style={{ \r\n                backgroundColor: this.state.disabledSubmitButton ? '#aaaaaa' : '#4bb7ac', \r\n                pointerEvents: this.state.disabledSubmitButton ? 'none' : 'auto' \r\n              }}\r\n              >\r\n                <div className='cartmanual-OrderButton-content-mob'>\r\n                  <h1 className='cartmanual-OrderButton-word-mob'>Buat Pesanan</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {modal}\r\n          {cartCancelModal}\r\n          {this.menuDetail()}\r\n          {this.notifModal()}\r\n          {this.tourPage()}\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n      AllRedu: state.AllRedu,\r\n      AuthRedu: state.AuthRedu,\r\n      CartRedu: state.CartRedu\r\n    }\r\n  }\r\n  \r\n  export default connect(Mapstatetoprops, { EditMenuCart, LoadingButton, DoneLoad, IsMerchantQR, DataOrder, CustomerName, CustomerPhoneNumber, InsuranceCheckbox, InsurancePrice })(CartManualView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["559","560","561","562"],"import React, { createRef } from \"react\";\r\nimport RegisterDialog from \"../../Component/Authentication/RegisterDialog\";\r\nimport { firebaseAnalytics } from \"../../firebaseConfig\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\";\r\nimport pikappLogo from \"../../Asset/Logo/logo4x.png\";\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport ArrowDownColor from \"../../Asset/Icon/ArrowDownColor.png\";\r\nimport diningTableColor from \"../../Asset/Icon/diningTableColor.png\";\r\nimport takeawayColor from \"../../Asset/Icon/takeawayColor.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport DanaPayment from \"../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../Asset/Icon/shopee_icon.png\";\r\nimport NoTransaction from \"../../Asset/Icon/notrans.png\";\r\nimport OrderListStatus from \"../../Component/Modal/OrderListStatusModal\";\r\nimport moment from \"moment\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { DataDetail } from \"../../Redux/Actions\";\r\n\r\nlet interval = createRef();\r\n\r\nexport class StatusView extends React.Component {\r\n  _isMounted = false;\r\n  state = {\r\n    isMobile: false,\r\n    statusModal: false,\r\n    statusList: [\r\n      \"Semua Status\",\r\n      \"Menunggu Pembayaran\",\r\n      \"Menunggu Konfirmasi\",\r\n      \"Sedang Dimasak\",\r\n      \"Makanan Tiba\",\r\n      \"Transaksi Selesai\",\r\n      \"Transaksi Gagal\",\r\n    ],\r\n    statusIndex: 0,\r\n    showModal: false,\r\n    activeTab: 1,\r\n    showRegisterDialog: false,\r\n    isLogin: false,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n        biz_type: \"\",\r\n        payment: \"\",\r\n        transactionId: \"\",\r\n        transactionTime: \"\",\r\n      },\r\n    ],\r\n    staticCountDown: false,\r\n    updateStatus: false,\r\n    // continueDetail : false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    firebaseAnalytics.logEvent(\"orderlist_visited\");\r\n    this.sendTracking();\r\n    if (window.innerWidth < 700) {\r\n      this.setState({ isMobile: true });\r\n    } else {\r\n      this.setState({ isMobile: false });\r\n    }\r\n    // var auth = {\r\n    //   isLogged: false,\r\n    //   token: \"\",\r\n    //   new_event: true,\r\n    //   recommendation_status: false,\r\n    //   email: \"\",\r\n    // };\r\n    // if (Cookies.get(\"auth\") !== undefined) {\r\n    //   auth = JSON.parse(Cookies.get(\"auth\"));\r\n    //   this.setState({ isLogin: auth.isLogged });\r\n    // }\r\n    // if (auth.isLogged === false) {\r\n    //   var lastLink = { value: window.location.href };\r\n    //   Cookies.set(\"lastLink\", lastLink, { expires: 1 });\r\n    //   this.setRegisterDialog(true);\r\n    // } else {\r\n    //   this.getTransactionHistory();\r\n    // }\r\n    this.getTransactionHistory();\r\n    this.updateLikeWebsocket();\r\n  }\r\n\r\n  updateLikeWebsocket = () => {\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 120000);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // if (this.state.isLogin === false) {\r\n    //   var auth = {\r\n    //     isLogged: false,\r\n    //     token: \"\",\r\n    //     new_event: true,\r\n    //     recommendation_status: false,\r\n    //     email: \"\",\r\n    //   };\r\n    //   if (Cookies.get(\"auth\") !== undefined) {\r\n    //     auth = JSON.parse(Cookies.get(\"auth\"));\r\n    //     this.setState({ isLogin: auth.isLogged });\r\n    //   }\r\n    // }\r\n\r\n    if (this.state.updateStatus) {\r\n      window.location.reload();\r\n    }\r\n\r\n    if (this.state.staticCountDown) {\r\n      this.countDownTimer();\r\n      this.setState({ staticCountDown: false });\r\n    }\r\n  }\r\n\r\n  getTransactionHistory() {\r\n    // var auth = {\r\n    //   isLogged: false,\r\n    //   token: \"\",\r\n    //   new_event: true,\r\n    //   recommendation_status: false,\r\n    //   email: \"\",\r\n    // };\r\n    // if (Cookies.get(\"auth\") !== undefined) {\r\n    //   auth = JSON.parse(Cookies.get(\"auth\"));\r\n    // }\r\n\r\n    let currentTable = ''\r\n    if (localStorage.getItem('table')) {\r\n      currentTable = (localStorage.getItem('table'))\r\n    } else {\r\n      currentTable = 0\r\n    }\r\n    currentTable.toString()\r\n\r\n    let currentCartMerchant\r\n    if (Cookies.get(\"currentMerchant\")) {\r\n      currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    } else {\r\n      currentCartMerchant = { mid: 'M0' }\r\n    }\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    let historyTransAPI = `${address}txn/v2/txn-history/${currentTable}/${currentCartMerchant.mid}/`\r\n    Axios(historyTransAPI, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = { ...this.state };\r\n        stateData.data.pop();\r\n        results.forEach((result) => {\r\n          stateData.data.push({\r\n            title: result.merchant_name,\r\n            distance: \"\",\r\n            quantity: result.total_product,\r\n            status: result.status,\r\n            biz_type: result.biz_type,\r\n            payment: result.payment_with,\r\n            transactionId: result.transaction_id,\r\n            transactionTime: result.transaction_time,\r\n            transactionCountDown: result.expiry_date,\r\n            totalPrice: result.total_price,\r\n            timerMinutes: 0,\r\n            timerSeconds: 0,\r\n            stopInterval: true,\r\n          });\r\n        });\r\n        // console.log(stateData.data);\r\n        this.setState({ data: stateData.data, staticCountDown: true });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  setRegisterDialog(isShow) {\r\n    this.setState({ showRegisterDialog: isShow });\r\n  }\r\n\r\n  showRegisterDialog = () => {\r\n    if (this.state.showRegisterDialog === true) {\r\n      return (\r\n        <RegisterDialog\r\n          isShowRegister={this.state.showRegisterDialog}\r\n          onHideRegister={() => this.setRegisterDialog(false)}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  handleStatus = (isShow) => {\r\n    this.setState({ statusModal: isShow });\r\n  };\r\n\r\n  keepStatus = (status) => {\r\n    this.setState({ statusIndex: status });\r\n  };\r\n\r\n  statusDialog = () => {\r\n    if (this.state.statusModal) {\r\n      return (\r\n        <OrderListStatus\r\n          isShowStatusModal={this.state.statusModal}\r\n          onHideStatusModal={() => this.handleStatus(false)}\r\n          sendIndexStatus={this.state.statusIndex}\r\n          getStatusData={(status) => this.keepStatus(status)}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  goToOrderDetail = (transId, counterTime) => {\r\n    let value = {\r\n      transactionId: transId,\r\n      transactionTime: counterTime,\r\n    };\r\n    this.props.DataDetail(value);\r\n    localStorage.setItem(\"dataDetail\", JSON.stringify(value));\r\n    // this.setState({ continueDetail : true });\r\n  };\r\n\r\n  contentStatus = (value, bimg, blab, pimg, plab) => {\r\n    let formatDate = value.transactionTime;\r\n    return (\r\n      <Link to=\"/orderdetail\" style={{ textDecoration: \"none\" }}>\r\n        <div\r\n          className=\"orderList-transaction-content\"\r\n          onClick={() =>\r\n            this.goToOrderDetail(\r\n              value.transactionId,\r\n              value.transactionCountDown\r\n            )\r\n          }\r\n        >\r\n          <div className=\"orderList-transaction-topSide\">\r\n            <h3 className=\"orderList-transaction-merchName\">{value.title}</h3>\r\n\r\n            <h3 className=\"orderList-transaction-timeTrans\">\r\n              {moment(formatDate).format(\"DD MMMM H:mm\")}\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"orderList-transaction-centerSide\">\r\n            {value.quantity} | Rp {Intl.NumberFormat(\"id-ID\").format(value.totalPrice)}\r\n          </div>\r\n\r\n          <div className=\"orderList-transaction-bottomSide\">\r\n            <div className=\"orderList-transaction-foodService\">\r\n              <span>\r\n                <img className=\"orderList-foodService-logo\" src={bimg} alt=\"\" />\r\n              </span>\r\n\r\n              <h3 className=\"orderList-foodService-words\">{blab}</h3>\r\n            </div>\r\n\r\n            <div className=\"orderList-transaction-paymentService\">\r\n              <span>\r\n                <img\r\n                  className=\"orderList-paymentService-logo\"\r\n                  src={pimg}\r\n                  alt=\"\"\r\n                />\r\n              </span>\r\n\r\n              <h3 className=\"orderList-paymentService-words\">{plab}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  eachStatusList = (\r\n    value,\r\n    ind,\r\n    thestatus,\r\n    backColor,\r\n    bizImage,\r\n    bizLabel,\r\n    payImage,\r\n    payLabel\r\n  ) => {\r\n    return (\r\n      <div key={ind} className=\"orderListContent\">\r\n        <div\r\n          className=\"orderList-transaction-header\"\r\n          style={{ backgroundColor: backColor }}\r\n        >\r\n          <div className=\"orderList-transaction-title\">{thestatus}</div>\r\n        </div>\r\n\r\n        {this.contentStatus(value, bizImage, bizLabel, payImage, payLabel)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  countDownTimer = () => {\r\n    this.state.data.forEach((valTime, indTime) => {\r\n      if (valTime.status === \"OPEN\") {\r\n        // get future time\r\n\r\n        valTime.transactionCountDown = valTime.transactionCountDown.replace(/ /g, \"T\");\r\n        let eventTime = new Date(valTime.transactionCountDown).getTime();\r\n\r\n        interval = setInterval(() => {\r\n          // based on time set in user's computer time / OS\r\n          const currentTime = new Date().getTime();\r\n          const distance = eventTime - currentTime;\r\n\r\n          const minutes = Math.floor(\r\n            (distance % (1000 * 60 * 60)) / (1000 * 60)\r\n          );\r\n          const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n          let newMinutes = valTime.timerMinutes;\r\n          newMinutes = minutes;\r\n\r\n          let newSeconds = valTime.timerSeconds;\r\n          newSeconds = seconds;\r\n\r\n          let changeData = [...this.state.data];\r\n          if (distance < 0) {\r\n            console.log(changeData[indTime].stopInterval, indTime);\r\n            if (changeData[indTime].stopInterval) {\r\n              clearInterval(interval.current);\r\n              let lastMinutes = valTime.timerMinutes;\r\n              lastMinutes = \"0\";\r\n              changeData[indTime].timerMinutes = lastMinutes;\r\n\r\n              let lastSeconds = valTime.timerSeconds;\r\n              lastSeconds = \"0\";\r\n              changeData[indTime].timerSeconds = lastSeconds;\r\n              changeData[indTime].stopInterval = false;\r\n\r\n              let uuid = uuidV4();\r\n              uuid = uuid.replace(/-/g, \"\");\r\n              const date = new Date().toISOString();\r\n\r\n              var bodyFormData = new FormData();\r\n              bodyFormData.append(\"transaction_id\", valTime.transactionId);\r\n              bodyFormData.append(\"status\", \"FAILED\");\r\n\r\n              var options = {\r\n                method: \"post\",\r\n                url: address + \"txn/v2/txn-update/\",\r\n                headers: {\r\n                  \"x-client-id\": clientId,\r\n                  \"x-request-id\": uuid,\r\n                  \"x-request-timestamp\": date,\r\n                },\r\n                data: bodyFormData,\r\n              };\r\n\r\n              Axios(options)\r\n                .then(() => {\r\n                  this.setState({ data: changeData, updateStatus: true });\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }\r\n          } else {\r\n            if (valTime.payment === \"WALLET_OVO\" || valTime.payment === \"WALLET_DANA\" || valTime.payment === \"WALLET_SHOPEEPAY\") {\r\n              if (newSeconds < 10) {\r\n                clearInterval(interval.current);\r\n                window.location.reload();\r\n              }\r\n            }\r\n            changeData[indTime].timerMinutes = newMinutes;\r\n            changeData[indTime].timerSeconds = newSeconds;\r\n            this.setState({ data: changeData, staticCountDown: false });\r\n          }\r\n        }, 1000);\r\n      }\r\n    });\r\n  };\r\n\r\n  contentMainView = () => {\r\n    let bizImage;\r\n    let bizLabel;\r\n    let payImage;\r\n    let payLabel;\r\n\r\n    let currentState = this.state.statusIndex;\r\n    if (currentState === 1) {\r\n      let filterOpenStatus = this.state.data.filter((value, ind) => {\r\n        return value.status === \"OPEN\";\r\n      });\r\n\r\n      if (filterOpenStatus.length === 0) {\r\n        return (\r\n          <div className=\"noTrans-content\">\r\n            <span>\r\n              <img src={NoTransaction} className=\"noTrans-img\" alt=\"\" />\r\n            </span>\r\n\r\n            <div className=\"noTrans-title\">Anda Belum Melakukan Transaksi</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return filterOpenStatus.map((value, ind) => {\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = CashierPayment;\r\n          payLabel = \"Pembayaran Di Kasir\";\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = OvoPayment;\r\n          payLabel = \"Ovo\";\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = DanaPayment;\r\n          payLabel = \"DANA\";\r\n        } else if (value.payment === \"WALLET_SHOPEEPAY\") {\r\n          payImage = ShopeePayment;\r\n          payLabel = \"ShopeePay\";\r\n        }\r\n\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = diningTableColor;\r\n          bizLabel = \"Makan Di Tempat\";\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayColor;\r\n          bizLabel = \"Takeaway/Bungkus\";\r\n        }\r\n\r\n        return (\r\n          <div key={ind} className=\"orderListContent\">\r\n            <div\r\n              className=\"orderList-transaction-header\"\r\n              style={{ backgroundColor: \"#DC6A84\" }}\r\n            >\r\n              <div className=\"orderList-transaction-title\">\r\n                Menunggu Pembayaran\r\n              </div>\r\n\r\n              <div className=\"orderList-transaction-counttimer\">\r\n                {value.timerMinutes < 10\r\n                  ? `0${value.timerMinutes}`\r\n                  : value.timerMinutes}\r\n                :\r\n                {value.timerSeconds < 10\r\n                  ? `0${value.timerSeconds}`\r\n                  : value.timerSeconds}\r\n              </div>\r\n            </div>\r\n            {this.contentStatus(value, bizImage, bizLabel, payImage, payLabel)}\r\n          </div>\r\n        );\r\n      });\r\n    } else if (currentState === 2) {\r\n      let data = this.state.data;\r\n\r\n      let filterOpenStatus = data.filter((value) => {\r\n        return value.status === \"PAID\";\r\n      });\r\n\r\n      if (filterOpenStatus.length === 0) {\r\n        return (\r\n          <div className=\"noTrans-content\">\r\n            <span>\r\n              <img src={NoTransaction} className=\"noTrans-img\" alt=\"\" />\r\n            </span>\r\n\r\n            <div className=\"noTrans-title\">Anda Belum Melakukan Transaksi</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return filterOpenStatus.map((value, ind) => {\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = CashierPayment;\r\n          payLabel = \"Pembayaran Di Kasir\";\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = OvoPayment;\r\n          payLabel = \"Ovo\";\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = DanaPayment;\r\n          payLabel = \"DANA\";\r\n        } else if (value.payment === \"WALLET_SHOPEEPAY\") {\r\n          payImage = ShopeePayment;\r\n          payLabel = \"ShopeePay\";\r\n        }\r\n\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = diningTableColor;\r\n          bizLabel = \"Makan Di Tempat\";\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayColor;\r\n          bizLabel = \"Takeaway/Bungkus\";\r\n        }\r\n\r\n        let thestatus = \"Menunggu Konfirmasi\";\r\n        let backColor = \"#FBA83C\";\r\n        return this.eachStatusList(\r\n          value,\r\n          ind,\r\n          thestatus,\r\n          backColor,\r\n          bizImage,\r\n          bizLabel,\r\n          payImage,\r\n          payLabel\r\n        );\r\n      });\r\n    } else if (currentState === 3) {\r\n      let data = this.state.data;\r\n\r\n      let filterOpenStatus = data.filter((value) => {\r\n        return value.status === \"ON_PROCESS\";\r\n      });\r\n\r\n      if (filterOpenStatus.length === 0) {\r\n        return (\r\n          <div className=\"noTrans-content\">\r\n            <span>\r\n              <img src={NoTransaction} className=\"noTrans-img\" alt=\"\" />\r\n            </span>\r\n\r\n            <div className=\"noTrans-title\">Anda Belum Melakukan Transaksi</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return data.map((value, ind) => {\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = CashierPayment;\r\n          payLabel = \"Pembayaran Di Kasir\";\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = OvoPayment;\r\n          payLabel = \"Ovo\";\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = DanaPayment;\r\n          payLabel = \"DANA\";\r\n        } else if (value.payment === \"WALLET_SHOPEEPAY\") {\r\n          payImage = ShopeePayment;\r\n          payLabel = \"ShopeePay\";\r\n        }\r\n\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = diningTableColor;\r\n          bizLabel = \"Makan Di Tempat\";\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayColor;\r\n          bizLabel = \"Takeaway/Bungkus\";\r\n        }\r\n\r\n        let thestatus = \"Sedang Dimasak\";\r\n        let backColor = \"#FBA83C\";\r\n        return this.eachStatusList(\r\n          value,\r\n          ind,\r\n          thestatus,\r\n          backColor,\r\n          bizImage,\r\n          bizLabel,\r\n          payImage,\r\n          payLabel\r\n        );\r\n      });\r\n    } else if (currentState === 4) {\r\n      let data = this.state.data;\r\n\r\n      let filterOpenStatus = data.filter((value) => {\r\n        return value.status === \"DELIVER\";\r\n      });\r\n\r\n      if (filterOpenStatus.length === 0) {\r\n        return (\r\n          <div className=\"noTrans-content\">\r\n            <span>\r\n              <img src={NoTransaction} className=\"noTrans-img\" alt=\"\" />\r\n            </span>\r\n\r\n            <div className=\"noTrans-title\">Anda Belum Melakukan Transaksi</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return filterOpenStatus.map((value, ind) => {\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = CashierPayment;\r\n          payLabel = \"Pembayaran Di Kasir\";\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = OvoPayment;\r\n          payLabel = \"Ovo\";\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = DanaPayment;\r\n          payLabel = \"DANA\";\r\n        } else if (value.payment === \"WALLET_SHOPEEPAY\") {\r\n          payImage = ShopeePayment;\r\n          payLabel = \"ShopeePay\";\r\n        }\r\n\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = diningTableColor;\r\n          bizLabel = \"Makan Di Tempat\";\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayColor;\r\n          bizLabel = \"Takeaway/Bungkus\";\r\n        }\r\n\r\n        let thestatus = \"Makanan Tiba\";\r\n        let backColor = \"#4BB7AC\";\r\n        return this.eachStatusList(\r\n          value,\r\n          ind,\r\n          thestatus,\r\n          backColor,\r\n          bizImage,\r\n          bizLabel,\r\n          payImage,\r\n          payLabel\r\n        );\r\n      });\r\n    } else if (currentState === 0) {\r\n      let data = this.state.data;\r\n\r\n      if (data.length === 0) {\r\n        return (\r\n          <div className=\"noTrans-content\">\r\n            <span>\r\n              <img src={NoTransaction} className=\"noTrans-img\" alt=\"\" />\r\n            </span>\r\n\r\n            <div className=\"noTrans-title\">Anda Belum Melakukan Transaksi</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return data.map((value, ind) => {\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = CashierPayment;\r\n          payLabel = \"Pembayaran Di Kasir\";\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = OvoPayment;\r\n          payLabel = \"Ovo\";\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = DanaPayment;\r\n          payLabel = \"DANA\";\r\n        } else if (value.payment === \"WALLET_SHOPEEPAY\") {\r\n          payImage = ShopeePayment;\r\n          payLabel = \"ShopeePay\";\r\n        }\r\n\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = diningTableColor;\r\n          bizLabel = \"Makan Di Tempat\";\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayColor;\r\n          bizLabel = \"Takeaway/Bungkus\";\r\n        }\r\n\r\n        let thestatus;\r\n        let backColor;\r\n        if (value.status === \"OPEN\") {\r\n          return (\r\n            <div key={ind} className=\"orderListContent\">\r\n              <div\r\n                className=\"orderList-transaction-header\"\r\n                style={{ backgroundColor: \"#DC6A84\" }}\r\n              >\r\n                <div className=\"orderList-transaction-title\">\r\n                  Menunggu Pembayaran\r\n                </div>\r\n\r\n                <div className=\"orderList-transaction-counttimer\">\r\n                  {value.timerMinutes < 10\r\n                    ? `0${value.timerMinutes}`\r\n                    : value.timerMinutes}\r\n                  :\r\n                  {value.timerSeconds < 10\r\n                    ? `0${value.timerSeconds}`\r\n                    : value.timerSeconds}\r\n                </div>\r\n              </div>\r\n              {this.contentStatus(\r\n                value,\r\n                bizImage,\r\n                bizLabel,\r\n                payImage,\r\n                payLabel\r\n              )}\r\n            </div>\r\n          );\r\n        } else if (value.status === \"PAID\") {\r\n          thestatus = \"Menunggu Konfirmasi\";\r\n          backColor = \"#FBA83C\";\r\n          return this.eachStatusList(\r\n            value,\r\n            ind,\r\n            thestatus,\r\n            backColor,\r\n            bizImage,\r\n            bizLabel,\r\n            payImage,\r\n            payLabel\r\n          );\r\n        } else if (value.status === \"ON_PROCESS\") {\r\n          thestatus = \"Sedang Dimasak\";\r\n          backColor = \"#FBA83C\";\r\n          return this.eachStatusList(\r\n            value,\r\n            ind,\r\n            thestatus,\r\n            backColor,\r\n            bizImage,\r\n            bizLabel,\r\n            payImage,\r\n            payLabel\r\n          );\r\n        } else if (value.status === \"DELIVER\") {\r\n          thestatus = \"Makanan Tiba\";\r\n          backColor = \"#4BB7AC\";\r\n          return this.eachStatusList(\r\n            value,\r\n            ind,\r\n            thestatus,\r\n            backColor,\r\n            bizImage,\r\n            bizLabel,\r\n            payImage,\r\n            payLabel\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this._isMounted) {\r\n      clearInterval(interval.current);\r\n      this._isMounted = false;\r\n    }\r\n  }\r\n\r\n  // goUrl = () => {\r\n  //   let currentLocation = Cookies.get(\"lastProduct\")\r\n  //   window.location.href = currentLocation\r\n  // }\r\n\r\n  sendTracking() {\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n\r\n    Axios(address + \"home/v1/event/add\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"token\" : \"PUBLIC\"\r\n        },\r\n        method: \"POST\",  \r\n        data: { \r\n            merchant_id: \"-\",\r\n            event_type: \"VIEW_DETAIL\",\r\n            page_name: window.location.pathname\r\n        }\r\n    })\r\n    .then((res) => {\r\n        console.log(res.data.results);\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // if (this.state.continueDetail) {\r\n    //   return <Redirect to='/orderdetail' />\r\n    // }\r\n\r\n    let { statusIndex, statusList } = this.state;\r\n    let viewSize = (\r\n      <>\r\n        <div className=\"modal-header-orderList\">\r\n          <span\r\n            className=\"logopikappCenterBack\"\r\n            onClick={() => window.history.back()}\r\n          >\r\n            <img className=\"LogoPikappBack\" src={ArrowBack} alt=\"\" />\r\n          </span>\r\n\r\n          <div className=\"menu-title-orderList\">Daftar Transaksi</div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"orderList-filter\"\r\n          onClick={() => this.handleStatus(true)}\r\n        >\r\n          <div className=\"orderList-filterName\">{statusList[statusIndex]}</div>\r\n\r\n          <span className=\"orderList-filterArrow\">\r\n            <img className=\"orderList-arrowDown\" src={ArrowDownColor} alt=\"\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"orderListWrapper\">{this.contentMainView()}</div>\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className=\"orderListLayout\">\r\n        <div className=\"orderListTitle\">\r\n          <span className=\"logoCenterOrderList\">\r\n            <img className=\"LogoPikappOrderList\" src={pikappLogo} alt=\"\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"modalOrderList\">\r\n          {!this.state.isMobile ? (\r\n            <div className=\"modal-content-orderList\">{viewSize}</div>\r\n          ) : (\r\n            <div className=\"modal-content-orderList-mob\">{viewSize}</div>\r\n          )}\r\n        </div>\r\n        {this.statusDialog()}\r\n        {this.showRegisterDialog()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    AllRedu: state.AllRedu,\r\n    AuthRedu: state.AuthRedu,\r\n  };\r\n};\r\n\r\nexport default connect(Mapstatetoprops, { DataDetail })(StatusView);\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js",["563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusCartManualView.js",["620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635"],"import React, { createRef } from \"react\";\r\nimport RegisterDialog from \"../../Component/Authentication/RegisterDialog\";\r\nimport { firebaseAnalytics } from \"../../firebaseConfig\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\";\r\nimport pikappLogo from \"../../Asset/Logo/logo4x.png\";\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport ArrowDownColor from \"../../Asset/Icon/ArrowDownColor.png\";\r\nimport diningTableColor from \"../../Asset/Icon/diningTableColor.png\";\r\nimport takeawayColor from \"../../Asset/Icon/takeawayColor.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport DanaPayment from \"../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../Asset/Icon/shopee_icon.png\";\r\nimport NoTransaction from \"../../Asset/Icon/notrans.png\";\r\nimport ManualIcon from \"../../Asset/Icon/call.png\";\r\nimport OrderListStatus from \"../../Component/Modal/OrderListStatusModal\";\r\nimport moment from \"moment\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { DataDetail, DataDetailTxn } from \"../../Redux/Actions\";\r\n\r\nlet interval = createRef();\r\n\r\nexport class StatusCartManualView extends React.Component {\r\n  _isMounted = false;\r\n  state = {\r\n    isMobile: false,\r\n    statusList: [\r\n      \"Diproses\",\r\n      \"Dikirim\",\r\n      \"Sampai\",\r\n      \"Selesai\",\r\n      \"Batal\",\r\n      \"Batal\"\r\n    ],\r\n    statusIndex: 0,\r\n    showModal: false,\r\n    activeTab: 1,\r\n    isLogin: false,\r\n    data : [{\r\n        shipping : {\r\n            shipping_method: \"\",\r\n            shipping_cost: 0,\r\n            shipping_time: \"\",\r\n            shipping_time_type: \"\",\r\n            shipping_service_type_category: \"\"\r\n        },\r\n        customer : {\r\n            address: \"\",\r\n            customer_id: \"\",\r\n            customer_name: \"\",\r\n            phone_number: \"\",\r\n            address_detail: \"\"\r\n        },\r\n        productList : [{\r\n            quantity: 0,\r\n            price: 0,\r\n            discount: 0,\r\n            notes: \"\",\r\n            extraPrice: 0,\r\n            product_id: \"\",\r\n            product_name: \"\",\r\n            extra_menus: \"\"\r\n        }],\r\n        transaction_id: \"\",\r\n        transaction_time: \"\",\r\n        order_id: 0,\r\n        mid: \"\",\r\n        merchant_name : \"\",\r\n        order_type: \"\",\r\n        order_status: \"\",\r\n        payment_status: \"\",\r\n        payment_method: \"\",\r\n        order_platform: \"\",\r\n        total_product_price: 0,\r\n        total_discount: 0,\r\n        total_payment: 0,\r\n    }],\r\n    staticCountDown: false,\r\n    updateStatus: false,\r\n    transactionId : \"\"\r\n    // continueDetail : false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    firebaseAnalytics.logEvent(\"orderlist_visited\");\r\n    this.sendTracking();\r\n    if (window.innerWidth < 700) {\r\n      this.setState({ isMobile: true });\r\n    } else {\r\n      this.setState({ isMobile: false });\r\n    }\r\n    // this.updateLikeWebsocket();\r\n  }\r\n\r\n  updateLikeWebsocket = () => {\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 120000);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n    if (this.state.updateStatus) {\r\n      window.location.reload();\r\n    }\r\n\r\n    // if (this.state.staticCountDown) {\r\n    //   this.countDownTimer();\r\n    //   this.setState({ staticCountDown: false });\r\n    // }\r\n  }\r\n\r\n  getTransactionDetail() {\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    let historyTransAPI = address + '/pos/v1/transaction/get/detail/'\r\n    Axios(historyTransAPI, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"invoice\" : this.state.transactionId\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = { ...this.state };\r\n        stateData.data.pop();\r\n        // results.forEach((result) => {\r\n        //   stateData.data.push({\r\n        //     title: result.merchant_name,\r\n        //     distance: \"\",\r\n        //     quantity: result.total_product,\r\n        //     status: result.status,\r\n        //     biz_type: result.biz_type,\r\n        //     payment: result.payment_with,\r\n        //     transactionId: result.transaction_id,\r\n        //     transactionTime: result.transaction_time,\r\n        //     transactionCountDown: result.expiry_date,\r\n        //     totalPrice: result.total_price,\r\n        //     timerMinutes: 0,\r\n        //     timerSeconds: 0,\r\n        //     stopInterval: true,\r\n        //   });\r\n        // });\r\n        stateData.data.push(results);\r\n        // console.log(stateData.data);\r\n        this.setState({ data: stateData.data, staticCountDown: true });\r\n        this.props.DataDetailTxn(results);\r\n        localStorage.setItem(\"deliveryData\", JSON.stringify(results));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  contentStatus = (value, bimg, blab, pimg, plab, pmethod, plogo) => {\r\n    let formatDate = value.transactionTime;\r\n    return (\r\n      <div\r\n        className=\"status-cartmanual-transaction-content\"\r\n      >\r\n          <div>\r\n              <h3 className=\"status-cartmanual-transactionid\">ID Transaksi {value.transaction_id}</h3>\r\n          </div>\r\n          <div>\r\n              <h3 className=\"status-cartmanual-transactiondate\">{moment(value.transaction_time).format(\"Do MMMM YYYY, H:mm\")}</h3>\r\n          </div>\r\n          <div className=\"status-cartmanual-content-border\"></div>\r\n\r\n          <div className=\"status-cartmanual-transaction-topSide\">\r\n              <h3 className=\"status-cartmanual-transaction-merchName\">\r\n                {\r\n                  value.shipping.shipping_service_type_category !== null ?\r\n                  <span>{value.shipping.shipping_method} - {value.shipping.shipping_service_type_category}</span>\r\n                  :\r\n                  <span>Diambil Sendiri</span>\r\n                }\r\n              </h3>\r\n              {/* <img className='status-cartmanual-content-icon' src={ManualIcon}></img> */}\r\n          </div>\r\n\r\n          <div>\r\n              <h3 className=\"status-cartmanual-item\">{value.merchant_name}</h3>\r\n          </div>\r\n          <div className=\"status-cartmanual-content-date\">\r\n              <span className=\"status-cartmanual-datetext\">Tanggal Pengiriman : </span><span className=\"status-cartmanual-dateinfo\">{moment(value.shipping.shipping_time).format(\"DD MMMM YYYY, H:mm\")}</span>\r\n          </div>\r\n          <div className=\"status-cartmanual-content-border\"></div>\r\n\r\n          <div className=\"status-cartmanual-paymentservice\">\r\n            <span>\r\n              <img\r\n                className=\"status-cartmanual-paymentservice-logo\"\r\n                src={plogo}\r\n                alt=\"\"\r\n              />\r\n            </span>\r\n\r\n            <h3 className=\"status-cartmanual-paymentservice-words\">{pmethod}</h3>\r\n          </div>\r\n\r\n          <div className=\"status-cartmanual-transaction-topSide\">\r\n              <h3 className=\"status-cartmanual-content-paymentstatus\">Status Pembayaran</h3>\r\n\r\n              <h3 className=\"status-cartmanual-content-paymentinfo\" style={{ color: pimg }}>{plab}</h3>\r\n          </div>\r\n          <div className=\"status-cartmanual-content-border\"></div>\r\n\r\n              {\r\n                  value.productList.map((product, indprod) => {\r\n                      return (\r\n                          <div className=\"status-cartmanual-transaction-centerSide\">\r\n                              <div className=\"status-cartmanual-transaction-item\">\r\n                                <div className=\"status-cartmanual-section-quantity\">\r\n                                    <h3  className='status-cartmanual-content-quantity'>{product.quantity}x</h3>\r\n                                </div>\r\n                                <div className=\"status-cartmanual-section-item\">\r\n                                    <h3 className='status-cartmanual-content-item'>{product.product_name}</h3>\r\n                                    <h3 className='status-cartmanual-content-desc'>{product.notes}</h3>\r\n                                </div>\r\n                              </div>\r\n                              <div>\r\n                              <div className=\"status-cartmanual-section-item\">\r\n                                  <h3 className='status-cartmanual-content-price'>Rp {Intl.NumberFormat(\"id-ID\").format((product.price * product.quantity) + (product.extraPrice * product.quantity))}</h3>\r\n                              </div>\r\n                              </div>\r\n                          </div>\r\n                      )\r\n                  })\r\n              }\r\n          <div className=\"status-cartmanual-content-border\"></div>\r\n\r\n          <div className=\"status-cartmanual-section-subtotal\">\r\n              <h3 className=\"status-cartmanual-content-item\">Sub-total</h3>\r\n              <h3 className=\"status-cartmanual-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(value.total_product_price)}</h3>\r\n          </div>\r\n\r\n          <div className=\"status-cartmanual-section-shippingprice\">\r\n              <h3 className=\"status-cartmanual-content-item\">Total Diskon</h3>\r\n              <h3 className=\"status-cartmanual-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(value.total_discount)}</h3>\r\n          </div>\r\n\r\n          <div className=\"status-cartmanual-section-shippingprice\">\r\n              <h3 className=\"status-cartmanual-content-item\">Ongkos Kirim</h3>\r\n              <h3 className=\"status-cartmanual-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(value.shipping.shipping_cost)}</h3>\r\n          </div>\r\n\r\n          <div className=\"status-cartmanual-section-shippingprice\">\r\n              <h3 className=\"status-cartmanual-content-item\">Asuransi Pengiriman</h3>\r\n              <h3 className=\"status-cartmanual-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(value.shipping.shipping_insurance_cost)}</h3>\r\n          </div>\r\n              \r\n          <div className=\"status-cartmanual-content-border\"></div>\r\n          <div className=\"status-cartmanual-section-price\">\r\n            <div>\r\n              <h3 className=\"status-cartmanual-content-totalitem\">Total</h3>\r\n              <h3 className=\"status-cartmanual-content-totalprice\">Rp {Intl.NumberFormat(\"id-ID\").format(value.total_payment)}</h3>\r\n            </div>\r\n            {\r\n              value.order_type === \"DELIVERY\" ?\r\n                value.order_status === \"DELIVER\" ?\r\n                <Link to=\"/tracking\" style={{ textDecoration: \"none\" }}>\r\n                  <div className='status-cartmanual-tracking' >\r\n                    <div className='status-cartmanual-tracking-button'>\r\n                      <h1 className='status-cartmanual-tracking-word'>Lacak</h1>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n                :\r\n                <></>\r\n              :\r\n              <></>\r\n            }\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  eachStatusList = (\r\n    value,\r\n    ind,\r\n    thestatus,\r\n    backColor,\r\n    bizImage,\r\n    bizLabel,\r\n    payColor,\r\n    payLabel,\r\n    payMethod,\r\n    payImage\r\n  ) => {\r\n    return (\r\n      <div key={ind} className=\"status-cartmanual-Content\">\r\n        <div\r\n          className=\"status-cartmanual-transaction-header\"\r\n          style={{ backgroundColor: backColor }}\r\n        >\r\n          <div className=\"status-cartmanual-transaction-title\">{thestatus}</div>\r\n        </div>\r\n\r\n        {this.contentStatus(value, bizImage, bizLabel, payColor, payLabel, payMethod, payImage)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  countDownTimer = () => {\r\n    this.state.data.forEach((valTime, indTime) => {\r\n      if (valTime.status === \"OPEN\") {\r\n        // get future time\r\n\r\n        valTime.transactionCountDown = valTime.transactionCountDown.replace(/ /g, \"T\");\r\n        let eventTime = new Date(valTime.transactionCountDown).getTime();\r\n\r\n        interval = setInterval(() => {\r\n          // based on time set in user's computer time / OS\r\n          const currentTime = new Date().getTime();\r\n          const distance = eventTime - currentTime;\r\n\r\n          const minutes = Math.floor(\r\n            (distance % (1000 * 60 * 60)) / (1000 * 60)\r\n          );\r\n          const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n          let newMinutes = valTime.timerMinutes;\r\n          newMinutes = minutes;\r\n\r\n          let newSeconds = valTime.timerSeconds;\r\n          newSeconds = seconds;\r\n\r\n          let changeData = [...this.state.data];\r\n          if (distance < 0) {\r\n            console.log(changeData[indTime].stopInterval, indTime);\r\n            if (changeData[indTime].stopInterval) {\r\n              clearInterval(interval.current);\r\n              let lastMinutes = valTime.timerMinutes;\r\n              lastMinutes = \"0\";\r\n              changeData[indTime].timerMinutes = lastMinutes;\r\n\r\n              let lastSeconds = valTime.timerSeconds;\r\n              lastSeconds = \"0\";\r\n              changeData[indTime].timerSeconds = lastSeconds;\r\n              changeData[indTime].stopInterval = false;\r\n\r\n              let uuid = uuidV4();\r\n              uuid = uuid.replace(/-/g, \"\");\r\n              const date = new Date().toISOString();\r\n\r\n              var bodyFormData = new FormData();\r\n              bodyFormData.append(\"transaction_id\", valTime.transactionId);\r\n              bodyFormData.append(\"status\", \"FAILED\");\r\n\r\n              var options = {\r\n                method: \"post\",\r\n                url: address + \"txn/v2/txn-update/\",\r\n                headers: {\r\n                  \"x-client-id\": clientId,\r\n                  \"x-request-id\": uuid,\r\n                  \"x-request-timestamp\": date,\r\n                },\r\n                data: bodyFormData,\r\n              };\r\n\r\n              Axios(options)\r\n                .then(() => {\r\n                  this.setState({ data: changeData, updateStatus: true });\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }\r\n          } else {\r\n            if (valTime.payment === \"WALLET_OVO\") {\r\n              if (newSeconds < 10) {\r\n                clearInterval(interval.current);\r\n                window.location.reload();\r\n              }\r\n            }\r\n            changeData[indTime].timerMinutes = newMinutes;\r\n            changeData[indTime].timerSeconds = newSeconds;\r\n            this.setState({ data: changeData, staticCountDown: false });\r\n          }\r\n        }, 1000);\r\n      }\r\n    });\r\n  };\r\n\r\n  contentMainView = () => {\r\n    let bizImage;\r\n    let bizLabel;\r\n    let payImage;\r\n    let payLabel;\r\n    let payColor;\r\n    let payMethod;\r\n\r\n    let currentState = this.state.statusIndex;\r\n      let data = this.state.data;\r\n\r\n      if (data.length === 0) {\r\n        return (\r\n          <div className=\"status-cartmanual-noTrans-content\">\r\n            <span>\r\n              <img src={NoTransaction} className=\"status-cartmanual-noTrans-img\" alt=\"\" />\r\n            </span>\r\n\r\n            <div className=\"status-cartmanual-noTrans-title\">Anda Belum Melakukan Transaksi</div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return data.map((value, ind) => {\r\n        if (value.payment_status === \"PAID\") {\r\n            payLabel = \"Sudah Bayar\";\r\n            payColor = \"#4BB7AC\";\r\n        } else if (value.payment_status === \"UNPAID\") {\r\n            payLabel = \"Belum Bayar\";\r\n            payColor = \"#DC6A84\";\r\n        } else if (value.payment_status === \"CANCELLED\") {\r\n            payLabel = \"Dibatalkan\";\r\n            payColor = \"#DC6A84\";\r\n        } else if (value.payment_status === \"FAILED\") {\r\n            payLabel = \"Gagal\";\r\n            payColor = \"#DC6A84\";\r\n        } else if (value.payment_status === \"REFUND\") {\r\n            payLabel = \"Dana Dikembalikan\";\r\n            payColor = \"#F4B55B\";\r\n        }\r\n\r\n        if (value.payment_method === \"WALLET_OVO\") {\r\n          payImage = OvoPayment;\r\n          payMethod = \"Ovo\";\r\n        } else if (value.payment_method === \"WALLET_DANA\") {\r\n          payImage = DanaPayment;\r\n          payMethod = \"DANA\";\r\n        } else if (value.payment_method === \"WALLET_SHOPEEPAY\") {\r\n          payImage = ShopeePayment;\r\n          payMethod = \"ShopeePay\";\r\n        }\r\n\r\n        let thestatus;\r\n        let backColor;\r\n        if (value.order_status === \"OPEN\") {\r\n          return (\r\n            <div key={ind} className=\"status-cartmanual-Content\">\r\n              <div\r\n                className=\"status-cartmanual-transaction-header\"\r\n                style={{ backgroundColor: \"#F4B55B\" }}\r\n              >\r\n                <div className=\"status-cartmanual-transaction-title\">\r\n                    Menunggu Pembayaran\r\n                </div>\r\n              </div>\r\n              {this.contentStatus(\r\n                value,\r\n                bizImage,\r\n                bizLabel,\r\n                payColor,\r\n                payLabel,\r\n                payMethod,\r\n                payImage\r\n              )}\r\n            </div>\r\n          );\r\n        }\r\n        else if (value.order_status === \"ON_PROCESS\") {\r\n          return (\r\n            <div key={ind} className=\"status-cartmanual-Content\">\r\n              <div\r\n                className=\"status-cartmanual-transaction-header\"\r\n                style={{ backgroundColor: \"#F4B55B\" }}\r\n              >\r\n                <div className=\"status-cartmanual-transaction-title\">\r\n                    Diproses\r\n                </div>\r\n              </div>\r\n              {this.contentStatus(\r\n                value,\r\n                bizImage,\r\n                bizLabel,\r\n                payColor,\r\n                payLabel,\r\n                payMethod,\r\n                payImage\r\n              )}\r\n            </div>\r\n          );\r\n        } else if (value.order_status === \"DELIVER\") {\r\n            if(value.order_type === \"DELIVERY\") {\r\n              thestatus = \"Dikirim\";\r\n              backColor = \"#4BB7AC\";\r\n            } else {\r\n              thestatus = \"Siap Diambil\";\r\n              backColor = \"#4BB7AC\";\r\n            }\r\n            return this.eachStatusList(\r\n              value,\r\n              ind,\r\n              thestatus,\r\n              backColor,\r\n              bizImage,\r\n              bizLabel,\r\n              payColor,\r\n              payLabel,\r\n              payMethod,\r\n              payImage\r\n            );\r\n        } \r\n        else if (value.order_status === \"FINALIZE\") {\r\n            if(value.order_type === \"DELIVERY\") {\r\n              thestatus = \"Sampai\";\r\n              backColor = \"#4BB7AC\";\r\n            } else {\r\n              thestatus = \"Sudah Diambil\"; \r\n              backColor = \"#4BB7AC\";\r\n            }\r\n            return this.eachStatusList(\r\n              value,\r\n              ind,\r\n              thestatus,\r\n              backColor,\r\n              bizImage,\r\n              bizLabel,\r\n              payColor,\r\n              payLabel,\r\n              payMethod,\r\n              payImage\r\n            );\r\n        }\r\n        else if (value.order_status === \"CLOSE\") {\r\n            thestatus = \"Selesai\";\r\n            backColor = \"#4BB7AC\";\r\n            return this.eachStatusList(\r\n              value,\r\n              ind,\r\n              thestatus,\r\n              backColor,\r\n              bizImage,\r\n              bizLabel,\r\n              payColor,\r\n              payLabel,\r\n              payMethod,\r\n              payImage\r\n            );\r\n        }  \r\n        else if (value.order_status === \"CANCELLED\") {\r\n          thestatus = \"Batal\";\r\n          backColor = \"#DC6A84\";\r\n          return this.eachStatusList(\r\n            value,\r\n            ind,\r\n            thestatus,\r\n            backColor,\r\n            bizImage,\r\n            bizLabel,\r\n            payColor,\r\n            payLabel,\r\n            payMethod,\r\n            payImage\r\n          );\r\n        } else if (value.order_status === \"FAILED\") {\r\n          thestatus = \"Batal\";\r\n          backColor = \"#DC6A84\";\r\n          return this.eachStatusList(\r\n            value,\r\n            ind,\r\n            thestatus,\r\n            backColor,\r\n            bizImage,\r\n            bizLabel,\r\n            payColor,\r\n            payLabel,\r\n            payMethod,\r\n            payImage\r\n          );\r\n        } \r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this._isMounted) {\r\n      clearInterval(interval.current);\r\n      this._isMounted = false;\r\n    }\r\n  }\r\n\r\n  handleTransactionId = (e) =>{\r\n    this.setState({ transactionId: e.target.value});\r\n  }\r\n\r\n  sendTracking() {\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n\r\n    Axios(address + \"home/v1/event/add\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"token\" : \"PUBLIC\"\r\n        },\r\n        method: \"POST\",  \r\n        data: { \r\n            merchant_id: \"-\",\r\n            event_type: \"VIEW_DETAIL\",\r\n            page_name: window.location.pathname\r\n        }\r\n    })\r\n    .then((res) => {\r\n        console.log(res.data.results);\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let { statusIndex, statusList } = this.state;\r\n    let viewSize = (\r\n      <>\r\n        {/* <div className=\"modal-header-status-cartmanual\">\r\n          <span\r\n            className=\"logopikappCenterBack\"\r\n            onClick={() => window.history.back()}\r\n          >\r\n            <img className=\"LogoPikappBack\" src={ArrowBack} alt=\"\" />\r\n          </span>\r\n\r\n          <div className=\"menu-title-status-cartmanual\">Cek Transaksi</div>\r\n        </div> */}\r\n        <div className=\"status-cartmanual-header\">\r\n            <span className=\"status-cartmanual-back\" onClick={() => window.history.back()}>\r\n                <img className=\"status-cartmanual-backicon\" src={ArrowBack} alt='' />\r\n            </span>\r\n            <div className=\"status-cartmanual-titletext\">Cek Transaksi</div>\r\n        </div>\r\n        <div className=\"status-cartmanual-inputarea\">\r\n            <input className=\"status-cartmanual-textbox\" placeholder=\"Masukkan ID Transaksi Anda\" onChange={this.handleTransactionId} value={this.state.transactionId} />\r\n            <div className=\"status-cartmanual-checkbutton\" onClick={() => this.getTransactionDetail()}>Cek</div>\r\n        </div>\r\n\r\n        <div className=\"status-cartmanual-Wrapper\">\r\n            {this.contentMainView()}\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className=\"status-cartmanual-Layout\">\r\n        <div className=\"status-cartmanual-Title\">\r\n          <span className=\"logoCenter-status-cartmanual\">\r\n            <img className=\"LogoPikapp-status-cartmanual\" src={pikappLogo} alt=\"\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"modal-status-cartmanual\">\r\n          {!this.state.isMobile ? (\r\n            <div className=\"modal-content-status-cartmanual\">{viewSize}</div>\r\n          ) : (\r\n            <div className=\"modal-content-status-cartmanual-mob\">{viewSize}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    AllRedu: state.AllRedu,\r\n    AuthRedu: state.AuthRedu,\r\n    CartRedu: state.CartRedu,\r\n  };\r\n};\r\n\r\nexport default connect(Mapstatetoprops, { DataDetail, DataDetailTxn })(StatusCartManualView);\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderDetail\\OrderDetailView.js",["636","637"],"import React, { createRef } from \"react\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingButton, DoneLoad, DataDetail } from '../../Redux/Actions'\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport DanaPayment from \"../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../Asset/Icon/shopee_icon.png\";\r\nimport PaymentModal from '../../Component/Modal/PaymentModal';\r\nimport moment from 'moment';\r\nimport idLocale from \"moment/locale/id\";\r\nimport { firebaseAnalytics } from '../../firebaseConfig';\r\n\r\nlet interval = createRef();\r\n\r\nclass OrderDetailView extends React.Component {\r\n    state = {\r\n        isMobile: false,\r\n        dataDetail: {\r\n            transactionId: \"\",\r\n            transactionTime: \"\"\r\n        },\r\n        data: [\r\n            {\r\n                title: \"\",\r\n                distance: \"\",\r\n                quantity: \"\",\r\n                status: \"\",\r\n                biz_type: \"\",\r\n                payment: \"\",\r\n                transactionId: \"\",\r\n                transactionTime: \"\",\r\n            },\r\n        ],\r\n        currentModal: {\r\n            transactionId: \"\",\r\n            transactionTime: \"\",\r\n            storeName: \"Store\",\r\n            storeLocation: \"Location\",\r\n            storeDistance: \"Distance\",\r\n            status: \"Status\",\r\n            payment: \"Cash\",\r\n            biz_type: \"\",\r\n            total_price: 0,\r\n            productQty: 0,\r\n            eat_type: \"\",\r\n            paymentOption: \"\",\r\n            paymentImage: \"\",\r\n            transactionCounter: 0,\r\n            timerMinutes: 0,\r\n            timerSeconds: 0,\r\n            food: [\r\n                {\r\n                    productId: \"\",\r\n                    name: \"\",\r\n                    price: 0,\r\n                    image: \"\",\r\n                    note: \"\",\r\n                    quantity: 1,\r\n                    extraprice: 0\r\n                },\r\n            ],\r\n        },\r\n        showPayment: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseAnalytics.logEvent(\"orderdetail_visited\");\r\n        moment.updateLocale('id', idLocale);\r\n        this.sendTracking();\r\n        if (window.innerWidth < 700) {\r\n            this.setState({ isMobile: true });\r\n        } else {\r\n            this.setState({ isMobile: false });\r\n        }\r\n\r\n        this.getTxnDetail();\r\n    }\r\n\r\n    getTxnDetail() {\r\n        let transactionId\r\n        if (Object.keys(this.props.AllRedu.dataDetail).length !== 0) {\r\n            transactionId = this.props.AllRedu.dataDetail.transactionId;\r\n        } else if (localStorage.getItem(\"dataDetail\")) {\r\n            var dataDetail = JSON.parse(localStorage.getItem(\"dataDetail\"));\r\n            transactionId = dataDetail.transactionId;\r\n        }\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(address + \"txn/v3/\" + transactionId + \"/txn-detail/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId\r\n            },\r\n            method: \"GET\",\r\n        })\r\n            .then((res) => {\r\n                var results = res.data.results;\r\n                var resultModal = { ...this.currentModal }\r\n                resultModal.transactionId = results.transaction_id\r\n                resultModal.transactionTime = results.transaction_time\r\n                resultModal.storeName = results.merchant_name\r\n                resultModal.storeDistance = \"\"\r\n                resultModal.storeLocation = \"\"\r\n                resultModal.status = results.status\r\n                resultModal.biz_type = results.biz_type\r\n                resultModal.payment = results.payment_with\r\n                resultModal.total_price = results.total_price\r\n                resultModal.productQty = results.detail_products.length\r\n                resultModal.food = []\r\n                results.detail_products.forEach((product) => {\r\n                    resultModal.food.push({\r\n                        name: product.product_name,\r\n                        price: product.price,\r\n                        quantity: product.qty,\r\n                        image: product.image,\r\n                        note: product.notes,\r\n                        extraprice: product.extra_price\r\n                    })\r\n                })\r\n\r\n                if (resultModal.biz_type === \"DINE_IN\") {\r\n                    resultModal.eat_type = \"Makan Di Tempat\";\r\n                } else {\r\n                    resultModal.eat_type = \"Bungkus / Takeaway\";\r\n                }\r\n\r\n                if (resultModal.payment === \"PAY_BY_CASHIER\") {\r\n                    resultModal.paymentOption = \"Pembayaran Di Kasir\";\r\n                    resultModal.paymentImage = CashierPayment;\r\n                } else if (resultModal.payment === \"WALLET_OVO\") {\r\n                    resultModal.paymentOption = \"OVO\";\r\n                    resultModal.paymentImage = OvoPayment;\r\n                } else if (resultModal.payment === \"WALLET_DANA\") {\r\n                    resultModal.paymentOption = \"DANA\";\r\n                    resultModal.paymentImage = DanaPayment;\r\n                } else if (resultModal.payment === \"WALLET_SHOPEEPAY\") {\r\n                    resultModal.paymentOption = \"ShopeePay\";\r\n                    resultModal.paymentImage = ShopeePayment;\r\n                }\r\n\r\n\r\n                resultModal.transactionTime = moment(resultModal.transactionTime).format('Do MMMM YYYY, H:mm');\r\n\r\n                this.setState({\r\n                    currentModal: resultModal\r\n                })\r\n\r\n                this.countDown();\r\n\r\n            })\r\n            .catch((err) => {\r\n            });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.currentModal.timerMinutes < 0 && this.state.currentModal.timerSeconds < 0) {\r\n            clearInterval(interval.current);\r\n            console.log(\"success clear\");\r\n            if (this.state.currentModal.status === \"OPEN\") {\r\n                this.transactionUpdate();\r\n            }\r\n        }\r\n    }\r\n\r\n    setPaymentModal(isShow) {\r\n        this.setState({ showPayment: isShow })\r\n        document.body.style.overflowY = ''\r\n    }\r\n\r\n    showDialogPayment = () => {\r\n        if (this.state.showPayment === true) {\r\n            return (\r\n                <PaymentModal\r\n                    isShowPaymentModal={this.state.showPayment}\r\n                    onHidePaymentModal={() => this.setPaymentModal(false)}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    countDown = () => {\r\n        if (this.state.currentModal.status === \"OPEN\") {\r\n\r\n            let transactionTime\r\n            if (Object.keys(this.props.AllRedu.dataDetail).length !== 0) {\r\n                transactionTime = this.props.AllRedu.dataDetail.transactionTime;\r\n            } else if (localStorage.getItem(\"dataDetail\")) {\r\n                var dataDetail = JSON.parse(localStorage.getItem(\"dataDetail\"));\r\n                transactionTime = dataDetail.transactionTime;\r\n            }\r\n\r\n            transactionTime = transactionTime.replace(/ /g, \"T\");\r\n            let eventTime = new Date(transactionTime).getTime();\r\n\r\n            interval = setInterval(() => {\r\n                // based on time set in user's computer time / OS\r\n                const currentTime = new Date().getTime();\r\n                const distance = eventTime - currentTime;\r\n\r\n                const minutes = Math.floor(\r\n                    (distance % (1000 * 60 * 60)) / (1000 * 60)\r\n                );\r\n                const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n                let newMinutes = this.state.currentModal.timerMinutes;\r\n                newMinutes = minutes;\r\n\r\n                let newSeconds = this.state.currentModal.timerSeconds;\r\n                newSeconds = seconds;\r\n\r\n                this.setState({ currentModal: { ...this.state.currentModal, timerMinutes: newMinutes } });\r\n                this.setState({ currentModal: { ...this.state.currentModal, timerSeconds: newSeconds } });\r\n\r\n            }, 1000);\r\n\r\n        }\r\n    }\r\n\r\n    transactionUpdate = () => {\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n\r\n        let transactionTime\r\n        if (Object.keys(this.props.AllRedu.dataDetail).length !== 0) {\r\n            transactionTime = this.props.AllRedu.dataDetail.transactionTime;\r\n        } else if (localStorage.getItem(\"dataDetail\")) {\r\n            var dataDetail = JSON.parse(localStorage.getItem(\"dataDetail\"));\r\n            transactionTime = dataDetail.transactionTime;\r\n        }\r\n\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append(\"transaction_id\", this.state.currentModal.transactionId);\r\n        bodyFormData.append(\"status\", \"FAILED\");\r\n\r\n        var options = {\r\n            method: \"post\",\r\n            url: address + \"txn/v2/txn-update/\",\r\n            headers: {\r\n                \"x-client-id\": clientId,\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date\r\n            },\r\n            data: bodyFormData,\r\n        };\r\n\r\n        Axios(options)\r\n            .then(() => {\r\n                console.log(\"updated\");\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    goBack = () => {\r\n        // window.location.href = \"/status\";\r\n        window.history.go(-1)\r\n    }\r\n\r\n    sendTracking() {\r\n        let uuid = uuidV4();\r\n        const date = new Date().toISOString();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n    \r\n        Axios(address + \"home/v1/event/add\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\" : \"PUBLIC\"\r\n            },\r\n            method: \"POST\",  \r\n            data: { \r\n                merchant_id: \"-\",\r\n                event_type: \"VIEW_DETAIL\",\r\n                page_name: window.location.pathname\r\n            }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data.results);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let productList = this.state.currentModal.food;\r\n        let storeFood\r\n        storeFood = productList.map((food, index) => {\r\n            return (\r\n                <div key={index} className='orderDetailList-content'>\r\n                    <div className='orderDetailList-content-frame'>\r\n                        <img className='orderDetailList-content-image' src={food.image} alt='' />\r\n                    </div>\r\n\r\n                    <div className='orderDetailList-content-detail'>\r\n                        <div className='orderDetailList-content-detail-left'>\r\n                            <h2 className='orderDetailList-content-title'>{food.name}</h2>\r\n                            <h5 className='orderDetailList-content-notes'>{food.quantity} Item</h5>\r\n                            <h5 className='orderDetailList-content-notes'>{food.note}</h5>\r\n                        </div>\r\n\r\n                        <div className='orderDetailList-amountBox'>\r\n                            <h3 className='orderDetailList-content-price'>Rp. {Intl.NumberFormat(\"id-ID\").format(food.price)}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        let headerTransaction = () => {\r\n            let statusDesc\r\n            let backColor\r\n            if (this.state.currentModal.status === \"PAID\") {\r\n                statusDesc = \"Menunggu Konfirmasi\";\r\n                backColor = \"#FBA83C\";\r\n            }\r\n            else if (this.state.currentModal.status === \"ON_PROCESS\") {\r\n                statusDesc = \"Sedang Dimasak\";\r\n                backColor = \"#FBA83C\";\r\n            }\r\n            else if (this.state.currentModal.status === \"DELIVER\") {\r\n                statusDesc = \"Makanan Tiba\";\r\n                backColor = \"#4BB7AC\";\r\n            }\r\n            else if (this.state.currentModal.status === \"CLOSE\" || this.state.currentModal.status === \"FINALIZE\") {\r\n                statusDesc = \"Transaksi Selesai\";\r\n                backColor = \"#4BB7AC\";\r\n            }\r\n            else if (this.state.currentModal.status === \"FAILED\" || this.state.currentModal.status === \"ERROR\") {\r\n                statusDesc = \"Transaksi Gagal\";\r\n                backColor = \"#DC6A84\";\r\n            }\r\n\r\n            return (\r\n                <div className='orderDetail-transaction-header-detail' style={{ backgroundColor: backColor }}>\r\n                    <div className='orderDetail-transaction-title-detail'>\r\n                        {statusDesc}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className='orderDetailLayout'>\r\n                <div className='orderDetailTitle'>\r\n                    <span className='logopikappCenter' onClick={() => this.goBack()} >\r\n                        <img className='LogoPikapporderDetail' src={ArrowBack} alt='' />\r\n                    </span>\r\n\r\n                    <h2 className='confirmationOrderDetail'>Detail Transaksi</h2>\r\n                </div>\r\n\r\n                {\r\n                    // !this.state.isMobile ?\r\n\r\n                    //     <div className='orderDetailContent'>\r\n                    //         <div className='orderDetail-LeftSide'>\r\n                    //             <div className='orderDetailList'>\r\n                    //                 <div className='orderDetailList-header'>\r\n                    //                     <h4 className='orderDetailList-title'>\r\n                    //                         Item Yang Dibeli\r\n                    //                     </h4>\r\n                    //                 </div>\r\n\r\n                    //                 {storeFood}\r\n                    //             </div>\r\n                    //         </div>\r\n\r\n                    //         <div className='orderDetail-RightSide'>\r\n                    //             <div className='flex-RightSide-orderDetail'>\r\n\r\n                    //                 <div className='orderDetail-transaction-detail'>\r\n                    //                     {\r\n                    //                         this.state.currentModal.status === \"OPEN\" ?\r\n                    //                             <div className='orderDetail-transaction-header-unpaid'>\r\n                    //                                 <div className='orderDetail-transaction-title-unpaid'>\r\n                    //                                     Menunggu Pembayaran\r\n                    //                                 </div>\r\n                    //                                 <div className='menu-counter-orderdetail'>\r\n                    //                                     {this.state.currentModal.timerMinutes < 10\r\n                    //                                         ? `0${this.state.currentModal.timerMinutes}`\r\n                    //                                         : this.state.currentModal.timerMinutes}\r\n                    //                                     :\r\n                    //                                     {this.state.currentModal.timerSeconds < 10\r\n                    //                                         ? `0${this.state.currentModal.timerSeconds}`\r\n                    //                                         : this.state.currentModal.timerSeconds}\r\n                    //                                 </div>\r\n                    //                             </div>\r\n                    //                             :\r\n                    //                             headerTransaction()\r\n                    //                     }\r\n\r\n                    //                     <div className='orderDetail-transaction-content'>\r\n                    //                         <div className='orderDetail-transaction-descArea'>\r\n                    //                             ID Transaksi\r\n                    //                         </div>\r\n                    //                         <div className='orderDetail-transaction-descArea-content'>\r\n                    //                             {this.state.currentModal.transactionId}\r\n                    //                         </div>\r\n\r\n                    //                         <div className='orderDetail-transaction-descArea'>\r\n                    //                             Waktu Transaksi\r\n                    //                         </div>\r\n                    //                         <div className='orderDetail-transaction-descArea-content'>\r\n                    //                             {this.state.currentModal.transactionTime}\r\n                    //                         </div>\r\n\r\n                    //                         <div className='orderDetail-transaction-descArea'>\r\n                    //                             Nama Restoran\r\n                    //                         </div>\r\n                    //                         <div className='orderDetail-transaction-descArea-content'>\r\n                    //                             {this.state.currentModal.storeName}\r\n                    //                         </div>\r\n\r\n                    //                         <div className='orderDetail-transaction-descArea'>\r\n                    //                             Cara Makan\r\n                    //                         </div>\r\n                    //                         <div className='orderDetail-transaction-descArea-content'>\r\n                    //                             {this.state.currentModal.eat_type}\r\n                    //                         </div>\r\n                    //                     </div>\r\n                    //                 </div>\r\n\r\n                    //                 <div className='orderDetail-transaction'>\r\n                    //                     <div className='orderDetail-transaction-header'>\r\n                    //                         <div className='orderDetail-transaction-title'>\r\n                    //                             Informasi Pembayaran\r\n                    //                         </div>\r\n                    //                     </div>\r\n\r\n                    //                     <div className='orderDetail-transaction-content'>\r\n                    //                         <div className='orderDetail-transaction-paymentoption'>\r\n                    //                             <div>Metode Pembayaran</div>\r\n                    //                             <div>\r\n                    //                                 <span>\r\n                    //                                     <img className='orderdetail-transaction-logo' src={this.state.currentModal.paymentImage} alt='' />\r\n                    //                                 </span>\r\n                    //                                 {this.state.currentModal.paymentOption}\r\n                    //                             </div>\r\n                    //                         </div>\r\n\r\n                    //                         <div className=\"orderDetail-payment-border\"></div>\r\n\r\n                    //                         <div className='orderDetail-transaction-payment-price'>\r\n                    //                             <div>Total Harga ( {this.state.currentModal.productQty} Item )</div>\r\n                    //                             <div>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.currentModal.total_price)}</div>\r\n                    //                         </div>\r\n\r\n                    //                         <div className='orderDetail-transaction-payment-detail'>\r\n                    //                             <div>Total Bayar</div>\r\n                    //                             <div>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.currentModal.total_price)}</div>\r\n                    //                         </div>\r\n                    //                     </div>\r\n                    //                 </div>\r\n                    //                 {\r\n                    //                     this.state.currentModal.status === \"PAID\" ?\r\n                    //                         <div></div>\r\n                    //                         :\r\n                    //                         <div className='buttonPayment-orderDetail'>\r\n                    //                             <div className=\"submitPayment-orderDetail\" onClick={() => this.setPaymentModal(true)}>\r\n                    //                                 <div className=\"wordsButton-orderDetail\">\r\n                    //                                     CARA PEMBAYARAN\r\n                    //                                 </div>\r\n                    //                             </div>\r\n                    //                         </div>\r\n                    //                 }\r\n                    //             </div>\r\n                    //         </div>\r\n                    //     </div>\r\n                    //     :\r\n                        <div className='orderDetailContent'>\r\n                            <div className='orderDetail-LeftSide'>\r\n                                <div className='orderDetail-transaction-detail'>\r\n\r\n                                    {\r\n                                        this.state.currentModal.status === \"OPEN\" ?\r\n                                            <div className='orderDetail-transaction-header-unpaid'>\r\n                                                <div className='orderDetail-transaction-title-unpaid'>\r\n                                                    Menunggu Pembayaran\r\n                                                </div>\r\n                                                <div className='menu-counter-orderdetail'>\r\n                                                    {this.state.currentModal.timerMinutes < 10\r\n                                                        ? `0${this.state.currentModal.timerMinutes}`\r\n                                                        : this.state.currentModal.timerMinutes}\r\n                                                    :\r\n                                                    {this.state.currentModal.timerSeconds < 10\r\n                                                        ? `0${this.state.currentModal.timerSeconds}`\r\n                                                        : this.state.currentModal.timerSeconds}\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            headerTransaction()\r\n                                    }\r\n\r\n                                    <div className='orderDetail-transaction-content'>\r\n                                        <div className='orderDetail-transaction-descArea'>\r\n                                            ID Transaksi\r\n                                        </div>\r\n                                        <div className='orderDetail-transaction-descArea-content'>\r\n                                            {this.state.currentModal.transactionId}\r\n                                        </div>\r\n\r\n                                        <div className='orderDetail-transaction-descArea'>\r\n                                            Waktu Transaksi\r\n                                        </div>\r\n                                        <div className='orderDetail-transaction-descArea-content'>\r\n                                            {this.state.currentModal.transactionTime}\r\n                                        </div>\r\n\r\n                                        <div className='orderDetail-transaction-descArea'>\r\n                                            Nama Restoran\r\n                                        </div>\r\n                                        <div className='orderDetail-transaction-descArea-content'>\r\n                                            {this.state.currentModal.storeName}\r\n                                        </div>\r\n\r\n                                        <div className='orderDetail-transaction-descArea'>\r\n                                            Cara Makan\r\n                                        </div>\r\n                                        <div className='orderDetail-transaction-descArea-content'>\r\n                                            {this.state.currentModal.eat_type}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='orderDetailList'>\r\n                                    <div className='orderDetailList-header'>\r\n                                        <h4 className='orderDetailList-title'>\r\n                                            Item Yang Dibeli\r\n                                        </h4>\r\n                                    </div>\r\n\r\n                                    {storeFood}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderDetail-RightSide'>\r\n                                <div className='flex-RightSide-orderDetail'>\r\n\r\n                                    <div className='orderDetail-transaction'>\r\n                                        <div className='orderDetail-transaction-header'>\r\n                                            <div className='orderDetail-transaction-title'>\r\n                                                Informasi Pembayaran\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='orderDetail-transaction-content'>\r\n                                            <div className='orderDetail-transaction-paymentoption'>\r\n                                                <div>Metode Pembayaran</div>\r\n                                                <div>\r\n                                                    <span>\r\n                                                        <img className='orderdetail-transaction-logo' src={this.state.currentModal.paymentImage} alt='' />\r\n                                                    </span>\r\n                                                    {this.state.currentModal.paymentOption}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"orderDetail-payment-border\"></div>\r\n\r\n                                            <div className='orderDetail-transaction-payment-price'>\r\n                                                <div>Total Harga ( {this.state.currentModal.productQty} Item )</div>\r\n                                                <div>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.currentModal.total_price)}</div>\r\n                                            </div>\r\n\r\n                                            <div className='orderDetail-transaction-payment-detail'>\r\n                                                <div>Total Bayar</div>\r\n                                                <div>Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.currentModal.total_price)}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {\r\n                                        this.state.currentModal.status === \"OPEN\" ?\r\n                                            <div className='buttonPayment-orderDetail'>\r\n                                                <div className=\"submitPayment-orderDetail\" onClick={() => this.setPaymentModal(true)}>\r\n                                                    <div className=\"wordsButton-orderDetail\">\r\n                                                        CARA PEMBAYARAN\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <div></div>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n                {this.showDialogPayment()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        AllRedu: state.AllRedu,\r\n        AuthRedu: state.AuthRedu\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { LoadingButton, DoneLoad, DataDetail })(OrderDetailView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["638"],"import React from \"react\";\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport LocaIcon from '../../Asset/Icon/location.png'\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, clientId, googleKey } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Geocode from \"react-geocode\"\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { connect } from 'react-redux'\r\nimport { DoneLoad, IsMerchantQR } from '../../Redux/Actions'\r\nimport TourPage from '../../Component/Tour/TourPage';\r\nimport { firebaseAnalytics } from '../../firebaseConfig'\r\n\r\nclass StoreView extends React.Component {\r\n  state = {\r\n    page: 0,\r\n    size: 6,\r\n    location: \"\",\r\n    data: {\r\n      title: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      data: [\r\n        {\r\n          address: \"\",\r\n          rating: \"\",\r\n          logo: \"\",\r\n          distance: \"\",\r\n          storeId: \"\",\r\n          storeName: \"\",\r\n          storeDesc: \"\",\r\n          storeImage: \"\",\r\n          storeCateg: \"\"\r\n        },\r\n      ],\r\n    },\r\n    idCol: 0,\r\n    totalPage: 0,\r\n    boolpage: false,\r\n    loadView: true,\r\n    allMerchantAPI: [],\r\n    lat: \"\",\r\n    lon: \"\",\r\n    startTour: false,\r\n    steptour: [\r\n      {\r\n        selector: '',\r\n        content: () => (\r\n          <div>\r\n            <h2>Selamat Datang di PikApp!</h2>\r\n            <br />\r\n            <span>Yuk caritau cara memesan dengan PikApp dengan mudah.</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.merchantList-layout',\r\n        content: () => (\r\n          <div>\r\n            <h4>Ini adalah Daftar Restoran</h4>\r\n            <br />\r\n            <span>Kamu bisa cek restoran apa saja yang ada di dalam foodcourt ini. Anda bisa tap salah satu restoran untuk ke halaman berikutnya.</span>\r\n          </div>\r\n        )\r\n      }\r\n    ]\r\n  };\r\n\r\n  async componentDidMount() {\r\n    firebaseAnalytics.logEvent(\"merchant_list_visited\")\r\n    this.props.DoneLoad()\r\n    this.props.IsMerchantQR(false);\r\n    this.sendTracking();\r\n    Cookies.set(\"homePage\", window.location.search)\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    if (localStorage.getItem(\"storeTour\") == 1) {\r\n      this.setState({ startTour: true });\r\n    }\r\n\r\n    // else {\r\n    const value = queryString.parse(window.location.search);\r\n    var merchant = \"\";\r\n\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    console.log(latitude, longitude);\r\n    this.setState({ lat: latitude, lon: longitude })\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n\r\n    // Show a map centered at latitude / longitude.\r\n\r\n    if (localStorage.getItem(\"longlat\")) {\r\n      var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n      latitude = getLocation.lat\r\n      longitude = getLocation.lon\r\n    } \r\n\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n    }\r\n    else {\r\n      longitude = value.longitude || longitude\r\n      latitude = value.latitude || latitude\r\n      if (window.location.href.includes('?latitude') || window.location.href.includes('store?')) {\r\n\r\n      } else {\r\n        window.location.href = window.location.href + `?latitude=${latitude}&longitude=${longitude}`\r\n      }\r\n    }\r\n    longitude = value.longitude || longitude\r\n    latitude = value.latitude || latitude\r\n    merchant = value.merchant;\r\n\r\n    // GOOGLE GEOCODE\r\n    if (localStorage.getItem(\"address\")) {\r\n      var getAdress = JSON.parse(localStorage.getItem(\"address\"))\r\n      this.setState({ location: getAdress })\r\n    } else {\r\n      Geocode.setApiKey(googleKey)\r\n      Geocode.fromLatLng(latitude, longitude)\r\n        .then((res) => {\r\n          console.log(res.results[0].formatted_address);\r\n          this.setState({ location: res.results[0].formatted_address })\r\n          localStorage.setItem(\"address\", JSON.stringify(res.results[0].formatted_address));\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ location: \"Tidak tersedia\" })\r\n        })\r\n    }\r\n\r\n    //regular route or foodcourt route condition\r\n    if (Cookies.get(\"fcaddress\") !== undefined) {\r\n      let foodcourtadd = Cookies.get(\"fcaddress\")\r\n\r\n      let addressRoute = address + \"/home/v1/fc/mch/\" + foodcourtadd + \"/\";\r\n      var stateDataFC;\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      return await Axios(addressRoute, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n        },\r\n        method: \"GET\",\r\n        params: {\r\n          page: this.state.page,\r\n          size: this.state.size\r\n        }\r\n      })\r\n        .then((res) => {\r\n          stateDataFC = { ...this.state.data };\r\n          let responseDatas = res.data;\r\n          stateDataFC.data.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            let merchantCateg = \"\"\r\n            data.merchant_categories.forEach((merchCat, indCat) => {\r\n              if (merchCat) {\r\n                if (indCat === data.merchant_categories.length - 1) {\r\n                  merchantCateg += `${merchCat.toLocaleLowerCase()}`\r\n                } else {\r\n                  merchantCateg += `${merchCat.toLocaleLowerCase()}, `\r\n                }\r\n              }\r\n            })\r\n\r\n            stateDataFC.data.push({\r\n              address: data.merchant_address,\r\n              rating: data.merchant_rating,\r\n              logo: data.merchant_logo,\r\n              distance: data.merchant_distance,\r\n              storeId: data.mid,\r\n              storeName: data.merchant_name,\r\n              storeDesc: \"\",\r\n              storeImage: data.merchant_pict,\r\n              storeCateg: merchantCateg\r\n            })\r\n          })\r\n\r\n          this.setState({ data: stateDataFC, loadView: false, totalPage: responseDatas.total_pages, allMerchantAPI: res.data.results });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n          if (res.data.results.length < 6) {\r\n            document.removeEventListener('scroll', this.loadMoreMerchant)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n    } else {\r\n      let addressRoute;\r\n      if (merchant === undefined) {\r\n        addressRoute =\r\n          address + \"home/v2/merchant/\" + longitude + \"/\" + latitude + \"/ALL/\";\r\n      } else {\r\n        addressRoute =\r\n          address +\r\n          \"home/v1/merchant/\" +\r\n          longitude +\r\n          \"/\" +\r\n          latitude +\r\n          \"/\" +\r\n          merchant\r\n          + \"/\"\r\n      }\r\n      var stateData;\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      return await Axios(addressRoute, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"category\": \"1\",\r\n        },\r\n        method: \"GET\",\r\n        params: {\r\n          page: this.state.page,\r\n          size: this.state.size\r\n        }\r\n      })\r\n        .then((res) => {\r\n          stateData = { ...this.state.data };\r\n          let responseDatas = res.data;\r\n          stateData.data.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            let merchantCateg = \"\"\r\n            data.merchant_categories.forEach((merchCat, indCat) => {\r\n              if (merchCat) {\r\n                if (indCat === data.merchant_categories.length - 1) {\r\n                  merchantCateg += `${merchCat.toLocaleLowerCase()}`\r\n                } else {\r\n                  merchantCateg += `${merchCat.toLocaleLowerCase()}, `\r\n                }\r\n              }\r\n            })\r\n\r\n            stateData.data.push({\r\n              address: data.merchant_address,\r\n              rating: data.merchant_rating,\r\n              logo: data.merchant_logo,\r\n              distance: data.merchant_distance,\r\n              storeId: data.mid,\r\n              storeName: data.merchant_name,\r\n              storeDesc: \"\",\r\n              storeImage: data.merchant_pict,\r\n              storeCateg: merchantCateg\r\n            })\r\n          })\r\n\r\n          this.setState({ data: stateData, loadView: false, totalPage: responseDatas.total_pages, allMerchantAPI: res.data.results });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n          if (res.data.results.length < 6) {\r\n            document.removeEventListener('scroll', this.loadMoreMerchant)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw new Error(err)\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.idCol > 0) {\r\n      if (this.state.boolpage === true) {\r\n\r\n        if (Cookies.get(\"fcaddress\") !== undefined) {\r\n          let foodcourtadd = Cookies.get(\"fcaddress\")\r\n          let addressRoute = address + \"/home/v1/fc/mch/\" + foodcourtadd + \"/\";\r\n          var stateDataFC;\r\n          let uuid = uuidV4();\r\n          uuid = uuid.replace(/-/g, \"\");\r\n          const date = new Date().toISOString();\r\n          Axios(addressRoute, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-request-id\": uuid,\r\n              \"x-request-timestamp\": date,\r\n              \"x-client-id\": clientId,\r\n              \"token\": \"PUBLIC\",\r\n            },\r\n            method: \"GET\",\r\n            params: {\r\n              page: this.state.page,\r\n              size: this.state.size\r\n            }\r\n          })\r\n            .then((res) => {\r\n              stateDataFC = { ...this.state.data };\r\n              let responseDatas = res.data;\r\n              responseDatas.results.forEach((data) => {\r\n                let merchantCateg = \"\"\r\n                data.merchant_categories.forEach((merchCat, indCat) => {\r\n                  if (merchCat) {\r\n                    if (indCat === data.merchant_categories.length - 1) {\r\n                      merchantCateg += `${merchCat.toLocaleLowerCase()}`\r\n                    } else {\r\n                      merchantCateg += `${merchCat.toLocaleLowerCase()}, `\r\n                    }\r\n                  }\r\n                })\r\n\r\n                stateDataFC.data.push({\r\n                  address: data.merchant_address,\r\n                  rating: data.merchant_rating,\r\n                  logo: data.merchant_logo,\r\n                  distance: data.merchant_distance,\r\n                  storeId: data.mid,\r\n                  storeName: data.merchant_name,\r\n                  storeDesc: \"\",\r\n                  storeImage: data.merchant_pict,\r\n                  storeCateg: merchantCateg\r\n                })\r\n              })\r\n              let updateMerchant = [...this.state.allMerchantAPI]\r\n              responseDatas.results.forEach((data) => {\r\n                updateMerchant.push(data)\r\n              })\r\n              this.setState({ boolpage: false, allMerchantAPI: updateMerchant })\r\n\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n              if (this.state.page === this.state.totalPage - 1) {\r\n                this.setState({ idCol: this.state.idCol + 1 })\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          let addressRoute = address + \"home/v2/merchant/\" + this.state.lon + \"/\" + this.state.lat + \"/ALL/\";\r\n          var stateData;\r\n          let uuid = uuidV4();\r\n          uuid = uuid.replace(/-/g, \"\");\r\n          const date = new Date().toISOString();\r\n          Axios(addressRoute, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-request-id\": uuid,\r\n              \"x-request-timestamp\": date,\r\n              \"x-client-id\": clientId,\r\n              \"token\": \"PUBLIC\",\r\n              \"category\": \"1\",\r\n            },\r\n            method: \"GET\",\r\n            params: {\r\n              page: this.state.page,\r\n              size: this.state.size\r\n            }\r\n          })\r\n            .then((res) => {\r\n              stateData = { ...this.state.data };\r\n              let responseDatas = res.data;\r\n              responseDatas.results.forEach((data) => {\r\n                let merchantCateg = \"\"\r\n                data.merchant_categories.forEach((merchCat, indCat) => {\r\n                  if (merchCat) {\r\n                    if (indCat === data.merchant_categories.length - 1) {\r\n                      merchantCateg += `${merchCat.toLocaleLowerCase()}`\r\n                    } else {\r\n                      merchantCateg += `${merchCat.toLocaleLowerCase()}, `\r\n                    }\r\n                  }\r\n                })\r\n\r\n                stateData.data.push({\r\n                  address: data.merchant_address,\r\n                  rating: data.merchant_rating,\r\n                  logo: data.merchant_logo,\r\n                  distance: data.merchant_distance,\r\n                  storeId: data.mid,\r\n                  storeName: data.merchant_name,\r\n                  storeDesc: \"\",\r\n                  storeImage: data.merchant_pict,\r\n                  storeCateg: merchantCateg\r\n                })\r\n              })\r\n              let updateMerchant = [...this.state.allMerchantAPI]\r\n              responseDatas.results.forEach((data) => {\r\n                updateMerchant.push(data)\r\n              })\r\n              this.setState({ boolpage: false, allMerchantAPI: updateMerchant })\r\n\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n              if (this.state.page === this.state.totalPage - 1) {\r\n                this.setState({ idCol: this.state.idCol + 1 })\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  storeClick = (e) => {\r\n    localStorage.setItem('page', JSON.stringify(1))\r\n  }\r\n  handleDetail(data) {\r\n    return <Link to={\"/status\"}></Link>;\r\n  }\r\n\r\n  isBottom = (el) => {\r\n    return (el.getBoundingClientRect().top + 50) <= window.innerHeight\r\n  }\r\n\r\n  loadMoreMerchant = () => {\r\n    const wrappedElement = document.getElementById(\"idCol\")\r\n    if (wrappedElement !== null) {\r\n      if (this.state.idCol <= this.state.page) {\r\n        if (this.isBottom(wrappedElement)) {\r\n          this.setState({ idCol: this.state.idCol + 1, page: this.state.page + 1, boolpage: true })\r\n          document.removeEventListener('scroll', this.loadMoreMerchant)\r\n        }\r\n      } else {\r\n        document.removeEventListener('scroll', this.loadMoreMerchant)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n  merchantLoading = () => (\r\n    <div className='merchantList-layout' >\r\n      <Skeleton style={{ paddingTop: 100, width: \"100%\", height: \"100%\" }} />\r\n    </div>\r\n  )\r\n\r\n  tourPage = () => {\r\n    if (this.state.startTour === true) {\r\n      return (\r\n        <TourPage\r\n          stepsContent={this.state.steptour}\r\n          isShowTour={this.state.startTour}\r\n          isHideTour={() => this.showTourPage(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  showTourPage = (isShowTour) => {\r\n    this.setState({ startTour: isShowTour });\r\n    document.body.style.overflowY = 'auto';\r\n    localStorage.setItem('storeTour', 0);\r\n  }\r\n\r\n  sendTracking() {\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n\r\n    Axios(address + \"home/v1/event/add\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\" : \"PUBLIC\"\r\n      },\r\n      method: \"POST\",  \r\n      data: { \r\n        merchant_id: \"-\",\r\n        event_type: \"VIEW_DETAIL\",\r\n        page_name: window.location.pathname\r\n      }\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data.results);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (localStorage.getItem('page')) {\r\n      let currentPage = JSON.parse(localStorage.getItem('page'))\r\n      if (currentPage === 1) {\r\n        localStorage.setItem('page', JSON.stringify(0))\r\n        window.location.reload()\r\n      }\r\n    }\r\n\r\n    if (!(localStorage.getItem('table'))) {\r\n      localStorage.setItem('table', 0)\r\n        localStorage.setItem('lastTable', 0)\r\n    }\r\n    const storeDatas = this.state.data.data.map((data) => {\r\n      return data;\r\n    });\r\n    var allCards = storeDatas.map((cardData, indexCard) => {\r\n      return (\r\n        <Link to={\"/store?mid=\" + cardData.storeId} style={{ textDecoration: \"none\" }} onClick={() => this.storeClick(cardData)} >\r\n          <div key={indexCard} className='merchantList-layout' data-testid=\"merchantlist-item\">\r\n            <div className='merchantList-banner'>\r\n              {\r\n                cardData.storeImage ?\r\n                  <img src={cardData.storeImage} className='merchantList-image' alt='' />\r\n                  :\r\n                  <Skeleton style={{ paddingTop: 100, width: \"100%\", height: \"100%\" }} />\r\n              }\r\n            </div>\r\n\r\n            <div className='merchantList-content'>\r\n              <div className='merchantList-contentLocStar'>\r\n                <div className='merchantList-ratingArea'>\r\n                  <img src={StarIcon} className='merchantList-ratingIcon' alt='' />\r\n                  <div className='merchantList-ratingScore'>{cardData.rating ? cardData.rating : \"5.0\"}</div>\r\n                </div>\r\n\r\n                <div className='merchantList-locArea'>\r\n                  <img src={LocaIcon} className='merchantList-locIcon' alt='' />\r\n                  {\r\n                    cardData.distance ?\r\n                      <div className='merchantList-location'>{cardData.distance} <span className='merchantList-distance'>{'(' + Math.round((parseInt(cardData.distance) / 22) * 60) + ' min)'}</span></div>\r\n                      :\r\n                      <Skeleton style={{ paddingTop: 10, width: \"100%\", height: \"100%\" }} />\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              {\r\n                cardData.storeName ?\r\n                  <div className='merchantList-storeName'>{cardData.storeName}</div>\r\n                  :\r\n                  <Skeleton style={{ paddingTop: 10, width: \"100%\", height: \"100%\" }} />\r\n              }\r\n\r\n              {\r\n                cardData.storeCateg ?\r\n                  <div className='merchantList-storeCategory'>{cardData.storeCateg}</div>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className='merchantList-background'>\r\n        <div>\r\n          <div className='merchantList-grid'>\r\n            {allCards}\r\n          </div>\r\n          {\r\n            !this.state.loadView ?\r\n              this.state.idCol <= this.state.page ?\r\n                this.state.totalPage - 1 === this.state.page ?\r\n                  null\r\n                  :\r\n                  <div id={\"idCol\"}>\r\n                    {this.merchantLoading()}\r\n                  </div>\r\n                :\r\n                null\r\n              :\r\n              null\r\n          }\r\n          {this.tourPage()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { DoneLoad, IsMerchantQR })(StoreView)\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderDetail\\OrderDetailManualView.js",["639","640","641","642","643","644"],"import React, { createRef } from \"react\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingButton, DoneLoad, DataDetailTxn } from '../../Redux/Actions'\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport PaymentModal from '../../Component/Modal/PaymentModal';\r\nimport moment from 'moment';\r\nimport idLocale from \"moment/locale/id\";\r\nimport { firebaseAnalytics } from '../../firebaseConfig';\r\nimport ManualIcon from \"../../Asset/Icon/call.png\";\r\n\r\nlet interval = createRef();\r\n\r\nclass OrderDetailManualView extends React.Component {\r\n    state = {\r\n        isMobile: false,\r\n        data : {\r\n            shipping : {\r\n                shipping_method: \"\",\r\n                shipping_cost: 0,\r\n                shipping_time: \"\",\r\n                shipping_time_type: \"\"\r\n            },\r\n            customer : {\r\n                address: \"\",\r\n                customer_id: \"\",\r\n                customer_name: \"\",\r\n                phone_number: \"\",\r\n                address_detail: \"\"\r\n            },\r\n            productList : [{\r\n                quantity: 0,\r\n                price: 0,\r\n                discount: 0,\r\n                notes: \"\",\r\n                extraPrice: 0,\r\n                product_id: \"\",\r\n                product_name: \"\",\r\n                extra_menus: \"\"\r\n            }],\r\n            transaction_id: \"\",\r\n            transaction_time: \"\",\r\n            order_id: 0,\r\n            mid: \"\",\r\n            merchant_name : \"\",\r\n            order_type: \"\",\r\n            order_status: \"\",\r\n            payment_status: \"\",\r\n            order_platform: \"\",\r\n            total_product_price: 0,\r\n            total_discount: 0,\r\n            total_payment: 0,\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseAnalytics.logEvent(\"orderdetail_visited\");\r\n        moment.updateLocale('id', idLocale);\r\n        this.sendTracking();\r\n        if (window.innerWidth < 700) {\r\n            this.setState({ isMobile: true });\r\n        } else {\r\n            this.setState({ isMobile: false });\r\n        }\r\n\r\n        // if (Object.keys(this.props.AllRedu.dataDetailTxn).length !== 0) {\r\n            this.setState({ data : this.props.AllRedu.dataDetailTxn })\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    goBack = () => {\r\n        // window.location.href = \"/status\";\r\n        window.history.go(-1)\r\n    }\r\n\r\n    sendTracking() {\r\n        let uuid = uuidV4();\r\n        const date = new Date().toISOString();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n    \r\n        Axios(address + \"home/v1/event/add\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\" : \"PUBLIC\"\r\n            },\r\n            method: \"POST\",  \r\n            data: { \r\n                merchant_id: \"-\",\r\n                event_type: \"VIEW_DETAIL\",\r\n                page_name: window.location.pathname\r\n            }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data.results);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='manual-orderdetail-Layout'>\r\n                <div className='manual-orderdetail-Title'>\r\n                    {/* <span className='logopikappCenter' onClick={() => this.goBack()} >\r\n                        <img className='LogoPikapporderDetail' src={ArrowBack} alt='' />\r\n                    </span>\r\n\r\n                    <h2 className='confirmationOrderDetail'>Detail Transaksi</h2> */}\r\n                    <div className=\"manual-orderdetail-header\">\r\n                        <span className=\"manual-orderdetail-back\" onClick={() => window.history.back()}>\r\n                            <img className=\"manual-orderdetail-backicon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"manual-orderdetail-titletext\">Detail Transaksi</div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    <div className='manual-orderdetail-Content'>\r\n                        <div className='manual-orderdetail-LeftSide'>\r\n                            <div className='manual-orderdetail-transaction-detail'>\r\n\r\n                                <div className=\"manual-orderdetail-transaction-content\">\r\n                                    <div>\r\n                                        <h3 className=\"manual-orderdetail-transactionid\">ID Transaksi {this.state.data.transaction_id}</h3>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h3 className=\"manual-orderdetail-transactiondate\">{moment(this.state.data.transaction_time).format(\"Do MMMM YYYY, H:mm\")}</h3>\r\n                                    </div>\r\n                                    <div className=\"manual-orderdetail-content-border\"></div>\r\n\r\n                                        {\r\n                                            this.state.data.productList.map((product, indprod) => {\r\n                                                return (\r\n                                                    <div key={indprod} className=\"manual-orderdetail-transaction-centerSide\">\r\n                                                        <div className=\"manual-orderdetail-transaction-item\">\r\n                                                            <div className=\"manual-orderdetail-section-quantity\">\r\n                                                                <h3  className='manual-orderdetail-content-quantity'>{product.quantity}x</h3>\r\n                                                            </div>\r\n                                                            <div className=\"manual-orderdetail-section-item\">\r\n                                                                <h3 className='manual-orderdetail-content-item'>{product.product_name}</h3>\r\n                                                                <h3 className='manual-orderdetail-content-desc'>{product.notes}</h3>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        <div>\r\n                                                            <div className=\"manual-orderdetail-section-item\">\r\n                                                                <h3 className='manual-orderdetail-content-price'>Rp {Intl.NumberFormat(\"id-ID\").format(product.price * product.quantity)}</h3>\r\n                                                                <h3 className='manual-orderdetail-content-desc'>Rp {Intl.NumberFormat(\"id-ID\").format(product.price)}/item</h3>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        \r\n                                    <div className=\"manual-orderdetail-content-border\"></div>\r\n\r\n                                    <div className=\"manual-orderdetail-section-subtotal\">\r\n                                        <h3 className=\"manual-orderdetail-content-item\">Sub-total</h3>\r\n                                        <h3 className=\"manual-orderdetail-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(this.state.data.total_product_price)}</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"manual-orderdetail-section-shippingprice\">\r\n                                        <h3 className=\"manual-orderdetail-content-item\">Ongkos Kirim</h3>\r\n                                        <h3 className=\"manual-orderdetail-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(this.state.data.shipping.shipping_cost)}</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"manual-orderdetail-section-shippingprice\">\r\n                                        <h3 className=\"manual-orderdetail-content-item\">Asuransi Pengiriman</h3>\r\n                                        <h3 className=\"manual-orderdetail-content-item\">Rp {Intl.NumberFormat(\"id-ID\").format(this.state.data.shipping.shipping_cost)}</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"manual-orderdetail-content-border\"></div>\r\n\r\n                                    <div className=\"manual-orderdetail-section-price\">\r\n                                        <h3 className=\"manual-orderdetail-content-totalitem\">Total</h3>\r\n                                        <h3 className=\"manual-orderdetail-content-totalprice\">Rp {Intl.NumberFormat(\"id-ID\").format(this.state.data.total_payment)}</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        AllRedu: state.AllRedu,\r\n        AuthRedu: state.AuthRedu\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { LoadingButton, DoneLoad, DataDetailTxn })(OrderDetailManualView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Tracking\\TrackingDeliveryView.js",["645","646","647","648","649","650","651","652"],"import React, { createRef } from \"react\";\r\nimport { address, addressShipping, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingButton, DoneLoad, DataDetailTxn } from '../../Redux/Actions'\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport PaymentModal from '../../Component/Modal/PaymentModal';\r\nimport moment from 'moment';\r\nimport idLocale from \"moment/locale/id\";\r\nimport { firebaseAnalytics } from '../../firebaseConfig';\r\nimport ManualIcon from \"../../Asset/Icon/call.png\";\r\nimport CourierPhoto from \"../../Asset/Icon/courier_photo.png\";\r\n\r\nclass TrackingDeliveryView extends React.Component {\r\n    state = {\r\n        isMobile: false,\r\n        data : {\r\n            shipping : {\r\n                shipping_method: \"\",\r\n                shipping_cost: 0,\r\n                shipping_time: \"\",\r\n                shipping_time_type: \"\",\r\n                waybill_id : \"\",\r\n                tracking_id : \"\"\r\n            },\r\n            customer : {\r\n                address: \"\",\r\n                customer_id: \"\",\r\n                customer_name: \"\",\r\n                phone_number: \"\",\r\n                address_detail: \"\"\r\n            },\r\n            productList : [{\r\n                quantity: 0,\r\n                price: 0,\r\n                discount: 0,\r\n                notes: \"\",\r\n                extraPrice: 0,\r\n                product_id: \"\",\r\n                product_name: \"\",\r\n                extra_menus: \"\"\r\n            }],\r\n            transaction_id: \"\",\r\n            transaction_time: \"\",\r\n            order_id: 0,\r\n            mid: \"\",\r\n            merchant_name : \"\",\r\n            order_type: \"\",\r\n            order_status: \"\",\r\n            payment_status: \"\",\r\n            order_platform: \"\",\r\n            total_product_price: 0,\r\n            total_discount: 0,\r\n            total_payment: 0,\r\n        },\r\n        dataCourier : {\r\n            id: \"\",\r\n            waybill_id: \"\",\r\n            courier: {\r\n                company: \"\",\r\n                name: \"\",\r\n                phone: \"\"\r\n            },\r\n            destination: {\r\n                contact_name: \"\",\r\n                address: \"\"\r\n            },\r\n            history: [{\r\n                note: \"\",\r\n                updated_at: \"\",\r\n                status: \"\"\r\n            }],\r\n            link: \"\",\r\n            order_id: \"\",\r\n            status: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseAnalytics.logEvent(\"orderdetail_visited\");\r\n        moment.updateLocale('id', idLocale);\r\n        this.sendTracking();\r\n        if (window.innerWidth < 700) {\r\n            this.setState({ isMobile: true });\r\n        } else {\r\n            this.setState({ isMobile: false });\r\n        }\r\n\r\n        if (Object.keys(this.props.AllRedu.dataDetailTxn).length !== 0) {\r\n            this.setState({ data : this.props.AllRedu.dataDetailTxn },\r\n                () => {\r\n                    this.getTrackingOrder();\r\n                })\r\n        } else if (localStorage.getItem(\"deliveryData\")) {\r\n            var dataDelivery = JSON.parse(localStorage.getItem(\"deliveryData\"));\r\n\r\n            this.setState({ data : dataDelivery },\r\n                () => {\r\n                    this.getTrackingOrder();\r\n                })\r\n        }\r\n\r\n        let list = this.state.dataCourier.history.sort().reverse();\r\n        // this.setState({ history : list });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    getTrackingOrder() {\r\n        var request = {\r\n            tracking_id : this.state.data.shipping.tracking_id,\r\n            courier : this.state.data.shipping.shipping_method\r\n        }\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        let historyTransAPI = addressShipping + '/api/transaction/tracking-order'\r\n        Axios(historyTransAPI, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: request\r\n        })\r\n        .then((res) => {\r\n            var results = res.data.result;\r\n            results.history.sort().reverse();\r\n            this.setState({ dataCourier: results });\r\n            console.log(this.state.dataCourier)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    goBack = () => {\r\n        // window.location.href = \"/status\";\r\n        window.history.go(-1)\r\n    }\r\n\r\n    sendTracking() {\r\n        let uuid = uuidV4();\r\n        const date = new Date().toISOString();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n    \r\n        Axios(address + \"home/v1/event/add\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\" : \"PUBLIC\"\r\n            },\r\n            method: \"POST\",  \r\n            data: { \r\n                merchant_id: \"-\",\r\n                event_type: \"VIEW_DETAIL\",\r\n                page_name: window.location.pathname\r\n            }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data.results);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    handleCourierPhone = (phone) => { //go to Whatsapp chat\r\n        // phone.substring(1)\r\n        // let waNumber = '62' + phone\r\n        window.location.href = `https://wa.me/${phone}`\r\n    }\r\n\r\n    handleLiveTracking() {\r\n        window.open(this.state.dataCourier.link, \"_blank\");\r\n        // windowReference.location = link;\r\n    }\r\n\r\n    render() {\r\n        let statusTransaction = () => {\r\n            let statusDesc\r\n            let color\r\n            if (this.state.data.order_status === \"ON_PROCESS\") {\r\n                statusDesc = \"Pesanan Diproses\";\r\n                color = \"#F4B55B\";\r\n            }\r\n            else if (this.state.data.order_status === \"DELIVER\") {\r\n                statusDesc = \"Pesanan Dikirim\";\r\n                color = \"#4BB7AC\";\r\n            }\r\n            else if (this.state.data.order_status === \"FINALIZE\") {\r\n                statusDesc = \"Pesanan Sampai\";\r\n                color = \"#4BB7AC\";\r\n            }\r\n            else if (this.state.data.order_status === \"CLOSE\") {\r\n                statusDesc = \"Pesanan Selesai\";\r\n                color = \"#4BB7AC\";\r\n            }\r\n            else if (this.state.data.order_status === \"CANCELLED\") {\r\n                statusDesc = \"Pesanan Batal\";\r\n                color = \"#DC6A84\";\r\n            }\r\n\r\n            else if (this.state.data.order_status === \"FAILED\") {\r\n                statusDesc = \"Pesanan Batal\";\r\n                color = \"#DC6A84\";\r\n            }\r\n\r\n            return (\r\n                <div className=\"tracking-delivery-section-subtotal\">\r\n                    <h3 className=\"tracking-delivery-info-order\">Status Pengiriman</h3>\r\n                    <h3 className=\"tracking-delivery-info-order\" style={{ color : color }}>{statusDesc}</h3>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"tracking-delivery-mainLayout\">\r\n                <div className='tracking-delivery-Title'>\r\n                    <div className=\"tracking-delivery-header\">\r\n                        <span className=\"tracking-delivery-back\" onClick={() => window.history.back()}>\r\n                            <img className=\"tracking-delivery-backicon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"tracking-delivery-titletext\">Lacak</div>\r\n                    </div>\r\n                </div>\r\n                <div className='tracking-delivery-Layout'>\r\n                    {\r\n                        <div className='tracking-delivery-Content'>\r\n                            <div className='tracking-delivery-LeftSide'>\r\n                                <div className='tracking-delivery-transaction-detail'>\r\n\r\n                                    <div className=\"tracking-delivery-transaction-content\">\r\n                                        {statusTransaction()}\r\n                                        {/* <div className=\"tracking-delivery-section-subtotal\">\r\n                                            <h3 className=\"tracking-delivery-info-order\">Status Pengiriman</h3>\r\n                                            <h3 className=\"tracking-delivery-info-order\" style={{ color : \"#F4B55B\" }}>Pesanan Selesai</h3>\r\n                                        </div> */}\r\n                                        <div>\r\n                                            <h3 className=\"tracking-delivery-transactionid\">Resi Pengiriman: {this.state.data.shipping.waybill_id}</h3>\r\n                                        </div>\r\n                                        {/* <div>\r\n                                            <h3 className=\"tracking-delivery-transactiondate\">Estimasi Tiba di tujuan: {moment(this.state.data.transaction_time).format(\"Do MMMM YYYY, H:mm\")}</h3>\r\n                                        </div> */}\r\n                                        <div className=\"tracking-delivery-content-border\"></div>\r\n\r\n                                        <div className=\"tracking-delivery-transaction-topSide\">\r\n                                            <h3 className=\"tracking-delivery-transaction-merchName\">{this.state.data.shipping.shipping_method}</h3>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h3 className=\"tracking-delivery-item\">{this.state.data.merchant_name}</h3>\r\n                                        </div>\r\n                                        <div className=\"tracking-delivery-content-date\">\r\n                                            <span className=\"tracking-delivery-datetext\">Tanggal Pengiriman : </span><span className=\"tracking-delivery-dateinfo\">{moment(this.state.data.shipping.shipping_time).format(\"DD MMMM YYYY, H:mm\")}</span>\r\n                                        </div>\r\n                                        <div className=\"tracking-delivery-content-border\"></div>\r\n\r\n                                        {\r\n                                            this.state.dataCourier.courier.name || this.state.dataCourier.courier.phone ?\r\n                                            <div>\r\n                                                <div className=\"tracking-delivery-courier\">\r\n                                                    <div>\r\n                                                        <h3 className=\"tracking-delivery-content-call\">Hubungi Kurir</h3>\r\n                                                        <div className=\"tracking-delivery-section-courier\">\r\n                                                            <div className=\"tracking-delivery-content-info\">\r\n                                                                {/* <div>\r\n                                                                    <img className='tracking-delivery-content-icon' src={CourierPhoto}></img>\r\n                                                                </div> */}\r\n                                                                <div className=\"tracking-delivery-courier-info\">\r\n                                                                    <h3 className=\"tracking-delivery-courier-name\">{this.state.dataCourier.courier.name}</h3>\r\n                                                                    <h3 className=\"tracking-delivery-courier-phone\">{this.state.dataCourier.courier.phone}</h3>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <img onClick={() => this.handleCourierPhone(this.state.dataCourier.courier.phone)} className='tracking-delivery-content-icon' src={ManualIcon}></img>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"tracking-delivery-content-border\"></div>\r\n                                            </div>\r\n                                            :\r\n                                            <></>\r\n                                        }\r\n\r\n                                        {\r\n                                        this.state.dataCourier.history.map((ship, ind) => {\r\n                                            return (\r\n                                                <div key={ind} className=\"tracking-delivery-transaction-centerSide\">\r\n                                                    <div className=\"tracking-delivery-section-quantity\">\r\n                                                        <h3  className='tracking-delivery-content-item'>{moment(ship.updated_at).format(\"DD/MM/YYYY\")}</h3>\r\n                                                        <h3  className='tracking-delivery-content-hour'>{moment(ship.updated_at).format(\"H:mm\")}</h3>\r\n                                                    </div>\r\n                                                    <div className=\"tracking-delivery-section-item\">\r\n                                                        <h3 className='tracking-delivery-content-detail'>{ship.note}</h3>\r\n                                                        {/* <h3 className='tracking-delivery-content-desc'>Jakarta Barat</h3> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {\r\n                    this.state.dataCourier.link ?\r\n                    <div onClick={() => this.handleLiveTracking()} className=\"tracking-delivery-loc\">\r\n                        <div className=\"tracking-delivery-liveloc\" style={{backgroundColor: '#4bb7ac'}}>Lihat Live Tracking</div>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        AllRedu: state.AllRedu,\r\n        AuthRedu: state.AuthRedu\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { LoadingButton, DoneLoad, DataDetailTxn })(TrackingDeliveryView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js",["653","654","655","656"],"import React, { createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadingButton, DoneLoad, IsManualTxn } from '../../Redux/Actions'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport DanaPayment from \"../../Asset/Icon/dana_icon.png\";\r\nimport ShopeePayment from \"../../Asset/Icon/shopee_icon.png\";\r\nimport CopyIcon from \"../../Asset/Icon/copy-icon.png\";\r\nimport PaymentModal from '../../Component/Modal/PaymentModal';\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firebaseAnalytics } from '../../firebaseConfig';\r\nimport copy from 'copy-to-clipboard';\r\nimport Cookies from \"js-cookie\"\r\n// import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n// import { onMessageListener } from '../../firebase';\r\n// import { onBackgroundListener } from '../../../public/firebase-messaging-sw';\r\n\r\n// const client = new W3CWebSocket('ws://127.0.0.1:8000');\r\n\r\nlet interval = createRef();\r\n\r\nclass OrderConfirmationView extends React.Component {\r\n    state = {\r\n        isMobile: false,\r\n        dataOrder: {\r\n            transactionId: \"\",\r\n            totalPayment: \"\",\r\n            paymentType: \"\",\r\n            transactionTime: 0,\r\n        },\r\n        paymentOption: \"Pembayaran Di Kasir\",\r\n        paymentType: \"PAY_BY_CASHIER\",\r\n        paymentImage: \"\",\r\n        counterTime: 59,\r\n        showPayment: false,\r\n        isSubmit: false,\r\n        showResponsePayment: false,\r\n        currentModal: {\r\n            transactionId: \"\",\r\n            status: \"Status\",\r\n        },\r\n        mid: \"\",\r\n        timerMinutes: 0,\r\n        timerSeconds: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseAnalytics.logEvent(\"orderconfirmation_visited\");\r\n        this.sendTracking();\r\n        if (window.innerWidth < 700) {\r\n            this.setState({ isMobile: true });\r\n        } else {\r\n            this.setState({ isMobile: false });\r\n        }\r\n\r\n        let counter = localStorage.getItem(\"counterPayment\");\r\n\r\n        if (localStorage.getItem(\"counterPayment\")) {\r\n            if (counter != 0) {\r\n                this.setState({ counterTime: counter });\r\n                this.countDown();\r\n            } else {\r\n                this.setState({ counterTime: counter });\r\n            }\r\n        } else {\r\n            this.countDown()\r\n        }\r\n\r\n        if (Object.keys(this.props.AllRedu.dataOrder).length !== 0) {\r\n            this.props.IsManualTxn(JSON.parse(localStorage.getItem(\"isManualTxn\")));\r\n            \r\n            if (this.props.AllRedu.dataOrder.paymentType === \"PAY_BY_CASHIER\") {\r\n                this.setState({ paymentType: \"PAY_BY_CASHIER\" });\r\n                this.setState({ paymentOption: \"Pembayaran Di Kasir\" });\r\n                this.setState({ paymentImage: CashierPayment });\r\n            } else if (this.props.AllRedu.dataOrder.paymentType === \"WALLET_OVO\") {\r\n                this.setState({ paymentType: \"WALLET_OVO\" });\r\n                this.setState({ paymentOption: \"Pembayaran Ovo\" });\r\n                this.setState({ paymentImage: OvoPayment });\r\n            } else if (this.props.AllRedu.dataOrder.paymentType === \"WALLET_DANA\") {\r\n                this.setState({ paymentType: \"WALLET_DANA\" });\r\n                this.setState({ paymentOption: \"Pembayaran DANA\" });\r\n                this.setState({ paymentImage: DanaPayment });\r\n            } else if (this.props.AllRedu.dataOrder.paymentType === \"WALLET_SHOPEEPAY\") {\r\n                this.setState({ paymentType: \"WALLET_SHOPEEPAY\" });\r\n                this.setState({ paymentOption: \"Pembayaran ShopeePay\" });\r\n                this.setState({ paymentImage: ShopeePayment });\r\n            }\r\n            this.setState({ dataOrder: this.props.AllRedu.dataOrder },\r\n            () => {\r\n                if(this.props.AllRedu.isManualTxn) {\r\n                    this.getStatusPaymentDelivery();\r\n                } else {\r\n                    this.getStatusPaymentDineIn();\r\n                }\r\n            });\r\n        } else if (localStorage.getItem(\"payment\")) {\r\n            var dataPayment = JSON.parse(localStorage.getItem(\"payment\"));\r\n            this.props.IsManualTxn(JSON.parse(localStorage.getItem(\"isManualTxn\")));\r\n\r\n            if (dataPayment.paymentType === \"PAY_BY_CASHIER\") {\r\n                this.setState({ paymentType: \"PAY_BY_CASHIER\" });\r\n                this.setState({ paymentOption: \"Pembayaran Di Kasir\" });\r\n                this.setState({ paymentImage: CashierPayment });\r\n            } else if (dataPayment.paymentType === \"WALLET_OVO\") {\r\n                this.setState({ paymentType: \"WALLET_OVO\" });\r\n                this.setState({ paymentOption: \"Pembayaran Ovo\" });\r\n                this.setState({ paymentImage: OvoPayment });\r\n            } else if (dataPayment.paymentType === \"WALLET_DANA\") {\r\n                this.setState({ paymentType: \"WALLET_DANA\" });\r\n                this.setState({ paymentOption: \"Pembayaran DANA\" });\r\n                this.setState({ paymentImage: DanaPayment });\r\n            } else if (dataPayment.paymentType === \"WALLET_SHOPEEPAY\") {\r\n                this.setState({ paymentType: \"WALLET_SHOPEEPAY\" });\r\n                this.setState({ paymentOption: \"Pembayaran ShopeePay\" });\r\n                this.setState({ paymentImage: ShopeePayment });\r\n            }\r\n\r\n            this.setState({ dataOrder: dataPayment },\r\n            () => {\r\n                if(this.props.AllRedu.isManualTxn) {\r\n                    this.getStatusPaymentDelivery();\r\n                } else {\r\n                    this.getStatusPaymentDineIn();\r\n                }\r\n            });\r\n        }\r\n\r\n        setInterval(async () => {\r\n            if (this.state.currentModal.status === \"OPEN\" || this.state.currentModal.status === \"UNPAID\") {\r\n                if(this.props.AllRedu.isManualTxn) {\r\n                    this.showResponsePaymentDelivery();\r\n                } else {\r\n                    this.showResponsePaymentDineIn();\r\n                }\r\n            }\r\n        }, 30000);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.timerMinutes < 0 && this.state.timerSeconds < 0) {\r\n            clearInterval(interval.current);\r\n            console.log(\"clear\");\r\n            localStorage.setItem(\"counterPayment\", this.state.counterTime);\r\n        } else {\r\n            localStorage.setItem(\"counterPayment\", this.state.counterTime);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // client.onopen = () => {\r\n        //     console.log('WebSocket Client Connected');\r\n        // };\r\n        // client.onmessage = (message) => {\r\n        //     let dataFromServer = JSON.parse(message.data);\r\n        //     console.log(dataFromServer);\r\n        // };\r\n    }\r\n\r\n    backToHome = () => {\r\n        let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n        let noTable = localStorage.getItem('table');\r\n        if(this.props.AllRedu.isManualTxn) {\r\n            window.location.href = '/' + selectedMerchant[0].username;\r\n        } else {\r\n            window.location.href = '/store?mid=' + selectedMerchant[0].mid + '&table=' + noTable.toString();\r\n        }\r\n    }\r\n\r\n    goToStatus = () => {\r\n        window.location.href = '/status';\r\n    }\r\n\r\n    countDownTime = () => {\r\n        this.interval = setInterval(\r\n            () => this.setState((state) => ({ counterTime: this.state.counterTime - 1 })),\r\n            1000\r\n        );\r\n    }\r\n\r\n    setPaymentModal(isShow) {\r\n        this.setState({ showPayment: isShow })\r\n        document.body.style.overflowY = ''\r\n    }\r\n\r\n    showDialogPayment = () => {\r\n        if (this.state.showPayment === true) {\r\n            return (\r\n                <PaymentModal\r\n                    isShowPaymentModal={this.state.showPayment}\r\n                    onHidePaymentModal={() => this.setPaymentModal(false)}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    showResponsePaymentDineIn = () => {\r\n        // onMessageListener().then(payload => {\r\n        //     console.log(\"payload ::: \" + payload);\r\n        //     if(payload.data.payment_status === \"PAID\") {\r\n        //         this.setState({ isSubmit : true });\r\n        //         this.setState({ showResponsePayment : true });\r\n        //     } else if (payload.data.payment_status === \"FAILED\" || payload.data.payment_status === \"ERROR\") {\r\n        //         this.setState({ isSubmit : true });\r\n        //         this.setState({ showResponsePayment : false });\r\n        //     }\r\n\r\n        // }).catch(err => console.log('failed: ', err));\r\n\r\n        // let res = {\r\n        //     isSubmit : this.state.isSubmit,\r\n        //     showResponsePayment : this.state.showResponsePayment\r\n        // }\r\n        // localStorage.setItem(\"responsePayment\", JSON.stringify(res));\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(address + \"txn/v3/\" + this.state.dataOrder.transactionId + \"/txn-detail/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId\r\n            },\r\n            method: \"GET\",\r\n        })\r\n            .then((res) => {\r\n                var results = res.data.results;\r\n                var resultModal = { ...this.currentModal }\r\n                resultModal.transactionId = results.transaction_id\r\n                resultModal.status = results.status\r\n\r\n                if (resultModal.status === \"CLOSE\" || resultModal.status === \"FINALIZE\" || resultModal.status === \"PAID\") {\r\n                    this.setState({ isSubmit: true });\r\n                    this.setState({ showResponsePayment: true });\r\n                } else if (resultModal.status === \"FAILED\" || resultModal.status === \"ERROR\") {\r\n                    this.setState({ isSubmit: true });\r\n                    this.setState({ showResponsePayment: false });\r\n                }\r\n\r\n                this.setState({\r\n                    currentModal: resultModal\r\n                })\r\n            })\r\n            .catch((err) => {\r\n            });\r\n    }\r\n\r\n    countDown = () => {\r\n        var dataPayment = JSON.parse(localStorage.getItem(\"payment\"));\r\n        let dateTime = dataPayment.transactionTime;\r\n        let eventTime = new Date(dateTime).getTime();\r\n\r\n        interval = setInterval(() => {\r\n            // based on time set in user's computer time / OS\r\n            const currentTime = new Date().getTime();\r\n            const distance = eventTime - currentTime;\r\n\r\n            const minutes = Math.floor(\r\n                (distance % (1000 * 60 * 60)) / (1000 * 60)\r\n            );\r\n\r\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n            let newMinutes = this.state.timerMinutes;\r\n            newMinutes = minutes;\r\n\r\n            let newSeconds = this.state.timerSeconds;\r\n            newSeconds = seconds;\r\n\r\n            if (newMinutes < 0 && newSeconds < 0) {\r\n                clearInterval(interval.current);\r\n            } else {\r\n                this.setState({ timerMinutes : newMinutes });\r\n                this.setState({ timerSeconds : newSeconds });\r\n                this.setState({ counterTime: newSeconds });\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    sendTracking() {\r\n        let uuid = uuidV4();\r\n        const date = new Date().toISOString();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n\r\n        const currentMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    \r\n        Axios(address + \"home/v1/event/add\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\" : \"PUBLIC\"\r\n            },\r\n            method: \"POST\",  \r\n            data: { \r\n                merchant_id: currentMerchant.mid,\r\n                event_type: \"ORDER_DETAIL\",\r\n                page_name: window.location.pathname\r\n            }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data.results);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    copyTxnId = () => {\r\n        copy(this.state.dataOrder.transactionId, {\r\n            debug: true,\r\n            message: 'Transaction ID Copy to Clipboard',\r\n        });\r\n    }\r\n\r\n    getStatusPaymentDineIn = () => {\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(address + \"txn/v3/\" + this.state.dataOrder.transactionId + \"/txn-detail/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId\r\n            },\r\n            method: \"GET\",\r\n        })\r\n        .then((res) => {\r\n            var results = res.data.results;\r\n            var resultModal = { ...this.currentModal }\r\n            resultModal.transactionId = results.transaction_id\r\n            resultModal.status = results.status\r\n\r\n            if (resultModal.status === \"CLOSE\" || resultModal.status === \"FINALIZE\" || resultModal.status === \"PAID\") {\r\n                this.setState({ isSubmit: true });\r\n                this.setState({ showResponsePayment: true });\r\n            } else if (resultModal.status === \"FAILED\" || resultModal.status === \"ERROR\") {\r\n                this.setState({ isSubmit: true });\r\n                this.setState({ showResponsePayment: false });\r\n            }\r\n\r\n            this.setState({\r\n                currentModal: resultModal\r\n            })\r\n        })\r\n        .catch((err) => {\r\n        });\r\n    }\r\n\r\n    showResponsePaymentDelivery = () => {\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        let historyTransAPI = address + '/pos/v1/transaction/get/detail/'\r\n        Axios(historyTransAPI, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"invoice\" : this.state.dataOrder.transactionId\r\n        },\r\n        method: \"GET\",\r\n        })\r\n        .then((res) => {\r\n            var results = res.data.results;\r\n            \r\n            var resultModal = { ...this.currentModal }\r\n            resultModal.transactionId = results.transaction_id\r\n            resultModal.status = results.payment_status\r\n\r\n            if (resultModal.status === \"CLOSE\" || resultModal.status === \"FINALIZE\" || resultModal.status === \"PAID\") {\r\n                this.setState({ isSubmit: true });\r\n                this.setState({ showResponsePayment: true });\r\n            } else if (resultModal.status === \"FAILED\" || resultModal.status === \"ERROR\") {\r\n                this.setState({ isSubmit: true });\r\n                this.setState({ showResponsePayment: false });\r\n            }\r\n\r\n            this.setState({\r\n                currentModal: resultModal\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    getStatusPaymentDelivery = () => {\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        let historyTransAPI = address + '/pos/v1/transaction/get/detail/'\r\n        Axios(historyTransAPI, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"invoice\" : this.state.dataOrder.transactionId\r\n        },\r\n        method: \"GET\",\r\n        })\r\n        .then((res) => {\r\n            var results = res.data.results;\r\n            \r\n            var resultModal = { ...this.currentModal }\r\n            resultModal.transactionId = results.transaction_id\r\n            resultModal.status = results.payment_status\r\n\r\n            if (resultModal.status === \"CLOSE\" || resultModal.status === \"FINALIZE\" || resultModal.status === \"PAID\") {\r\n                this.setState({ isSubmit: true });\r\n                this.setState({ showResponsePayment: true });\r\n            } else if (resultModal.status === \"FAILED\" || resultModal.status === \"ERROR\") {\r\n                this.setState({ isSubmit: true });\r\n                this.setState({ showResponsePayment: false });\r\n            }\r\n\r\n            this.setState({\r\n                currentModal: resultModal\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='orderLayout'>\r\n                <div className='orderTitle'>\r\n                    <span className='logoCenter'>\r\n                        <img className='LogoPikappOrder' src={pikappLogo} alt='' />\r\n                    </span>\r\n\r\n                    {/* <div className='iconOrder'>\r\n                        <Link to={\"/profile\"}>\r\n                        <div className='profileOrder-sec'>\r\n                            <div className='profileOrder'>\r\n                            <span className='reactProfOrder'>\r\n                                <img className='profileOrder-img' src={ProfileIcon} alt='' />\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n\r\n                        <Link to={\"/status\"}>\r\n                        <div className='notifOrder-sec'>\r\n                            <div className='notifOrder'>\r\n                            <span className='reactNotifOrder'>\r\n                                <img className='notifOrder-img' src={NotifIcon} alt='' />\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className='modalOrder'>\r\n                    {\r\n                        !this.state.isMobile ?\r\n                            <div className='modal-content-order'>\r\n                                {\r\n                                    !this.state.isSubmit ?\r\n                                        <div className='modal-header-order'>\r\n                                            <div className='menu-name-order'>\r\n                                                Menunggu Pembayaran\r\n                                            </div>\r\n                                            <div className='menu-counter-order'>\r\n                                                {\r\n                                                    <span className=\"txtIndent\">\r\n                                                        {this.state.timerMinutes < 10\r\n                                                            ? `0${this.state.timerMinutes}`\r\n                                                            : this.state.timerMinutes}\r\n                                                        :\r\n                                                        {this.state.timerSeconds < 10\r\n                                                            ? `0${this.state.timerSeconds}`\r\n                                                            : this.state.timerSeconds}\r\n                                                    </span>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        this.state.showResponsePayment ?\r\n                                            <div className='modal-header-order'>\r\n                                                <div className='menu-name-order'>\r\n                                                    Transaksi Berhasil\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <div className='modal-header-order'>\r\n                                                <div className='menu-name-order'>\r\n                                                    Transaksi Gagal\r\n                                                </div>\r\n                                            </div>\r\n                                }\r\n\r\n\r\n                                <div className='orderContent'>\r\n                                    <div className='order-transaction'>\r\n                                        <div className='order-transaction-header'>\r\n                                            <div className='order-transaction-title'>\r\n                                                ID Transaksi\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='order-transaction-content'>\r\n                                            <div className='order-transaction-transactionId'>\r\n                                                <h3 className='order-transaction-words'>\r\n                                                    {this.state.dataOrder.transactionId}\r\n                                                </h3>\r\n                                                <img className='order-transaction-copyicon' src={CopyIcon} onClick={() => this.copyTxnId()}></img>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='orderContent'>\r\n                                    <div className='order-payment'>\r\n                                        <div className='order-transaction-header'>\r\n                                            <div className='order-transaction-title'>\r\n                                                Total Pembayaran\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='order-transaction-content'>\r\n                                            <div className='order-transaction-descArea'>\r\n                                                <h3 className='order-transaction-words'>\r\n                                                    Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.dataOrder.totalPayment)}\r\n                                                </h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='orderContent'>\r\n                                    <div className='order-payment'>\r\n                                        <div className='order-transaction-header'>\r\n                                            <div className='order-transaction-title'>\r\n                                                Metode Pembayaran\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='order-transaction-content'>\r\n                                            <div className='order-transaction-descArea'>\r\n                                                <span>\r\n                                                    <img className='order-transaction-logo' src={this.state.paymentImage} alt='' />\r\n                                                </span>\r\n\r\n                                                <h3 className='order-transaction-words'>\r\n                                                    {this.state.paymentOption}\r\n                                                </h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    !this.state.isSubmit ?\r\n                                        <div>\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonPayment-order'>\r\n                                                    <div className=\"submitPayment-order\" onClick={() => this.setPaymentModal(true)}>\r\n                                                        <div className=\"wordsButton-order\">\r\n                                                            CARA PEMBAYARAN\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonSide-order'>\r\n                                                    <p className=\"linkWords-order\" onClick={() => this.backToHome()}>KEMBALI KE HOME</p>\r\n                                                    {\r\n                                                        this.props.AllRedu.isManualTxn ?\r\n                                                        <Link to={\"/statuscartmanual\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                        :\r\n                                                        <Link to={\"/status\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    }\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        this.state.showResponsePayment ?\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonSide-order'>\r\n                                                    <p className=\"linkWords-order\" onClick={() => this.backToHome()}>KEMBALI KE HOME</p>\r\n                                                    {\r\n                                                        this.props.AllRedu.isManualTxn ?\r\n                                                        <Link to={\"/statuscartmanual\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                        :\r\n                                                        <Link to={\"/status\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonBack-order'>\r\n                                                    <div className=\"submitBack-order\" onClick={() => this.backToHome()}>\r\n                                                        <div className=\"wordsBack-order\">\r\n                                                            KEMBALI\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <div className='modal-content-order-mob'>\r\n                                {\r\n                                    !this.state.isSubmit ?\r\n                                        <div className='modal-header-order'>\r\n                                            <div className='menu-name-order'>\r\n                                                Menunggu Pembayaran\r\n                                            </div>\r\n                                            <div className='menu-counter-order'>\r\n                                                {\r\n                                                    <span className=\"txtIndent\">\r\n                                                        {this.state.timerMinutes < 10\r\n                                                        ? `0${this.state.timerMinutes}`\r\n                                                        : this.state.timerMinutes}\r\n                                                    :\r\n                                                    {this.state.timerSeconds < 10\r\n                                                        ? `0${this.state.timerSeconds}`\r\n                                                        : this.state.timerSeconds}\r\n                                                    </span>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        this.state.showResponsePayment ?\r\n                                            <div className='modal-header-order'>\r\n                                                <div className='menu-name-order'>\r\n                                                    Transaksi Berhasil\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <div className='modal-header-order'>\r\n                                                <div className='menu-name-order'>\r\n                                                    Transaksi Gagal\r\n                                                </div>\r\n                                            </div>\r\n                                }\r\n\r\n                                <div className='orderContent'>\r\n                                    <div className='order-transaction'>\r\n                                        <div className='order-transaction-header'>\r\n                                            <div className='order-transaction-title'>\r\n                                                ID Transaksi\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='order-transaction-content'>\r\n                                            <div className='order-transaction-transactionId'>\r\n                                                <h3 className='order-transaction-words'>\r\n                                                    {this.state.dataOrder.transactionId}\r\n                                                </h3>\r\n                                                <img className='order-transaction-copyicon' src={CopyIcon} onClick={() => this.copyTxnId()}></img>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='orderContent'>\r\n                                    <div className='order-payment'>\r\n                                        <div className='order-transaction-header'>\r\n                                            <div className='order-transaction-title'>\r\n                                                Total Pembayaran\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='order-transaction-content'>\r\n                                            <div className='order-transaction-descArea'>\r\n                                                <h3 className='order-transaction-words'>\r\n                                                    Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.dataOrder.totalPayment)}\r\n                                                </h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='orderContent'>\r\n                                    <div className='order-payment'>\r\n                                        <div className='order-transaction-header'>\r\n                                            <div className='order-transaction-title'>\r\n                                                Metode Pembayaran\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className='order-transaction-content'>\r\n                                            <div className='order-transaction-descArea'>\r\n                                                <span>\r\n                                                    <img className='order-transaction-logo' src={this.state.paymentImage} alt='' />\r\n                                                </span>\r\n\r\n                                                <h3 className='order-transaction-words'>\r\n                                                    {this.state.paymentOption}\r\n                                                </h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    !this.state.isSubmit ?\r\n                                        <div>\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonPayment-order'>\r\n                                                    <div className=\"submitPayment-order\" onClick={() => this.setPaymentModal(true)}>\r\n                                                        <div className=\"wordsButton-order\">\r\n                                                            CARA PEMBAYARAN\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonSide-order'>\r\n                                                    <p className=\"linkWords-order\" onClick={() => this.backToHome()}>KEMBALI KE HOME</p>\r\n                                                    {\r\n                                                        this.props.AllRedu.isManualTxn ?\r\n                                                        <Link to={\"/statuscartmanual\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                        :\r\n                                                        <Link to={\"/status\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        this.state.showResponsePayment ?\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonSide-order'>\r\n                                                    <p className=\"linkWords-order\" onClick={() => this.backToHome()}>KEMBALI KE HOME</p>\r\n                                                    {\r\n                                                        this.props.AllRedu.isManualTxn ?\r\n                                                        <Link to={\"/statuscartmanual\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                        :\r\n                                                        <Link to={\"/status\"} style={{ textDecoration: \"none\" }} className=\"submitButton-order\">\r\n                                                            <div>\r\n                                                                <div className=\"wordsButton-order\">\r\n                                                                    LIHAT PESANAN\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Link>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <div className='orderContent'>\r\n                                                <div className='buttonBack-order'>\r\n                                                    <div className=\"submitBack-order\" onClick={() => this.backToHome()}>\r\n                                                        <div className=\"wordsBack-order\">\r\n                                                            KEMBALI\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                }\r\n\r\n                            </div>\r\n                    }\r\n                    {this.showDialogPayment()}\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n        AllRedu: state.AllRedu,\r\n        AuthRedu: state.AuthRedu\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { LoadingButton, DoneLoad, IsManualTxn })(OrderConfirmationView)\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["657","658","659"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nexport const addressShipping = \"https://dev-courier-api.pikapp.id\";\r\n// export const addressShipping = \"https://courier-api.pikapp.id\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const mapsApiKey = \"AIzaSyAhpg4G_EANh5cM9sHUY04XZaTAJVrd0Us\";\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js",["660","661","662","663","664"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Button/PikaButton\";\r\nimport ConfirmResetPinDialog from \"../ResetPin/ConfirmResetPinDialog\";\r\n\r\nconst ResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPinDialog, setConfirmResetPin] = useState(false);\r\n    const [resetPin, setResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleResetPin = (e) => {\r\n        setResetPin(e);\r\n    }\r\n\r\n    const checkResetPin = () => {\r\n        if (resetPin.length < 6) {\r\n          setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n    };\r\n\r\n    const openConfirmPinDialog = (e) => {\r\n        if (checkResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            currentPin : resetPin\r\n        };\r\n\r\n        dispatch({ type: 'RESETPIN', payload: data });\r\n\r\n        setConfirmResetPin(true);\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if(confirmResetPinDialog) {\r\n            return (\r\n                <ConfirmResetPinDialog \r\n                    isShowConfirmResetPin={confirmResetPinDialog}\r\n                    onHideConfirmResetPin={() =>setConfirmResetPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {showConfirmPinDialog()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MapsLayout\\MapsComponent.js",["665","666","667","668","669","670","671","672","673","674","675","676","677","678"],"// MyGoogleMaps.js\r\nimport React, { Component } from 'react';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport AutoComplete from './AutoCompleteComponent';\r\nimport Marker from './MarkerComponent';\r\n\r\nimport { MapInstance, MapApi, District, FormattedAddress, Places, Lat, Lng, Center, PostalCode, StreetNumber, StreetName, City, Province, IsMarkerChange } from '../../Redux/Actions'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport CurrentLocationIcon from  \"../../Asset/Icon/current-location.png\";\r\n\r\nimport { mapsApiKey } from '../../Asset/Constant/APIConstant';\r\n\r\nconst Wrapper = styled.main`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nclass MapsComponent extends Component {\r\n\r\n\r\n    state = {\r\n        mapApiLoaded: false,\r\n        mapInstance: null,\r\n        mapApi: null,\r\n        geoCoder: null,\r\n        places: [],\r\n        center: [],\r\n        zoom: 12,\r\n        address: '',\r\n        draggable: true,\r\n        lat: null,\r\n        lng: null,\r\n        oldLat: null\r\n    };\r\n\r\n    componentWillMount() {\r\n        // if(this.props.CartRedu.lat === 0) {\r\n        //     this.setCurrentLocation();\r\n        // } else {\r\n        //     this._generateAddress()\r\n        // }\r\n        this.setCurrentLocation();\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     if(this.state.address !== this.props.CartRedu.formattedAddress) {\r\n    //         this.props.FormattedAddress(this.state.address);\r\n    //     }\r\n    // }\r\n\r\n    onMarkerInteraction = (childKey, childProps, mouse) => {\r\n        this.setState({\r\n            draggable: false,\r\n            lat: mouse.lat,\r\n            lng: mouse.lng\r\n        });\r\n\r\n        this.props.Lat(mouse.lat);\r\n        localStorage.setItem(\"LAT\", JSON.stringify(mouse.lat))\r\n        this.props.Lng(mouse.lng);\r\n        localStorage.setItem(\"LNG\", JSON.stringify(mouse.lng))\r\n        this.props.IsMarkerChange(true);\r\n    }\r\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\r\n        this.setState({ draggable: true });\r\n        this.props.IsMarkerChange(true);\r\n        this._generateAddress();\r\n    }\r\n\r\n    _onChange = ({ center, zoom }) => {\r\n        this.setState({\r\n            center: center,\r\n            zoom: zoom,\r\n        });\r\n        // this.props.Center(center);\r\n        // this.props.Lat(center.lat);\r\n        // this.props.Lng(center.lng);\r\n        // if(this.props.CartRedu.mapApi !== \"\") {\r\n        //     this._generateAddress();\r\n        // }\r\n    }\r\n\r\n    _onClick = (value) => {\r\n        this.setState({\r\n            draggable: true,\r\n            lat: value.lat,\r\n            lng: value.lng,\r\n            oldLat: value.lat\r\n        }, () => {\r\n            this._generateAddress();\r\n        });\r\n        \r\n        this.props.Lat(value.lat);\r\n        localStorage.setItem(\"LAT\", JSON.stringify(value.lat))\r\n        this.props.Lng(value.lng);\r\n        localStorage.setItem(\"LNG\", JSON.stringify(value.lng))\r\n        this.props.IsMarkerChange(true);\r\n        // this._generateAddress();\r\n    }\r\n\r\n    apiHasLoaded = (map, maps) => {\r\n        this.setState({\r\n            mapApiLoaded: true,\r\n            mapInstance: map,\r\n            mapApi: maps,\r\n        });\r\n\r\n        this.props.MapInstance(map);\r\n        this.props.MapApi(maps);\r\n        this._generateAddress();\r\n    };\r\n\r\n    addPlace = (place) => {\r\n        this.setState({\r\n            places: [place],\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng()\r\n        });\r\n        this._generateAddress()\r\n    };\r\n\r\n    _generateAddress() {\r\n        const {\r\n            mapApi\r\n        } = this.state;\r\n\r\n        const geocoder = new mapApi.Geocoder;\r\n\r\n        // if(this.props.CartRedu.lat !== 0) {\r\n        //     this.setState({\r\n        //         places: this.props.CartRedu.places,\r\n        //         lat: this.props.CartRedu.lat,\r\n        //         lng: this.props.CartRedu.lng\r\n        //     });\r\n        // }\r\n\r\n        geocoder.geocode({ 'location': { lat: this.props.CartRedu.lat, lng: this.props.CartRedu.lng } }, (results, status) => {\r\n            if (status === 'OK') {\r\n                if (results[0]) {\r\n                    this.zoom = 12;\r\n                    results[0].address_components.map((res) => {\r\n                        if(res.types[0] == \"street_number\") {\r\n                            this.props.StreetNumber(\"No. \" + res.short_name);\r\n                        }\r\n                        if(res.types[0] == \"route\") {\r\n                            this.props.StreetName(res.short_name);\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_3\") {\r\n                            this.props.District(res.short_name);\r\n                            localStorage.setItem(\"DISTRICT\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"postal_code\") {\r\n                            this.props.PostalCode(res.short_name);\r\n                            localStorage.setItem(\"POSTALCODE\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_2\") {\r\n                            this.props.City(res.short_name);\r\n                            localStorage.setItem(\"CITY\", JSON.stringify(res.short_name))\r\n                        }\r\n                        if(res.types[0] == \"administrative_area_level_1\") {\r\n                            this.props.Province(res.short_name);\r\n                            localStorage.setItem(\"PROVINCE\", JSON.stringify(res.short_name))\r\n                        }\r\n                    })\r\n                    this.setState({ center: [this.props.CartRedu.lat, this.props.CartRedu.lng] });\r\n                    this.setState({ address: results[0].formatted_address });\r\n                    this.props.FormattedAddress(results[0].formatted_address.split(\",\")[0]);\r\n                    localStorage.setItem(\"FORMATTEDADDRESS\", JSON.stringify(results[0].formatted_address.split(\",\")[0]))\r\n                    this.props.Center([this.props.CartRedu.lat, this.props.CartRedu.lng]);\r\n                } else {\r\n                    window.alert('No results found');\r\n                }\r\n            } else {\r\n                window.alert('Geocoder failed due to: ' + status);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    // Get Current Location Coordinates\r\n    setCurrentLocation() {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                // this.setState({\r\n                //     center: [position.coords.latitude, position.coords.longitude],\r\n                //     lat: position.coords.latitude,\r\n                //     lng: position.coords.longitude\r\n                // });\r\n\r\n                if(this.props.CartRedu.lat === 0) {\r\n                    this.props.Center([position.coords.latitude, position.coords.longitude]);\r\n                    this.props.Lat(position.coords.latitude);\r\n                    localStorage.setItem(\"LAT\", JSON.stringify(position.coords.latitude))\r\n                    this.props.Lng(position.coords.longitude);\r\n                    localStorage.setItem(\"LNG\", JSON.stringify(position.coords.longitude))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getCurrentLocation() {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n\r\n                this.props.Center([position.coords.latitude, position.coords.longitude]);\r\n                this.props.Lat(position.coords.latitude);\r\n                localStorage.setItem(\"LAT\", JSON.stringify(position.coords.latitude))\r\n                this.props.Lng(position.coords.longitude);\r\n                localStorage.setItem(\"LNG\", JSON.stringify(position.coords.longitude))\r\n                this.props.IsMarkerChange(false);\r\n                this.props.StreetNumber(\"\");\r\n                this.props.StreetName(\"\");\r\n\r\n                this.setState({\r\n                    center: [position.coords.latitude, position.coords.longitude],\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                }, () => {\r\n                    this._generateAddress();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            places, mapApiLoaded, mapInstance, mapApi,\r\n        } = this.state;\r\n\r\n\r\n        return (\r\n            <Wrapper>\r\n                <GoogleMapReact\r\n                    center={this.props.CartRedu.center}\r\n                    zoom={this.state.zoom}\r\n                    draggable={this.state.draggable}\r\n                    onChange={this._onChange}\r\n                    onChildMouseDown={this.onMarkerInteraction}\r\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\r\n                    onChildMouseMove={this.onMarkerInteraction}\r\n                    onChildClick={() => console.log('child click')}\r\n                    onClick={this._onClick}\r\n                    bootstrapURLKeys={{\r\n                        key: mapsApiKey,\r\n                        libraries: ['places', 'geometry'],\r\n                    }}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\r\n                    showsUserLocation={true}\r\n                    showsMyLocationButton={true}\r\n                >\r\n\r\n                    <Marker\r\n                        text={this.props.CartRedu.formattedAddress}\r\n                        lat={this.props.CartRedu.lat}\r\n                        lng={this.props.CartRedu.lng}\r\n                    />\r\n\r\n                    {/* <Button className=\"addressmaps-currentlocation\" variant=\"outline-secondary\" onPress={()=>this.setCurrentLocation()} title=\"Get Location\"/> */}\r\n\r\n                    {/* <div className='addressmaps-location-sec' onClick={() => this.setCurrentLocation()}>\r\n                        <div className='addressmaps-location-current'>\r\n                        <span className='addressmaps-location-icon'>\r\n                            <img className='addressmaps-location-img' src={CurrentLocationIcon} alt='' />\r\n                        </span>\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                </GoogleMapReact>\r\n                {/* <div className=\"info-wrapper\"> */}\r\n                    <div style={{display: this.props.CartRedu.isMarkerChange ? 'block' : 'none'}} className='addressmaps-currentlocation-sec' onClick={() => this.getCurrentLocation()}>\r\n                        <div className='addressmaps-location-title'>\r\n                            <img className='addressmaps-location-logo' src={CurrentLocationIcon} alt='' />\r\n                            <div className='addressmaps-location-mainName'>\r\n                                Gunakan Lokasi Saat Ini\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                {/* </div> */}\r\n\r\n                {/* {mapApiLoaded && (\r\n                    <div>\r\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\r\n                    </div>\r\n                )} */}\r\n\r\n                {/* <div className=\"info-wrapper\">\r\n                    <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\r\n                    <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\r\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\r\n                </div> */}\r\n\r\n\r\n            </Wrapper >\r\n        );\r\n    }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n      AllRedu: state.AllRedu,\r\n      AuthRedu: state.AuthRedu,\r\n      CartRedu: state.CartRedu\r\n    }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { MapInstance, MapApi, District, FormattedAddress, Places, Lat, Lng, Center, PostalCode, StreetNumber, StreetName, City, Province, IsMarkerChange })(MapsComponent)\r\n\r\n// export default MapsComponent;","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MapsLayout\\AutoCompleteComponent.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\CartReducers.js",["679"],"const INITIAL_STATE = {\r\n    pickupType: -1, //PICKUP PAGE\r\n    pickupTitleType: \"\",\r\n    fullAddress: \"\",\r\n    postalCode : \"\",\r\n    shipperNotes: \"\",\r\n    shipperName: \"\",\r\n    shipperPrice: \"\",\r\n    shippingDateType : \"\", //SHIPPING DATE PAGE\r\n    shippingDate : \"\",\r\n    paymentType: -1, //PAYMENT PAGE\r\n    paymentTitleType: \"\",\r\n    paymentMethod : \"\",\r\n    phoneNumber: \"\",\r\n    customerName: \"\",\r\n    customerPhoneNumber: \"\",\r\n    mapInstance : \"\",\r\n    mapApi : \"\",\r\n    places : [],\r\n    lat : 0,\r\n    lng : 0,\r\n    center : [],\r\n    streetNumber : \"\",\r\n    streetName : \"\",\r\n    district : \"\",\r\n    city : \"\",\r\n    province : \"\",\r\n    formattedAddress : \"\",\r\n    shippingType : \"\",\r\n    shippingName : \"\",\r\n    shippingPrice : 0,\r\n    shippingDesc : \"\",\r\n    shippingCode : \"\",\r\n    courierList : [],\r\n    isMarkerChange : false,\r\n    searchInput : \"\",\r\n    courierServiceType : \"\",\r\n    insuranceCheckbox : false,\r\n    insurancePrice : 0\r\n    // dataDetailTxn : {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"PICKUPTYPE\":\r\n            return { ...state, pickupType: action.payload }\r\n        case \"REMAPPICKUPTYPE\":\r\n            return { ...state, pickupType: action.indexShipment, pickupTitleType: action.shipmentType }\r\n        case \"FULLADDRESS\":\r\n            return { ...state, fullAddress: action.payload }\r\n        case \"POSTALCODE\":\r\n            return { ...state, postalCode: action.payload }\r\n        case \"SHIPPERNOTES\":\r\n            return { ...state, shipperNotes: action.payload }\r\n        case \"SHIPPERNAME\":\r\n            return { ...state, shipperName: action.payload }\r\n        case \"SHIPPERPRICE\":\r\n            return { ...state, shipperPrice: action.payload }\r\n        case \"SHIPPINGDATETYPE\":\r\n            return { ...state, shippingDateType: action.payload }\r\n        case \"SHIPPINGDATE\":\r\n            return { ...state, shippingDate: action.payload }\r\n        case \"PAYMENTTYPE\":\r\n            return { ...state, paymentType: action.payload }\r\n        case \"REMAPPAYMENTTYPE\":\r\n            return { ...state, paymentType: action.indexPayment, paymentTitleType: action.paymentType }\r\n        case \"PAYMENTMETHOD\":\r\n            return { ...state, paymentMethod: action.payload }\r\n        case \"PHONENUMBER\":\r\n            return { ...state, phoneNumber: action.payload }\r\n        case \"CUSTOMERNAME\":\r\n            return { ...state, customerName: action.payload }\r\n        case \"CUSTOMERPHONENUMBER\":\r\n            return { ...state, customerPhoneNumber: action.payload }\r\n        case \"MAPINSTANCE\":\r\n            return { ...state, mapInstance: action.payload }\r\n        case \"MAPAPI\":\r\n            return { ...state, mapApi: action.payload }\r\n        case \"PLACES\":\r\n            return { ...state, places: action.payload }\r\n        case \"LAT\":\r\n            return { ...state, lat: action.payload }\r\n        case \"LNG\":\r\n            return { ...state, lng: action.payload }\r\n        case \"CENTER\":\r\n            return { ...state, center: action.payload }\r\n        case \"STREETNUMBER\":\r\n            return { ...state, streetNumber: action.payload }\r\n        case \"STREETNAME\":\r\n            return { ...state, streetName: action.payload }\r\n        case \"DISTRICT\":\r\n            return { ...state, district: action.payload }\r\n        case \"CITY\":\r\n            return { ...state, city: action.payload }\r\n        case \"PROVINCE\":\r\n            return { ...state, province: action.payload }\r\n        case \"FORMATTEDADDRESS\":\r\n            return { ...state, formattedAddress: action.payload }\r\n        case \"SHIPPINGTYPE\":\r\n            return { ...state, shippingType: action.payload }\r\n        case \"SHIPPINGNAME\":\r\n            return { ...state, shippingName: action.payload }\r\n        case \"SHIPPINGPRICE\":\r\n            return { ...state, shippingPrice: action.payload }\r\n        case \"SHIPPINGDESC\":\r\n            return { ...state, shippingDesc: action.payload }\r\n        case \"SHIPPINGCODE\":\r\n            return { ...state, shippingCode: action.payload }            \r\n        case \"COURIERLIST\":\r\n            return { ...state, courierList: action.payload }\r\n        case \"ISMARKERCHANGE\":\r\n            return { ...state, isMarkerChange: action.payload }\r\n        case \"SEARCHINPUT\":\r\n            return { ...state, searchInput: action.payload }\r\n        case \"COURIERSERVICETYPE\":\r\n            return { ...state, courierServiceType: action.payload }\r\n        case \"INSURANCECHECKBOX\":\r\n            return { ...state, insuranceCheckbox: action.payload }\r\n        case \"INSURANCEPRICE\":\r\n            return { ...state, insurancePrice: action.payload }\r\n        case \"SHIPPINGWITHCOURIER\":\r\n            return { ...state, \r\n                shippingName: action.shippingName, \r\n                shippingPrice: action.shippingPrice,\r\n                shippingDesc: action.shippingDesc,\r\n                courierServiceType: action.courierServiceType,\r\n                shippingCode: action.shippingCode,\r\n                insuranceCheckbox: action.insuranceCheckbox,\r\n                insurancePrice: action.insurancePrice }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js",["680"],"const INITIAL_STATE = {\r\n    dataRegister : {},\r\n    dataLogin : {},\r\n    isLoginStep : false,\r\n    dataResetPin : {},\r\n    dataPin : '',\r\n    dataPinToken: '',\r\n    isMerchantQR: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"REGISTER\" :\r\n            return {...state, dataRegister: action.payload}\r\n        case \"LOGIN\" :\r\n            return {...state, dataLogin: action.payload}\r\n        case \"LOGINSTEP\" :\r\n            return {...state, isLoginStep: action.payload}\r\n        case \"RESETPIN\" :\r\n            return {...state, dataResetPin: action.payload}\r\n        case \"PIN\" :\r\n            return {...state, dataPin: action.payload}\r\n        case \"PINTOKEN\" :\r\n            return {...state, dataPinToken: action.payload}\r\n        case \"ISMERCHANTQR\":\r\n            return { ...state, isMerchantQR: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["681"],"const INITIAL_STATE = {\r\n    buttonLoad: true,\r\n    validQTY: 0,\r\n    openSelect: false,\r\n    foodCateg: '',\r\n    checkboxes: [],\r\n    checkboxesTotal: [],\r\n    mandatCheckCond: false,\r\n    mandatCheck: false,\r\n    radiobutton: [],\r\n    mandatRadioCond: false,\r\n    mandatRadio: false,\r\n    totalAmountProd: 0,\r\n    openMenuCart: false,\r\n    dataOrder : {},\r\n    fcmToken : '',\r\n    dataDetail : {},\r\n    dataDetailTxn : {},\r\n    isManualTxn : false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return { ...state, buttonLoad: false }\r\n        case \"DONELOAD\":\r\n            return { ...state, buttonLoad: true }\r\n        case \"VALIDATIONQTY\":\r\n            return { ...state, validQTY: action.payload }\r\n        case \"OPENSELECT\":\r\n            return { ...state, openSelect: action.payload }\r\n        case \"FOODCATEG\":\r\n            return { ...state, foodCateg: action.payload }\r\n        case \"CHECKBOXES\":\r\n            return { ...state, checkboxes: action.payload }\r\n        case \"MANDATCHECKCOND\":\r\n            return { ...state, mandatCheckCond: action.payload }\r\n        case \"MANDATCHECK\":\r\n            return { ...state, mandatCheck: action.payload }\r\n        case \"COUNTCHECKBOX\":\r\n            return { ...state, checkboxesTotal: action.payload }\r\n        case \"RADIOBUTTON\":\r\n            return { ...state, radiobutton: action.payload }\r\n        case \"MANDATRADIOCOND\":\r\n            return { ...state, mandatRadioCond: action.payload }\r\n        case \"MANDATRADIO\":\r\n            return { ...state, mandatRadio: action.payload }\r\n        case \"COUNTTOTAL\":\r\n            return { ...state, totalAmountProd: action.payload }\r\n        case \"EDITCART\":\r\n            return { ...state, openMenuCart: action.payload }\r\n        case \"DATAORDER\":\r\n            return { ...state, dataOrder: action.payload }\r\n        case \"FCMTOKEN\":\r\n            return { ...state, fcmToken: action.payload }\r\n        case \"DATADETAIL\":\r\n            return { ...state, dataDetail: action.payload }\r\n        case \"ISMANUALTXN\":\r\n            return { ...state, isManualTxn: action.payload }\r\n        case \"DATADETAILTXN\":\r\n            return { ...state, dataDetailTxn: action.payload }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\firebaseConfig.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js",["682"],"import React, {useState} from \"react\";\r\nimport Tour from 'reactour';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../../Asset/scss/TourPage.scss';\r\n\r\n// const tour_steps = [\r\n//     {\r\n//         selector: '.merchantList-layout',\r\n//         content: 'This is my first Step'\r\n//     }\r\n// ];\r\n\r\nconst TourPage = (props) => {\r\n    // const [isTourOpen, setIsTourOpen] = useState(false);\r\n    const tour_steps = props.stepsContent;\r\n    const isTourOpen = props.isShowTour;\r\n    const isTourClose = props.isHideTour;\r\n\r\n    return (\r\n        <>\r\n            <Tour\r\n                steps={tour_steps}\r\n                isOpen={isTourOpen}\r\n                onRequestClose={isTourClose}\r\n                showNumber={false}\r\n                rounded={10}\r\n                nextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selanjutnya</Button>}\r\n                prevButton={<Button style={{ backgroundColor: \"#4056C6\" }} onClick={isTourClose}>Lewati</Button>}\r\n                lastStepNextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selesai</Button>}\r\n                onAfterOpen={target => (document.body.style.overflowY = 'hidden')}\r\n                onBeforeClose={target => (document.body.style.overflowY = 'auto')}\r\n                className={\"tourpage\"}\r\n            />\r\n        </>\r\n      );\r\n    };\r\n    \r\nexport default TourPage;\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js",["683","684","685","686","687","688","689","690","691","692","693","694","695"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport PinDialog from \"./PinDialog\";\r\nimport ConfirmPinDialog from \"./ConfirmPinDialog\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\n\r\nconst RegisterDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false);\r\n    const [pinDialog, setPin] = useState(false);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [lat, setLat] = useState('');\r\n    const [lon, setLon] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    // if(AuthRedu.dataRegister) {\r\n    //     setName(AuthRedu.dataRegister.full_name);\r\n    //     setEmail(AuthRedu.dataRegister.email);\r\n    //     setPhone(AuthRedu.dataRegister.phone_number);\r\n    // }\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideRegister()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideRegister()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openLoginDialog = () => {\r\n        setLogin(true);\r\n    }\r\n\r\n    const showLoginDialog = () => {\r\n        if (loginDialog) {\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = (e) => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkName() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkPhone() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        // this.props.LoadingButton()\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: name,\r\n            phone_number: phone,\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: false });\r\n\r\n        setPin(true);\r\n        // setConfirmPin(true);\r\n        // setForgotPin(true);\r\n        // props.onHideRegister();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const checkName = () => {\r\n        if (name.length > 0) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Name cannot be empty.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const checkPhone = () => {\r\n        if (phone.startsWith(\"08\")) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Phone not valid.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onChange = (value) => {\r\n        console.log(value);\r\n    }\r\n\r\n    const closeRegisterFlowDialog = () => {\r\n        setConfirmPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeLoginFlowDialog = () => {\r\n        setPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeForgotFlowDialog = () => {\r\n        setForgotPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const showDialog = (value) => {\r\n        if(pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                    onShowConfirm={() => setConfirmPin(true)}\r\n                    onShowForgotPin={() => setForgotPin(true)}\r\n                    onHideLoginFlow={closeLoginFlowDialog}\r\n                />\r\n            )\r\n        } else if(loginDialog){\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                    onShowPin={() => setPin(true)}\r\n                />\r\n            )\r\n        } \r\n        else if(confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                    onHideRegisterFlow={closeRegisterFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                    onHideForgotFlow={closeForgotFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='text' className='textfieldinput-auth' placeholder=\"Nama Lengkap\" onChange={handleName} />\r\n                        <input type='tel' className='textfieldinput-auth' placeholder=\"Nomor Handphone (Whatsapp)\" onChange={handlePhone} />\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {!isCaptcha || (\r\n                                        <ReCAPTCHA sitekey=\"asd\" onChange={onChange} />\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={6}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                        \r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={openLoginDialog}>LOGIN SAJA</p>\r\n                                <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                    <div className=\"wordsButton-auth\">\r\n                                        NEXT\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js",["696","697","698","699"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport Cookies from \"js-cookie\";\r\nimport PikaButton from \"../../../Component/Button/PikaButton\";\r\n\r\nconst ConfirmResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPin, setConfirmResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [successStatus, setSuccessStatus] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const backToHome = (e) => {\r\n        window.location.href = '/'\r\n    }\r\n\r\n    const handleConfirmResetPin = (e) => {\r\n        setConfirmResetPin(e);\r\n    }\r\n\r\n    const checkConfirmResetPin = () => {\r\n        if (AuthRedu.dataResetPin.currentPin === confirmResetPin) {\r\n            return true;\r\n          } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n          }\r\n    };\r\n\r\n    const handleResetPin = (e) => {\r\n        if (checkConfirmResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            // email: email\r\n            pin : confirmResetPin\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/reset-pin/\" + AuthRedu.dataPinToken + \"/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                setSuccessStatus(true);\r\n                var lastLink = { value: window.location.origin}\r\n                Cookies.set(\"lastLink\", lastLink,{ expires: 1});\r\n                localStorage.clear();\r\n                Cookies.remove(\"auth\");\r\n                dispatch({ type: 'DONELOAD' });\r\n                // props.DoneLoad();\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message);\r\n                    // setSuccessStatus(true);\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className=\"blankSpace\">\r\n\r\n                                            </div>\r\n\r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className='buttonSide-auth top270'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmResetPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\OrderListStatusModal.js",["700"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/OrderListStatusModal.scss'\r\nimport closeLogo from '../../Asset/Icon/closeNarrow.png';\r\nimport checkListLogo from '../../Asset/Icon/checklistIcon.png'\r\n\r\nconst OrderListStatus = (props) => {\r\n    const statusName = ['Semua Status', 'Menunggu Pembayaran', 'Menunggu Konfirmasi', 'Sedang Dimasak', 'Makanan Tiba']\r\n    const [radioStatus, setradioStatus] = useState(props.sendIndexStatus)\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHideStatusModal()\r\n    }\r\n\r\n    const onChangeRadio = (ind) => {\r\n        setradioStatus(ind)\r\n    }\r\n\r\n    const chooseStatus = () => {\r\n        props.getStatusData(radioStatus)\r\n        props.onHideStatusModal()\r\n    }\r\n\r\n    const statusList = () => {\r\n        return statusName.map((statName, ind) => {\r\n            return (\r\n                <div key={ind} className='statusOrder-eachList'>\r\n                    <div className='statusOrder-name'>\r\n                        {statName}\r\n                    </div>\r\n\r\n                    <div className='statusOrder-radioButton'>\r\n                        <div class=\"pretty p-image p-round p-jelly\">\r\n                            <input type=\"radio\" name=\"icon_solid\" onChange={() => onChangeRadio(ind)} defaultChecked={radioStatus === ind ? true : false} />\r\n                            <div class=\"state\">\r\n                                <img class=\"image\" src={checkListLogo} />\r\n                                <label></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='modalStatusOrder' style={{\r\n            display: props.isShowStatusModal ? 'block' : 'none'\r\n        }} onClick={closeModal}\r\n        >\r\n            <div className='modal-content-statusOrder' onClick={e => e.stopPropagation()}>\r\n                <div className='modalTop-statusOrder'>\r\n                    <span className='iconClose-statusOrder' onClick={closeModal}>\r\n                        <img src={closeLogo} className='closeLogo-statusOrder' alt='' />\r\n                    </span>\r\n\r\n                    <div className='title-statusOrder'>\r\n                        Pilih Status Yang Ingin Dilihat\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='modalContent-statusOrder'>\r\n                    {statusList()}\r\n                </div>\r\n\r\n                <div className='statusOrder-chooseButton' onClick={() => chooseStatus()}>\r\n                    PILIH\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListStatus","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\FailedModal.js",["701"],"import React from \"react\";\r\nimport Loader from 'react-loader-spinner';\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png';\r\nimport '../../Asset/scss/FailedModal.scss'\r\n\r\nconst FailedModal = (props) => {\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <div className='modalFailedPage' style={{\r\n            display: props.isShow ? 'block' : 'none'\r\n        }} onClick={closeModal}>\r\n            <div className='modalFailedContent' onClick={e => e.stopPropagation()}>\r\n                <span className='iconCloseNarrow-failed' onClick={closeModal}>\r\n                    <img src={closeNarrow} className='closeLogoNarrow-failed' alt='' />\r\n                </span>\r\n\r\n                <div className='modalFailed-Layout'>\r\n                    <h1 className='modalFailed-Title'>Jaringan Anda terputus. Silahkan refresh broweser Anda.</h1>\r\n\r\n                    <div className='modalFailed-Check'>\r\n                        <div className='modalFailed-cancel' onClick={closeModal}>\r\n                            Tutup\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailedModal","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js",["702","703","704","705","706","707"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/MenuDetail.scss'\r\n// import prodPhoto from '../../Asset/Illustration/samplefood.jpg'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport backLogo from '../../Asset/Icon/arrow-left.png'\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport MenuSelection from './MenuSelection'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport RegisterDialog from '../Authentication/RegisterDialog';\r\nimport Cookies from \"js-cookie\"\r\nimport PinDialog from \"../Authentication/PinDialog\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MenuDetail = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const menuCateg = props.handleCateg\r\n    const [menuSelect, setmenuSelect] = useState(false)\r\n    const [menuCondition, setmenuCondition] = useState(false)\r\n    const [registerDialog, setRegister] = useState(false)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [loadingButton, setloadingButton] = useState(true)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHide()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHide()\r\n        } else {\r\n            setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const addtoCart = () => {\r\n        if (!loadingButton) {\r\n            console.log('waitbro');\r\n        } else {\r\n            if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'error',\r\n                    text: 'Pilih terlebih dahulu pilihan yang wajib',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"Close\",\r\n                    closeOnConfirm: false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const countTotalPrice = () => {\r\n        let totalCheckPrice = 0\r\n        let totalRadioPrice = 0\r\n        let totalPrice = 0\r\n        let sumCheckPrice = AllRedu.checkboxes\r\n        sumCheckPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalCheckPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        let sumRadioPrice = AllRedu.radiobutton\r\n        sumRadioPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalRadioPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n        totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n        totalPrice += totalCheckPrice + totalRadioPrice\r\n        totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n        return totalPrice\r\n    }\r\n\r\n    let auth;\r\n\r\n    const openMenuSelect = () => {\r\n\r\n        setloadingButton(false)\r\n        dispatch({ type: 'LOADING' })\r\n        setmenuSelect(true)\r\n        dispatch({ type: 'FOODCATEG', payload: findCateg })\r\n    }\r\n\r\n    let findCateg\r\n    if (AllRedu.openMenuCart) {\r\n        findCateg = props.datas.foodCategory\r\n        if (!menuCondition) {\r\n            setmenuSelect(true)\r\n            setmenuCondition(true)\r\n        }\r\n    } else {\r\n        findCateg = menuCateg.filter((val) => {\r\n            return props.datas.category === parseInt(val.category_id)\r\n        })\r\n        findCateg = findCateg[0].category_name.toLowerCase()\r\n    }\r\n\r\n    let totalCheckPrice = 0\r\n    let totalRadioPrice = 0\r\n    let totalPrice = 0\r\n    let sumCheckPrice = AllRedu.checkboxes\r\n    sumCheckPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalCheckPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    let sumRadioPrice = AllRedu.radiobutton\r\n    sumRadioPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalRadioPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n    totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n    totalPrice += totalCheckPrice + totalRadioPrice\r\n    totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n    props.handleAmount(totalPrice)\r\n\r\n    const showRegisterDialog = () => {\r\n        if (registerDialog) {\r\n            return (\r\n                <RegisterDialog\r\n                    isShowRegister={registerDialog}\r\n                    onHideRegister={() => setRegister(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        setEmail(auth.email);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        setPin(true);\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const closeAuthDialog = () => {\r\n        setPin(false);\r\n        setRegister(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                    <div className='mob-modalMenuDetail' style={{\r\n                        display: props.isShow ? 'block' : 'none'\r\n                    }} onClick={closeModal}\r\n                    >\r\n                        <div className='mob-modal-content-menudetail' onClick={e => e.stopPropagation()}>\r\n                            <div className='mob-menuBanner'>\r\n                                <img className='mob-menuimg' src={props.datas.foodImage} alt='' />\r\n                                {\r\n                                    menuSelect ?\r\n                                        <span className='mob-iconClose' onClick={backModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                        :\r\n                                        <span className='mob-iconClose' onClick={closeModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='mob-menuContain'>\r\n                                <div className='mob-inside-menuContain' style={{ boxShadow: menuSelect ? \"0px 5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n                                    <div className='mob-menu-detail'>\r\n                                        {/* <div className='mob-menu-star'>\r\n                                            <img className='mob-menu-star-img' src={StarIcon} alt='' />\r\n                                            <h6 className='mob-menu-star-rating'>{props.datas.foodRating}</h6>\r\n                                        </div> */}\r\n\r\n                                        <div className='mob-menu-name'>\r\n                                            {props.datas.foodName}\r\n                                        </div>\r\n\r\n                                        <div className='mob-menu-category'>\r\n                                            {findCateg}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-price'>\r\n                                        {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    menuSelect ?\r\n                                        <Scrollbars style={{ height: \"calc(88vh - 375px)\" }}>\r\n                                            <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                                        </Scrollbars>\r\n                                        :\r\n                                        <div className='mob-menuDesc'>\r\n                                            <div className='mob-menu-desc'>\r\n                                                {props.datas.foodDesc}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                <div className='mob-menuButton' style={{ boxShadow: menuSelect ? \"0px -5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n\r\n                                    {\r\n                                        menuSelect ?\r\n                                            <div className='mob-openMenuSelection' style={{\r\n                                                backgroundColor:\r\n                                                    AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                        '#4bb7ac'\r\n                                                        :\r\n                                                        !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                            '#4bb7ac'\r\n                                                            :\r\n                                                            AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                '#4bb7ac'\r\n                                                                :\r\n                                                                !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                                    '#4bb7ac'\r\n                                                                    :\r\n                                                                    '#aaaaaa'\r\n                                            }} onClick={addtoCart}>\r\n                                                {\r\n                                                    !loadingButton ?\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            color=\"#ffffff\"\r\n                                                            height={70}\r\n                                                            width={70}\r\n                                                        />\r\n                                                        :\r\n                                                        <div className='mob-add-words'>\r\n                                                            {\r\n                                                                AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                                                                    :\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                                                            }\r\n                                                        </div>\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            <div onClick={openMenuSelect} className='mob-openMenuSelection' style={{ backgroundColor: '#4bb7ac' }}>\r\n                                                <div className='mob-add-words'>\r\n                                                    PESAN\r\n                                                </div>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n            {showRegisterDialog()}\r\n            {showPinDialog()}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MenuDetail","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MapsLayout\\MarkerComponent.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",["708","709","710"],"import React, { useState } from 'react'\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png'\r\nimport diningTableColor from '../../Asset/Icon/diningTableColor.png'\r\nimport diningTableWhite from '../../Asset/Icon/diningTableWhite.png'\r\nimport takeawayColor from '../../Asset/Icon/takeawayColor.png'\r\nimport takeawayWhite from '../../Asset/Icon/takeawayWhite.png'\r\nimport CashierPayment from '../../Asset/Icon/CashierPayment.png'\r\nimport CashierPaymentWhite from '../../Asset/Icon/CashierPaymentWhite.png'\r\nimport OvoPayment from '../../Asset/Icon/ovo_icon.png'\r\nimport DanaPayment from '../../Asset/Icon/dana_icon.png'\r\nimport ShopeePayment from '../../Asset/Icon/shopee_icon.png'\r\nimport Alertcircle from '../../Asset/Icon/alertcircle.png'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport '../../Asset/scss/CartModal.scss'\r\n\r\nconst CartModal = (props) => {\r\n    const [radioNumEat, setradioNumEat] = useState(props.indexOptionEat)\r\n    const [radioNumPay, setradioNumPay] = useState(props.indexOptionPay)\r\n    const [modalTitle, setmodalTitle] = useState(\"\")\r\n    const [isCheckNumber, setisCheckNumber] = useState(true)\r\n    const [isAlertNumber, setisAlertNumber] = useState(\"\")\r\n\r\n    const closeModal = (e) => {\r\n        if (isCheckNumber) {\r\n            e.stopPropagation()\r\n            props.onHide()\r\n        }\r\n    }\r\n\r\n    const confirmPay = () => {\r\n        props.confirmPay()\r\n        props.onHide()\r\n    }\r\n\r\n    const selectButton = () => {\r\n        if (modalTitle === 'Pilih Cara Makan Anda') {\r\n            props.handleData(radioNumEat)\r\n            props.onHide()\r\n        } else {\r\n            if (isCheckNumber) {\r\n                props.handleData(radioNumPay)\r\n                props.onHide()\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeRadio = (num, title) => {\r\n        if (title === 'Pilih Cara Makan Anda') {\r\n            setradioNumEat(num)\r\n            setmodalTitle(title)\r\n            setisCheckNumber(true)\r\n        } else if (title === 'Bayar Pakai Apa') {\r\n            setradioNumPay(num)\r\n            setmodalTitle(title)\r\n            setisCheckNumber(true)\r\n        }\r\n    }\r\n\r\n    const onChangeNumber = (e) => {\r\n        let reg = /^(?!00)(?!01)(?!02)(?!03)(?!04)(?!05)(?!06)(?!07)(?!09)[0][0-9]\\d{0,12}$/\r\n        let checkNumber = reg.test(e.target.value)\r\n        props.setPhoneNumber(e.target.value)\r\n        if (checkNumber) {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('')\r\n        } else if (e.target.value === '') {\r\n            setisCheckNumber(false)\r\n            setisAlertNumber('Nomor harus diisi')\r\n        } else {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('Masukkan nomor dengan benar')\r\n        }\r\n    }\r\n\r\n    const choicesCartModal = () => {\r\n        let optionList = props.detailOptions\r\n        let choicesModal = optionList.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"dineIn\") {\r\n                if (radioNumEat === 1) {\r\n                    imageOption = diningTableColor;\r\n                } else {\r\n                    imageOption = diningTableWhite;\r\n                }\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                if (radioNumEat === 0) {\r\n                    imageOption = takeawayColor;\r\n                } else {\r\n                    imageOption = takeawayWhite;\r\n                }\r\n            } else if (optionVal.image === \"cashier\") {\r\n                if (radioNumPay >= 1 || radioNumPay == -1) {\r\n                    imageOption = CashierPayment;\r\n                } else {\r\n                    imageOption = CashierPaymentWhite;\r\n                }\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            } else if (optionVal.image === \"dana\") {\r\n                imageOption = DanaPayment;\r\n            } else if (optionVal.image === \"shopee\") {\r\n                imageOption = ShopeePayment;\r\n            }\r\n\r\n            if (props.title === 'Pilih Cara Makan Anda') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'EATMETHOD'} defaultChecked={radioNumEat === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Bayar Pakai Apa') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'PAYMETHOD'} defaultChecked={radioNumPay === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Rincian Pembayaran') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailTotalPrice'>\r\n                        <div className='modalCart-totalPrice'>\r\n                            <h2 className='modalCart-totalPrice-left'>Total Harga Barang</h2>\r\n                            <h2 className='modalCart-totalPrice-right'>{Intl.NumberFormat(\"id-ID\").format(optionVal.totalPrice)}</h2>\r\n                        </div>\r\n\r\n                        <div className='modalCart-discount'>\r\n                            <h2 className='modalCart-discount-left'>Diskon</h2>\r\n                            <h2 className='modalCart-discount-right'>{optionVal.discountPrice}</h2>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return choicesModal\r\n    }\r\n\r\n    const hideTooltip = () => {\r\n        setTimeout(() => {\r\n            ReactTooltip.hide()\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modalCartPage' style={{\r\n                display: props.isShow ? 'block' : 'none'\r\n            }} onClick={closeModal}>\r\n                <div className='modalCartContent' onClick={e => e.stopPropagation()}>\r\n                    <span className='iconCloseNarrow' onClick={closeModal}>\r\n                        <img src={closeNarrow} className='closeLogoNarrow' alt='' />\r\n                    </span>\r\n\r\n                    {\r\n                        props.title !== \"Pesanan yang Anda buat tidak dapat dibatalkan\" ?\r\n                            <div className='modalCart-detail'>\r\n                                <h1 className='modalCart-title'>{props.title}</h1>\r\n\r\n                                {choicesCartModal()}\r\n\r\n                                {\r\n                                    modalTitle === 'Bayar Pakai Apa' && radioNumPay === 1 ?\r\n                                        <div className='ovoNumber-layout'>\r\n                                            <div className='ovoNumber-topSide'>\r\n                                                <h3 className='ovoNumber-title'>\r\n                                                    Masukkan Nomor Anda\r\n                                                </h3>\r\n\r\n                                                <a data-tip='Masukkan Nomor Yang Terdaftar Di OVO Untuk Melakukan Pembayaran' data-event='click'><img src={Alertcircle} className='alertImg' alt='' /></a>\r\n                                                <ReactTooltip className='extraClass' effect='solid' arrowColor='#F8FAFC' globalEventOff='click' afterShow={() => hideTooltip()} />\r\n                                            </div>\r\n\r\n                                            <input type='number' inputMode='numeric' className='ovoNumber-bottomSide' onChange={onChangeNumber} style={{ borderBottom: !isCheckNumber ? '0.5px solid #DC6A84' : '0.5px solid #D9CECE', color: !isCheckNumber ? '#DC6A84' : '#111111' }} />\r\n                                            {\r\n                                                isAlertNumber !== '' ?\r\n                                                    <h4 className='ovoNumber-alert'>\r\n                                                        {isAlertNumber}\r\n                                                    </h4>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div className='modalCart-selectLayout'>\r\n                                    <div className='modalCart-selectButton' onClick={selectButton}>\r\n                                        OK\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='modalCart-paymentLayout'>\r\n                                <h1 className='modalCart-paymentTitle'>{props.title}</h1>\r\n\r\n                                <div className='modalCart-paymentCheck'>\r\n                                    <div className='modalCart-cancelPay' onClick={closeModal}>\r\n                                        Cek Ulang\r\n                                    </div>\r\n\r\n                                    <div className='modalCart-confirmPay' onClick={confirmPay}>\r\n                                        Setuju\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartModal","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js",["711","712","713","714","715"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\n\r\nconst ForgotPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideForgotPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideForgotPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/forget-pin\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    text: 'Link verifikasi telah dikirim ke alamat email Anda. Segera lakukan reset PIN untuk melanjutkan proses ini.',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    closeOnConfirm: false,\r\n                    // timer: 3000\r\n                }).then(() => {\r\n                    props.onHideForgotFlow();\r\n                    dispatch({ type: 'DONELOAD' });\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                            \r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ForgotPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js",["716","717","718","719","720","721","722","723","724","725"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst ConfirmPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false)\r\n    const [confirmPin, setConfirmPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleConfirmPin = (e) => {\r\n        setConfirmPin(e);\r\n    }\r\n\r\n    const checkConfirmPin = () => {\r\n        if (AuthRedu.dataRegister.pin === confirmPin) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        if (checkConfirmPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            password: confirmPin,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            gender: \"MALE\",\r\n            birth_day: \"01011970\",\r\n            token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/register\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Register Berhasil.',\r\n                    // showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    // closeOnConfirm: false,\r\n                    timer: 3000\r\n                }).then(() => {\r\n                    handleLogin();\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n                setCaptchaCounter(captchaCounter + 1);\r\n            });\r\n\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        const data = {\r\n            username: AuthRedu.dataRegister.email,\r\n            pin: confirmPin,\r\n            fcm_token: AllRedu.fcmToken\r\n        };\r\n\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            auth.isLogged = true;\r\n            auth.token = res.data.token;\r\n            auth.new_event = res.data.new_event;\r\n            auth.recommendation_status = res.data.recommendation_status;\r\n            auth.is_email_verified = res.data.is_email_verified;\r\n            auth.email = AuthRedu.dataRegister.email;\r\n            Cookies.set(\"auth\", auth, { expires: 1 });\r\n            var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n            var latitude = getLocation.lat\r\n            var longitude = getLocation.lon\r\n            // props.onHideConfirmPin()\r\n            props.onHideRegisterFlow();\r\n            dispatch({ type: 'DONELOAD' });\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value;\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            //     window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        }) \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js",["726","727","728","729","730","731","732","733","734","735","736"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport ConfirmPinDialog from './ConfirmPinDialog';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NotifModal from '../Modal/NotifModal';\r\n\r\nconst PinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [pin, setPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isLoginStep, setIsLoginStep] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHidePin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHidePin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openConfirmPinDialog = () => {\r\n\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            pin: pin\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        setIsLoginStep(false);\r\n        // setConfirmPin(true);\r\n        props.onHidePin();\r\n        props.onShowConfirm();\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            username: AuthRedu.dataLogin.email,\r\n            pin: pin,\r\n            fcm_token: AllRedu.fcmToken\r\n        };\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            setSuccessMessage(\"Login Berhasil.\");\r\n            setTimeout(() => {\r\n                auth.isLogged = true;\r\n                auth.token = res.data.token;\r\n                auth.new_event = res.data.new_event;\r\n                auth.recommendation_status = res.data.recommendation_status;\r\n                auth.is_email_verified = res.data.is_email_verified;\r\n                auth.email = AuthRedu.dataLogin.email;\r\n                Cookies.set(\"auth\", auth, { expires: 1 });\r\n                var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n                var latitude = getLocation.lat\r\n                var longitude = getLocation.lon\r\n                // props.onHidePin()\r\n                props.onHideLoginFlow()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }, 1000);\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            // window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        })  \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if (confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openForgotPinDialog = () => {\r\n        props.onHidePin();\r\n        props.onShowForgotPin();\r\n        // setForgotPin(true);\r\n    }\r\n\r\n    const showForgotPinDialog = () => {\r\n        if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handlePin = (e) => {\r\n        setPin(e);\r\n    }\r\n\r\n    const checkPin = () => {\r\n        if (pin.length < 6) {\r\n            setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const showNotifModal = () => {\r\n        if (AllRedu.buttonLoad === false) {\r\n            return <NotifModal isShowNotif={AllRedu.buttonLoad} responseMessage={successMessage} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n            }\r\n            {showNotifModal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js",["737","738","739","740","741","742","743","744"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport PinDialog from \"./PinDialog\";\r\n\r\nconst LoginDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideLogin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideLogin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        // setPin(true);\r\n        props.onHideLogin();\r\n        props.onShowPin();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js",["745","746","747"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../Asset/scss/MenuSelection.scss'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Autosize from 'autosize'\r\nimport { ValidQty } from '../../Redux/Actions'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst MenuSelection = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [detailCategory, setdetailCategory] = useState([\r\n        {\r\n            name: \"\",\r\n            amount: 1,\r\n        },\r\n    ])\r\n    const [note, setnote] = useState('')\r\n    const [checkboxVal, setcheckboxVal] = useState([])\r\n    const [checkboxData, setcheckboxData] = useState([])\r\n    const [checkboxMatch, setcheckboxMatch] = useState([])\r\n    const [totalCheckMandat, settotalCheckMandat] = useState(0)\r\n    const [indexCheckMandat, setindexCheckMandat] = useState(null)\r\n\r\n    const [radioVal, setradioVal] = useState([])\r\n    const [radioData, setradioData] = useState([])\r\n    const [radioMatch, setradioMatch] = useState([])\r\n    const [totalRadioMandat, settotalRadioMandat] = useState(0)\r\n\r\n    const [updateDataEdit, setupdateDataEdit] = useState(false)\r\n    const [updateEditChoice, setupdateEditChoice] = useState(false)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    useEffect(() => {\r\n        Autosize(document.getElementById('note'))\r\n\r\n        //hit API in order to get response of product detail v2\r\n        let uuid = uuidV4()\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(`${address}/home/v2/detail/product/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\": \"PUBLIC\",\r\n                \"pid\": props.datas.productId,\r\n            },\r\n            method: 'GET'\r\n        }).then(productRes => {\r\n            let productDet = productRes.data.results.extra_menus.extra_menu\r\n            let radioResponse = []\r\n            let checkboxResponse = []\r\n            productDet.forEach(valProduct => {\r\n                if (valProduct.menu_type === 'RADIO') {\r\n                    radioResponse.push(valProduct)\r\n                } else {\r\n                    checkboxResponse.push(valProduct)\r\n                }\r\n            })\r\n\r\n            let radioData = []\r\n            let radioValData = []\r\n            radioResponse.forEach(valRadRes => {\r\n                let listadditionradio = []\r\n                valRadRes.menu_extra_item.forEach(valList => {\r\n                    listadditionradio.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                radioData.push({\r\n                    additionname: valRadRes.menu_name,\r\n                    isMandat: valRadRes.is_mandatory,\r\n                    listaddition: listadditionradio\r\n                })\r\n                radioValData.push([])\r\n            })\r\n\r\n            let checkboxData = []\r\n            let checkValData = []\r\n            checkboxResponse.forEach(valCheckRes => {\r\n                let listadditioncheckbox = []\r\n                valCheckRes.menu_extra_item.forEach(valList => {\r\n                    listadditioncheckbox.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                checkboxData.push({\r\n                    additionname: valCheckRes.menu_name,\r\n                    maxchoice: valCheckRes.max_choice,\r\n                    isMandat: valCheckRes.is_mandatory,\r\n                    listaddition: listadditioncheckbox\r\n                })\r\n                checkValData.push([])\r\n            })\r\n\r\n            //set mandatory for checkboxes\r\n            let mandatCheckAvailability = checkboxData.length\r\n            let mandatCheckLength = checkboxData.length\r\n            let checkboxMandat = []\r\n            let totalMandatforCheck = 0\r\n            checkboxData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    checkboxMandat.push(false)\r\n                    totalMandatforCheck++\r\n                    mandatCheckAvailability = mandatCheckAvailability - 1\r\n                } else {\r\n                    checkboxMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatCheckLength === mandatCheckAvailability) {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: true })\r\n            }\r\n            setcheckboxMatch(checkboxMandat)\r\n            settotalCheckMandat(totalMandatforCheck)\r\n\r\n            //set mandatory for radio\r\n            let mandatRadioAvailability = radioData.length\r\n            let mandatRadioLength = radioData.length\r\n            let radioMandat = []\r\n            let totalMandatforRadio = 0\r\n            radioData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    radioMandat.push(false)\r\n                    totalMandatforRadio++\r\n                    mandatRadioAvailability = mandatRadioAvailability - 1\r\n                } else {\r\n                    radioMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatRadioLength === mandatRadioAvailability) {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: true })\r\n            }\r\n            setradioMatch(radioMandat)\r\n            settotalRadioMandat(totalMandatforRadio)\r\n\r\n            if (!AllRedu.openMenuCart) {\r\n                var datas = props.datas\r\n                var list = []\r\n                if (datas.foodExt !== undefined) {\r\n                    datas.foodExt.map((data) => {\r\n                        return list.push({\r\n                            name: data.name,\r\n                            amount: data.amount + 1,\r\n                        });\r\n                    });\r\n                    props.ValidQty(1)\r\n                    setdetailCategory(list);\r\n                    setradioData(radioData)\r\n                    setcheckboxData(checkboxData)\r\n                    setradioVal(radioValData)\r\n                    setcheckboxVal(checkValData)\r\n                }\r\n            } else {\r\n                let amountofProd = props.datas.foodExt\r\n                amountofProd.forEach((val) => {\r\n                    props.ValidQty(val.amount)\r\n                })\r\n                setdetailCategory(props.datas.foodExt)\r\n                setnote(props.datas.foodNote)\r\n                setradioData(radioData)\r\n                setcheckboxData(checkboxData)\r\n                dispatch({ type: 'CHECKBOXES', payload: props.datas.foodListCheckbox })\r\n                dispatch({ type: 'RADIOBUTTON', payload: props.datas.foodListRadio })\r\n                setupdateDataEdit(true)\r\n                setradioVal(props.datas.foodListRadio)\r\n                setcheckboxVal(props.datas.foodListCheckbox)\r\n            }\r\n            dispatch({ type: 'DONELOAD' })\r\n            props.loadingButton()\r\n        }).catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (AllRedu.openMenuCart && updateDataEdit) {\r\n            //this function is used for replace api data with edit data (CHECKBOX)\r\n            let editCheckbox = []\r\n            let newlistcheckboxAddition = []\r\n            let foodListCheckbox = props.datas.foodListCheckbox\r\n\r\n            checkboxData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListCheckbox.forEach((foodfirstVal, indfoodFirst) => {\r\n                        let countNoMatch = 1\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistcheckboxAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    if (countNoMatch === foodfirstVal.length) {\r\n                                        newlistcheckboxAddition.push({\r\n                                            name: secondVal.name,\r\n                                            price: secondVal.price,\r\n                                            isChecked: false\r\n                                        })\r\n                                        countNoMatch = 1\r\n                                    } else {\r\n                                        countNoMatch++\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListCheckbox[indfirstVal].length === 0) {\r\n                        newlistcheckboxAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editCheckbox.push({\r\n                    additionname: firstVal.additionname,\r\n                    maxchoice: firstVal.maxchoice,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistcheckboxAddition\r\n                })\r\n                newlistcheckboxAddition = []\r\n            })\r\n            let editTotalcheckMandat = 0\r\n            let editArraycheckMandat = []\r\n            editCheckbox.forEach(valEdit => {\r\n                editArraycheckMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalcheckMandat++\r\n                }\r\n            })\r\n            if (editTotalcheckMandat === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(editArraycheckMandat)\r\n\r\n            //this function is used for replace api data with edit data (RADIO)\r\n            let editRadio = []\r\n            let newlistradioAddition = []\r\n            let foodListRadio = props.datas.foodListRadio\r\n\r\n            radioData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListRadio.forEach((foodfirstVal, indfoodFirst) => {\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: false\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListRadio[indfirstVal].length === 0) {\r\n                        newlistradioAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editRadio.push({\r\n                    additionname: firstVal.additionname,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistradioAddition\r\n                })\r\n                newlistradioAddition = []\r\n            })\r\n            let editTotalradioMandat = 0\r\n            let editArrayradioMandat = []\r\n            editRadio.forEach(valEdit => {\r\n                editArrayradioMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalradioMandat++\r\n                }\r\n            })\r\n            if (editTotalradioMandat === totalRadioMandat) {\r\n                if (totalRadioMandat === 0) {\r\n                    dispatch({ type: 'MANDATRADIO', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATRADIO', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            }\r\n            setradioMatch(editArrayradioMandat)\r\n\r\n            setcheckboxData(editCheckbox)\r\n            setradioData(editRadio)\r\n            setupdateDataEdit(false)\r\n            setupdateEditChoice(true)\r\n        }\r\n    }, [radioVal, checkboxVal])\r\n\r\n    const checkboxArrData = () => {\r\n        return checkboxData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='checkbox-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname.toUpperCase().toLowerCase()}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Max {listname.maxchoice} items</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='box-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='checkBox-side'>\r\n                                                        <div className='check-box' />\r\n                                                        <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='box-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='checkBox-side'>\r\n                                                    <div className='check-box' />\r\n                                                    <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const radioArrData = () => {\r\n        return radioData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='radio-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Pilih Salah Satu</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='radiobox-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='radio-side'>\r\n                                                        <div className='radio-circle' />\r\n                                                        <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='radiobox-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='radio-side'>\r\n                                                    <div className='radio-circle' />\r\n                                                    <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const onCheckboxChange = (e, indexlistname, listprice, name, max, mandat) => {\r\n        var checkedChecks = document.querySelectorAll(`.${name}:checked`)\r\n        if (checkedChecks.length > max) {\r\n            e.target.checked = false\r\n        } else {\r\n            let checkMandat = [...checkboxMatch]\r\n            if (mandat) {\r\n                checkMandat[indexlistname] = mandat\r\n                setindexCheckMandat(indexlistname)\r\n            }\r\n\r\n            let checkboxArr = [...checkboxVal]\r\n            if (e.target.checked) {\r\n                checkboxArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n                setcheckboxVal(checkboxArr)\r\n                dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n            } else {\r\n                checkboxArr[indexlistname] = checkboxArr[indexlistname].filter(val => val.name !== e.target.value)\r\n                setcheckboxVal(checkboxArr)\r\n                let sizeArr = 0\r\n                checkboxArr.forEach((firstVal) => {\r\n                    firstVal.forEach((nestedVal) => {\r\n                        if (nestedVal.name) {\r\n                            sizeArr += 1\r\n                        }\r\n                    })\r\n                })\r\n                if (sizeArr > 0) {\r\n                    dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n                    if (checkboxArr[indexlistname].length === 0) {\r\n                        checkMandat[indexlistname] = false\r\n                    }\r\n                } else {\r\n                    checkMandat[indexlistname] = false\r\n                    dispatch({ type: 'CHECKBOXES', payload: [] })\r\n                }\r\n            }\r\n\r\n            let totalMandatCheck = 0\r\n            checkMandat.forEach(valMandat => {\r\n                if (valMandat) {\r\n                    totalMandatCheck++\r\n                }\r\n            })\r\n            if (totalMandatCheck === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(checkMandat)\r\n        }\r\n    }\r\n\r\n    const onRadioChange = (e, indexlistname, mandat, listprice, indexlistadd) => {\r\n        let radioMandat = [...radioMatch]\r\n        if (mandat) {\r\n            radioMandat[indexlistname] = mandat\r\n        }\r\n        let radiobuttonArr = [...radioVal]\r\n        radiobuttonArr[indexlistname].pop()\r\n        radiobuttonArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n        setradioVal(radiobuttonArr)\r\n        dispatch({ type: 'RADIOBUTTON', payload: radiobuttonArr })\r\n\r\n        let totalMandatRadio = 0\r\n        radioMandat.forEach(valMandat => {\r\n            if (valMandat) {\r\n                totalMandatRadio++\r\n            }\r\n        })\r\n        if (totalMandatRadio === totalRadioMandat) {\r\n            if (totalRadioMandat === 0) {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: true })\r\n            }\r\n        } else {\r\n            dispatch({ type: 'MANDATRADIO', payload: false })\r\n        }\r\n        setradioMatch(radioMandat)\r\n    }\r\n\r\n    const handleDecrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e && food.amount > 1) {\r\n                food.amount = food.amount - 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleIncrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e) {\r\n                food.amount = food.amount + 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        return detailCategory.map((food, ind) => {\r\n            return (\r\n                <div key={ind} className='amount-box-inside'>\r\n                    <div className='minus-box' style={{ backgroundColor: AllRedu.validQTY > 1 ? '#4bb7ac' : '#767676' }} onClick={() => handleDecrease(food)}>\r\n                        <div className='minus-sym'>\r\n                            -\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='number-area'>\r\n                        {food.amount}\r\n                    </div>\r\n\r\n                    <div className='plus-box' onClick={() => handleIncrease(food)}>\r\n                        <div className='plus-sym'>\r\n                            +\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        setnote(e.target.value)\r\n    }\r\n\r\n    var thedata = {\r\n        detailCategory: detailCategory,\r\n        note: note ? note : '',\r\n        foodCategory: AllRedu.openMenuCart ? props.datas.foodCategory : AllRedu.foodCateg,\r\n        listcheckbox: checkboxVal,\r\n        listradio: radioVal\r\n    }\r\n    props.handleData(thedata)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isMobile ?\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { ValidQty })(MenuSelection)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\MerchantDetailProfile.js",["748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764"],"import Axios from \"axios\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\"\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport ArrowRight from \"../../Asset/Icon/arrowright-icon.png\";\r\nimport ShopIcon from \"../../Asset/Icon/ic_shop.png\";\r\nimport LocationIcon from \"../../Asset/Icon/location-icon.png\";\r\nimport ClockIcon from \"../../Asset/Icon/ic_clock_green.png\";\r\nimport CartIcon from \"../../Asset/Icon/ic_shopping_cart.png\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MerchantDetailProfile = () => {\r\n    const location = useLocation()\r\n    const [merchantLogo, setMerchantLogo] = useState(location.state.merchantLogo);\r\n    const [merchantName, setMerchantName] = useState(location.state.merchantName);\r\n    const [merchantAddress, setMerchantAddress] = useState(location.state.merchantAddress);\r\n    const [merchantSchedule, setMerchantSchedule] = useState([\r\n        {\r\n            days: \"\",\r\n            open_time: \"\",\r\n            close_time: \"\",\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n        Axios(address + \"merchant/v1/shop/management/list/\", {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-request-id\": uuid,\r\n              \"x-request-timestamp\": date,\r\n              \"x-client-id\": clientId,\r\n              \"token\": \"PUBLIC\",\r\n              \"mid\": selectedMerchant[0].mid,\r\n            },\r\n            method: \"GET\"\r\n          }).then((res) => {\r\n              if (res.data.results != null) {\r\n                  let timeManagement = res.data.results.time_management\r\n                  setMerchantSchedule(timeManagement)\r\n              } else {\r\n                  \r\n              }\r\n          }).catch((err) => console.log(err))\r\n    }, [])\r\n\r\n    const shopSchedule = () => {\r\n        return merchantSchedule.map((val, ind) => {\r\n            let shopDays\r\n            if (val.days == \"SUNDAY\") {\r\n                shopDays = \"Minggu\"\r\n            } else if(val.days == \"MONDAY\") {\r\n                shopDays = \"Senin\"\r\n            } else if(val.days == \"TUESDAY\") {\r\n                shopDays = \"Selasa\"\r\n            } else if(val.days == \"WEDNESDAY\") {\r\n                shopDays = \"Rabu\"\r\n            } else if(val.days == \"THURSDAY\") {\r\n                shopDays = \"Kamis\"\r\n            } else if(val.days == \"FRIDAY\") {\r\n                shopDays = \"Jumat\"\r\n            } else if(val.days == \"SATURDAY\") {\r\n                shopDays = \"Sabtu\"\r\n            } \r\n\r\n            let hourStatus\r\n            if (val.open_time == \"00:00\" && val.close_time == \"00:00\") {\r\n                hourStatus = `Tutup`\r\n            } else if(val.open_time == \"00:00\" && val.close_time == \"23:59\") {\r\n                hourStatus = `Buka 24 Jam`\r\n            } else {\r\n                hourStatus = `${val.open_time} - ${val.close_time}`\r\n            }\r\n            return (\r\n                <div key={ind} className=\"merchdetailprofile-shopSchedule-content\">\r\n                    <div className=\"merchdetailprofile-shopSchedule-days\">{shopDays}</div>\r\n                    <div className=\"merchdetailprofile-shopSchedule-hours\">{hourStatus}</div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const cartButton = () => {\r\n        let allCart = JSON.parse(localStorage.getItem('cart'))\r\n        let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n        let filterMerchantCart = allCart.filter(cartVal => {\r\n            return selectedMerchant[0].mid === cartVal.mid\r\n        })\r\n        if (filterMerchantCart.length != 0) {\r\n            let isManualTxn = JSON.parse(localStorage.getItem(\"isManualTxn\"))\r\n            return (\r\n                <Link to={isManualTxn ? \"/cartmanual\" : \"/cart\"} style={{ textDecoration: \"none\" }}>\r\n                    <div className=\"merchdetailprofile-cart-layout\">\r\n                        <div className=\"merchdetailprofile-cart-startSide\">\r\n                            <img className=\"merchdetailprofile-cart-image\" src={CartIcon} alt='' />\r\n                            <div className=\"merchdetailprofile-cart-titleSide\">\r\n                                <div className=\"merchdetailprofile-cart-title\">Pesanan Saya</div>\r\n                                <div className=\"merchdetailprofile-cart-detail\">Cek Pesanan Saya Sekarang</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <img className=\"merchdetailprofile-cart-arrow\" src={ArrowRight} alt='' />\r\n                    </div>\r\n                </Link>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"merchdetailprofile-Layout\">\r\n                <div className=\"merchdetailprofile-header\">\r\n                    <span className=\"merchdetailprofile-back\" onClick={() => window.history.go(-1)}>\r\n                        <img className=\"merchdetailprofile-backicon\" src={ArrowBack} alt='' />\r\n                    </span>\r\n\r\n                    <img className=\"merchdetailprofile-logo\" src={merchantLogo} alt='' />\r\n                    <div className=\"merchdetailprofile-title\">{merchantName}</div>\r\n                </div>\r\n\r\n                <div className=\"merchdetailprofile-shopTitle-layout\">\r\n                    <img className=\"merchdetailprofile-shopTitle-image\" src={ShopIcon} alt='' />\r\n                    <div className=\"merchdetailprofile-shopTitle-title\">Info Toko</div>\r\n                </div>\r\n\r\n                <div className=\"merchdetailprofile-shopAddress-layout\">\r\n                    <img className=\"merchdetailprofile-shopAddress-image\" src={LocationIcon} alt='' />\r\n                    <div className=\"merchdetailprofile-shopAddress-title\">{merchantAddress}</div>\r\n                </div>\r\n\r\n                <div className=\"merchdetailprofile-shopSchedule-layout\">\r\n                    <img className=\"merchdetailprofile-shopSchedule-image\" src={ClockIcon} alt='' />\r\n                    <div className=\"merchdetailprofile-shopSchedule-contentLayout\">\r\n                        {shopSchedule()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MerchantDetailProfile","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartCancel.js",["765","766"],"import React, { useState } from 'react'\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png'\r\nimport moment from \"moment\";\r\n\r\nconst CartCancel = (props) => {\r\n\r\n    const goBack = (e) => {\r\n        e.stopPropagation()\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modalCartCancelPage' style={{\r\n                    display: props.isShow ? 'block' : 'none'\r\n                }} onClick={goBack}>\r\n                <div className=\"cartCancel-layout\" onClick={e => e.stopPropagation()}>\r\n                    <div className=\"cartCancel-topSide\">\r\n                        <div className=\"cartCancel-header\">\r\n                            <span className=\"cartCancel-backArrow\" onClick={goBack}>\r\n                                <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className='cartCancel-container'>\r\n                            <div className='cart-cancel-iconLayout'>\r\n                                <span className='cart-cancel-iconsecondLayout'>\r\n                                    <img src={closeNarrow} className='cart-cancel-icon' />\r\n                                </span>\r\n                            </div>\r\n                            <div className='cartCancel-contentLayout'>\r\n                                <div className='cartCancel-content-title'>Transaksi Gagal</div>\r\n                                <div className='cartCancel-content-detail'>Saat ini transaksi Anda tidak dapat di proses karena restoran sudah tutup</div>\r\n                                <div className='cartCancel-content-message'>Silahkan masukkan informasi transaksi dengan benar</div>\r\n                                <div className='cartCancel-divider' />\r\n                                <div className='cartCancel-bottom-datetime'>\r\n                                    <div className='cartCancel-bottom-datetime-title'>Tanggal dan Jam</div>\r\n                                    <div className='cartCancel-bottom-datetime-detail'>{moment(new Date()).format(\"DD MMM YYYY, HH:mm\")}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='cartCancel-button-layout'>\r\n                            <div className='cartCancel-button' onClick={goBack}>\r\n                                Kembali ke Keranjang\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartCancel","D:\\PIKAPP\\pikapp-frontend\\src\\ScrollToTop.js",[],{"ruleId":"767","replacedBy":"768"},{"ruleId":"769","replacedBy":"770"},{"ruleId":"771","severity":1,"message":"772","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":71,"column":16,"nodeType":"777","messageId":"778","endLine":71,"endColumn":18},{"ruleId":"771","severity":1,"message":"779","line":84,"column":24,"nodeType":"773","messageId":"774","endLine":84,"endColumn":37},{"ruleId":"771","severity":1,"message":"780","line":1,"column":28,"nodeType":"773","messageId":"774","endLine":1,"endColumn":34},{"ruleId":"781","severity":1,"message":"782","line":30,"column":6,"nodeType":"783","endLine":30,"endColumn":8,"suggestions":"784"},{"ruleId":"771","severity":1,"message":"785","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":18},{"ruleId":"781","severity":1,"message":"786","line":17,"column":8,"nodeType":"783","endLine":17,"endColumn":10,"suggestions":"787"},{"ruleId":"771","severity":1,"message":"780","line":1,"column":28,"nodeType":"773","messageId":"774","endLine":1,"endColumn":34},{"ruleId":"781","severity":1,"message":"782","line":21,"column":8,"nodeType":"783","endLine":21,"endColumn":10,"suggestions":"788"},{"ruleId":"767","replacedBy":"789"},{"ruleId":"769","replacedBy":"790"},{"ruleId":"771","severity":1,"message":"772","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"791","line":17,"column":26,"nodeType":"773","messageId":"774","endLine":17,"endColumn":41},{"ruleId":"771","severity":1,"message":"792","line":40,"column":11,"nodeType":"773","messageId":"774","endLine":40,"endColumn":28},{"ruleId":"771","severity":1,"message":"793","line":44,"column":11,"nodeType":"773","messageId":"774","endLine":44,"endColumn":29},{"ruleId":"794","severity":1,"message":"795","line":81,"column":29,"nodeType":"796","endLine":81,"endColumn":89},{"ruleId":"794","severity":1,"message":"795","line":98,"column":25,"nodeType":"796","endLine":98,"endColumn":76},{"ruleId":"794","severity":1,"message":"795","line":106,"column":29,"nodeType":"796","endLine":106,"endColumn":86},{"ruleId":"794","severity":1,"message":"795","line":123,"column":25,"nodeType":"796","endLine":123,"endColumn":76},{"ruleId":"771","severity":1,"message":"772","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"780","line":1,"column":28,"nodeType":"773","messageId":"774","endLine":1,"endColumn":34},{"ruleId":"771","severity":1,"message":"797","line":5,"column":10,"nodeType":"773","messageId":"774","endLine":5,"endColumn":19},{"ruleId":"771","severity":1,"message":"798","line":13,"column":11,"nodeType":"773","messageId":"774","endLine":13,"endColumn":19},{"ruleId":"771","severity":1,"message":"799","line":21,"column":11,"nodeType":"773","messageId":"774","endLine":21,"endColumn":27},{"ruleId":"771","severity":1,"message":"800","line":22,"column":11,"nodeType":"773","messageId":"774","endLine":22,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":79,"column":25,"nodeType":"777","messageId":"778","endLine":79,"endColumn":27},{"ruleId":"775","severity":1,"message":"776","line":80,"column":28,"nodeType":"777","messageId":"778","endLine":80,"endColumn":30},{"ruleId":"775","severity":1,"message":"776","line":93,"column":41,"nodeType":"777","messageId":"778","endLine":93,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":93,"column":75,"nodeType":"777","messageId":"778","endLine":93,"endColumn":77},{"ruleId":"775","severity":1,"message":"776","line":95,"column":47,"nodeType":"777","messageId":"778","endLine":95,"endColumn":49},{"ruleId":"775","severity":1,"message":"776","line":95,"column":80,"nodeType":"777","messageId":"778","endLine":95,"endColumn":82},{"ruleId":"781","severity":1,"message":"801","line":110,"column":8,"nodeType":"783","endLine":110,"endColumn":10,"suggestions":"802"},{"ruleId":"775","severity":1,"message":"776","line":119,"column":24,"nodeType":"777","messageId":"778","endLine":119,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":120,"column":24,"nodeType":"777","messageId":"778","endLine":120,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":122,"column":30,"nodeType":"777","messageId":"778","endLine":122,"endColumn":32},{"ruleId":"775","severity":1,"message":"776","line":124,"column":30,"nodeType":"777","messageId":"778","endLine":124,"endColumn":32},{"ruleId":"775","severity":1,"message":"776","line":131,"column":24,"nodeType":"777","messageId":"778","endLine":131,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":132,"column":29,"nodeType":"777","messageId":"778","endLine":132,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":134,"column":35,"nodeType":"777","messageId":"778","endLine":134,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":139,"column":30,"nodeType":"777","messageId":"778","endLine":139,"endColumn":32},{"ruleId":"775","severity":1,"message":"776","line":140,"column":29,"nodeType":"777","messageId":"778","endLine":140,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":142,"column":35,"nodeType":"777","messageId":"778","endLine":142,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":147,"column":30,"nodeType":"777","messageId":"778","endLine":147,"endColumn":32},{"ruleId":"775","severity":1,"message":"776","line":148,"column":29,"nodeType":"777","messageId":"778","endLine":148,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":150,"column":35,"nodeType":"777","messageId":"778","endLine":150,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":156,"column":29,"nodeType":"777","messageId":"778","endLine":156,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":158,"column":35,"nodeType":"777","messageId":"778","endLine":158,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":171,"column":24,"nodeType":"777","messageId":"778","endLine":171,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":172,"column":24,"nodeType":"777","messageId":"778","endLine":172,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":180,"column":24,"nodeType":"777","messageId":"778","endLine":180,"endColumn":26},{"ruleId":"775","severity":1,"message":"776","line":181,"column":29,"nodeType":"777","messageId":"778","endLine":181,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":183,"column":35,"nodeType":"777","messageId":"778","endLine":183,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":190,"column":29,"nodeType":"777","messageId":"778","endLine":190,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":192,"column":35,"nodeType":"777","messageId":"778","endLine":192,"endColumn":37},{"ruleId":"775","severity":1,"message":"776","line":288,"column":67,"nodeType":"777","messageId":"778","endLine":288,"endColumn":69},{"ruleId":"775","severity":1,"message":"776","line":288,"column":100,"nodeType":"777","messageId":"778","endLine":288,"endColumn":102},{"ruleId":"775","severity":1,"message":"776","line":289,"column":88,"nodeType":"777","messageId":"778","endLine":289,"endColumn":90},{"ruleId":"775","severity":1,"message":"776","line":289,"column":120,"nodeType":"777","messageId":"778","endLine":289,"endColumn":122},{"ruleId":"775","severity":1,"message":"776","line":289,"column":153,"nodeType":"777","messageId":"778","endLine":289,"endColumn":155},{"ruleId":"775","severity":1,"message":"776","line":329,"column":67,"nodeType":"777","messageId":"778","endLine":329,"endColumn":69},{"ruleId":"775","severity":1,"message":"776","line":329,"column":100,"nodeType":"777","messageId":"778","endLine":329,"endColumn":102},{"ruleId":"775","severity":1,"message":"776","line":330,"column":88,"nodeType":"777","messageId":"778","endLine":330,"endColumn":90},{"ruleId":"775","severity":1,"message":"776","line":330,"column":120,"nodeType":"777","messageId":"778","endLine":330,"endColumn":122},{"ruleId":"775","severity":1,"message":"776","line":330,"column":153,"nodeType":"777","messageId":"778","endLine":330,"endColumn":155},{"ruleId":"775","severity":1,"message":"803","line":372,"column":27,"nodeType":"777","messageId":"778","endLine":372,"endColumn":29},{"ruleId":"775","severity":1,"message":"776","line":373,"column":30,"nodeType":"777","messageId":"778","endLine":373,"endColumn":32},{"ruleId":"775","severity":1,"message":"776","line":396,"column":36,"nodeType":"777","messageId":"778","endLine":396,"endColumn":38},{"ruleId":"775","severity":1,"message":"776","line":399,"column":53,"nodeType":"777","messageId":"778","endLine":399,"endColumn":55},{"ruleId":"775","severity":1,"message":"776","line":399,"column":86,"nodeType":"777","messageId":"778","endLine":399,"endColumn":88},{"ruleId":"775","severity":1,"message":"776","line":413,"column":90,"nodeType":"777","messageId":"778","endLine":413,"endColumn":92},{"ruleId":"775","severity":1,"message":"776","line":413,"column":122,"nodeType":"777","messageId":"778","endLine":413,"endColumn":124},{"ruleId":"775","severity":1,"message":"776","line":413,"column":155,"nodeType":"777","messageId":"778","endLine":413,"endColumn":157},{"ruleId":"775","severity":1,"message":"776","line":421,"column":38,"nodeType":"777","messageId":"778","endLine":421,"endColumn":40},{"ruleId":"775","severity":1,"message":"776","line":422,"column":129,"nodeType":"777","messageId":"778","endLine":422,"endColumn":131},{"ruleId":"775","severity":1,"message":"776","line":426,"column":129,"nodeType":"777","messageId":"778","endLine":426,"endColumn":131},{"ruleId":"775","severity":1,"message":"776","line":431,"column":104,"nodeType":"777","messageId":"778","endLine":431,"endColumn":106},{"ruleId":"775","severity":1,"message":"776","line":436,"column":38,"nodeType":"777","messageId":"778","endLine":436,"endColumn":40},{"ruleId":"775","severity":1,"message":"776","line":437,"column":106,"nodeType":"777","messageId":"778","endLine":437,"endColumn":108},{"ruleId":"775","severity":1,"message":"776","line":441,"column":106,"nodeType":"777","messageId":"778","endLine":441,"endColumn":108},{"ruleId":"775","severity":1,"message":"776","line":447,"column":90,"nodeType":"777","messageId":"778","endLine":447,"endColumn":92},{"ruleId":"775","severity":1,"message":"776","line":451,"column":57,"nodeType":"777","messageId":"778","endLine":451,"endColumn":59},{"ruleId":"775","severity":1,"message":"776","line":453,"column":57,"nodeType":"777","messageId":"778","endLine":453,"endColumn":59},{"ruleId":"775","severity":1,"message":"776","line":453,"column":90,"nodeType":"777","messageId":"778","endLine":453,"endColumn":92},{"ruleId":"775","severity":1,"message":"776","line":456,"column":47,"nodeType":"777","messageId":"778","endLine":456,"endColumn":49},{"ruleId":"794","severity":1,"message":"795","line":65,"column":37,"nodeType":"796","endLine":65,"endColumn":98},{"ruleId":"771","severity":1,"message":"804","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":27},{"ruleId":"771","severity":1,"message":"805","line":14,"column":12,"nodeType":"773","messageId":"774","endLine":14,"endColumn":28},{"ruleId":"771","severity":1,"message":"806","line":36,"column":11,"nodeType":"773","messageId":"774","endLine":36,"endColumn":29},{"ruleId":"807","severity":1,"message":"808","line":53,"column":26,"nodeType":"809","messageId":"810","endLine":53,"endColumn":45,"fix":"811"},{"ruleId":"812","severity":1,"message":"813","line":58,"column":61,"nodeType":"814","messageId":"815","endLine":58,"endColumn":63},{"ruleId":"775","severity":1,"message":"776","line":59,"column":41,"nodeType":"777","messageId":"778","endLine":59,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":63,"column":41,"nodeType":"777","messageId":"778","endLine":63,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":67,"column":41,"nodeType":"777","messageId":"778","endLine":67,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":71,"column":41,"nodeType":"777","messageId":"778","endLine":71,"endColumn":43},{"ruleId":"771","severity":1,"message":"816","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":21},{"ruleId":"807","severity":1,"message":"808","line":52,"column":26,"nodeType":"809","messageId":"810","endLine":52,"endColumn":45,"fix":"817"},{"ruleId":"812","severity":1,"message":"813","line":57,"column":61,"nodeType":"814","messageId":"815","endLine":57,"endColumn":63},{"ruleId":"775","severity":1,"message":"776","line":58,"column":41,"nodeType":"777","messageId":"778","endLine":58,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":61,"column":41,"nodeType":"777","messageId":"778","endLine":61,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":64,"column":41,"nodeType":"777","messageId":"778","endLine":64,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":68,"column":41,"nodeType":"777","messageId":"778","endLine":68,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":72,"column":41,"nodeType":"777","messageId":"778","endLine":72,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":76,"column":41,"nodeType":"777","messageId":"778","endLine":76,"endColumn":43},{"ruleId":"771","severity":1,"message":"772","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"818","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":21},{"ruleId":"771","severity":1,"message":"819","line":16,"column":21,"nodeType":"773","messageId":"774","endLine":16,"endColumn":31},{"ruleId":"820","severity":1,"message":"821","line":123,"column":33,"nodeType":"796","endLine":123,"endColumn":130},{"ruleId":"771","severity":1,"message":"816","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":21},{"ruleId":"771","severity":1,"message":"822","line":36,"column":12,"nodeType":"773","messageId":"774","endLine":36,"endColumn":19},{"ruleId":"771","severity":1,"message":"823","line":38,"column":12,"nodeType":"773","messageId":"774","endLine":38,"endColumn":23},{"ruleId":"771","severity":1,"message":"824","line":38,"column":25,"nodeType":"773","messageId":"774","endLine":38,"endColumn":39},{"ruleId":"812","severity":1,"message":"813","line":83,"column":49,"nodeType":"814","messageId":"815","endLine":83,"endColumn":51},{"ruleId":"781","severity":1,"message":"825","line":119,"column":8,"nodeType":"783","endLine":119,"endColumn":10,"suggestions":"826"},{"ruleId":"794","severity":1,"message":"795","line":177,"column":25,"nodeType":"796","endLine":177,"endColumn":87},{"ruleId":"771","severity":1,"message":"816","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":21},{"ruleId":"771","severity":1,"message":"827","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":17},{"ruleId":"771","severity":1,"message":"828","line":12,"column":12,"nodeType":"773","messageId":"774","endLine":12,"endColumn":23},{"ruleId":"771","severity":1,"message":"829","line":13,"column":12,"nodeType":"773","messageId":"774","endLine":13,"endColumn":26},{"ruleId":"812","severity":1,"message":"813","line":23,"column":46,"nodeType":"814","messageId":"815","endLine":23,"endColumn":48},{"ruleId":"781","severity":1,"message":"830","line":37,"column":8,"nodeType":"783","endLine":37,"endColumn":21,"suggestions":"831"},{"ruleId":"812","severity":1,"message":"813","line":67,"column":41,"nodeType":"814","messageId":"815","endLine":67,"endColumn":43},{"ruleId":"794","severity":1,"message":"795","line":106,"column":25,"nodeType":"796","endLine":106,"endColumn":135},{"ruleId":"771","severity":1,"message":"832","line":20,"column":11,"nodeType":"773","messageId":"774","endLine":20,"endColumn":14},{"ruleId":"771","severity":1,"message":"833","line":21,"column":9,"nodeType":"773","messageId":"774","endLine":21,"endColumn":16},{"ruleId":"771","severity":1,"message":"834","line":31,"column":12,"nodeType":"773","messageId":"774","endLine":31,"endColumn":22},{"ruleId":"771","severity":1,"message":"835","line":32,"column":12,"nodeType":"773","messageId":"774","endLine":32,"endColumn":24},{"ruleId":"771","severity":1,"message":"791","line":32,"column":26,"nodeType":"773","messageId":"774","endLine":32,"endColumn":41},{"ruleId":"775","severity":1,"message":"776","line":90,"column":52,"nodeType":"777","messageId":"778","endLine":90,"endColumn":54},{"ruleId":"775","severity":1,"message":"776","line":93,"column":47,"nodeType":"777","messageId":"778","endLine":93,"endColumn":49},{"ruleId":"775","severity":1,"message":"776","line":100,"column":55,"nodeType":"777","messageId":"778","endLine":100,"endColumn":57},{"ruleId":"836","severity":1,"message":"837","line":102,"column":25,"nodeType":"773","messageId":"838","endLine":102,"endColumn":33},{"ruleId":"836","severity":1,"message":"839","line":103,"column":25,"nodeType":"773","messageId":"838","endLine":103,"endColumn":34},{"ruleId":"836","severity":1,"message":"837","line":118,"column":25,"nodeType":"773","messageId":"838","endLine":118,"endColumn":33},{"ruleId":"836","severity":1,"message":"839","line":119,"column":25,"nodeType":"773","messageId":"838","endLine":119,"endColumn":34},{"ruleId":"836","severity":1,"message":"837","line":127,"column":25,"nodeType":"773","messageId":"838","endLine":127,"endColumn":33},{"ruleId":"836","severity":1,"message":"839","line":128,"column":25,"nodeType":"773","messageId":"838","endLine":128,"endColumn":34},{"ruleId":"836","severity":1,"message":"839","line":135,"column":25,"nodeType":"773","messageId":"838","endLine":135,"endColumn":34},{"ruleId":"836","severity":1,"message":"840","line":154,"column":17,"nodeType":"773","messageId":"838","endLine":154,"endColumn":22},{"ruleId":"775","severity":1,"message":"776","line":185,"column":40,"nodeType":"777","messageId":"778","endLine":185,"endColumn":42},{"ruleId":"775","severity":1,"message":"776","line":189,"column":46,"nodeType":"777","messageId":"778","endLine":189,"endColumn":48},{"ruleId":"775","severity":1,"message":"776","line":189,"column":86,"nodeType":"777","messageId":"778","endLine":189,"endColumn":88},{"ruleId":"775","severity":1,"message":"776","line":228,"column":56,"nodeType":"777","messageId":"778","endLine":228,"endColumn":58},{"ruleId":"775","severity":1,"message":"776","line":328,"column":52,"nodeType":"777","messageId":"778","endLine":328,"endColumn":54},{"ruleId":"775","severity":1,"message":"776","line":332,"column":47,"nodeType":"777","messageId":"778","endLine":332,"endColumn":49},{"ruleId":"775","severity":1,"message":"776","line":342,"column":55,"nodeType":"777","messageId":"778","endLine":342,"endColumn":57},{"ruleId":"775","severity":1,"message":"776","line":152,"column":42,"nodeType":"777","messageId":"778","endLine":152,"endColumn":44},{"ruleId":"775","severity":1,"message":"776","line":154,"column":54,"nodeType":"777","messageId":"778","endLine":154,"endColumn":56},{"ruleId":"775","severity":1,"message":"803","line":237,"column":37,"nodeType":"777","messageId":"778","endLine":237,"endColumn":39},{"ruleId":"775","severity":1,"message":"776","line":352,"column":18,"nodeType":"777","messageId":"778","endLine":352,"endColumn":20},{"ruleId":"775","severity":1,"message":"776","line":365,"column":16,"nodeType":"777","messageId":"778","endLine":365,"endColumn":18},{"ruleId":"775","severity":1,"message":"776","line":396,"column":45,"nodeType":"777","messageId":"778","endLine":396,"endColumn":47},{"ruleId":"775","severity":1,"message":"776","line":648,"column":20,"nodeType":"777","messageId":"778","endLine":648,"endColumn":22},{"ruleId":"775","severity":1,"message":"776","line":862,"column":39,"nodeType":"777","messageId":"778","endLine":862,"endColumn":41},{"ruleId":"775","severity":1,"message":"776","line":866,"column":37,"nodeType":"777","messageId":"778","endLine":866,"endColumn":39},{"ruleId":"794","severity":1,"message":"795","line":869,"column":13,"nodeType":"796","endLine":869,"endColumn":87},{"ruleId":"775","severity":1,"message":"776","line":873,"column":45,"nodeType":"777","messageId":"778","endLine":873,"endColumn":47},{"ruleId":"794","severity":1,"message":"795","line":876,"column":13,"nodeType":"796","endLine":876,"endColumn":87},{"ruleId":"794","severity":1,"message":"795","line":885,"column":13,"nodeType":"796","endLine":885,"endColumn":87},{"ruleId":"775","severity":1,"message":"776","line":890,"column":46,"nodeType":"777","messageId":"778","endLine":890,"endColumn":48},{"ruleId":"812","severity":1,"message":"841","line":957,"column":41,"nodeType":"814","messageId":"842","endLine":957,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":977,"column":97,"nodeType":"777","messageId":"778","endLine":977,"endColumn":99},{"ruleId":"775","severity":1,"message":"803","line":979,"column":37,"nodeType":"777","messageId":"778","endLine":979,"endColumn":39},{"ruleId":"812","severity":1,"message":"843","line":1021,"column":51,"nodeType":"814","messageId":"842","endLine":1021,"endColumn":53},{"ruleId":"771","severity":1,"message":"844","line":1068,"column":7,"nodeType":"773","messageId":"774","endLine":1068,"endColumn":15},{"ruleId":"775","severity":1,"message":"803","line":1120,"column":31,"nodeType":"777","messageId":"778","endLine":1120,"endColumn":33},{"ruleId":"794","severity":1,"message":"795","line":1159,"column":31,"nodeType":"796","endLine":1159,"endColumn":88},{"ruleId":"794","severity":1,"message":"795","line":1182,"column":31,"nodeType":"796","endLine":1182,"endColumn":88},{"ruleId":"775","severity":1,"message":"803","line":1187,"column":53,"nodeType":"777","messageId":"778","endLine":1187,"endColumn":55},{"ruleId":"794","severity":1,"message":"795","line":1192,"column":33,"nodeType":"796","endLine":1192,"endColumn":120},{"ruleId":"775","severity":1,"message":"803","line":1196,"column":65,"nodeType":"777","messageId":"778","endLine":1196,"endColumn":67},{"ruleId":"775","severity":1,"message":"776","line":1210,"column":191,"nodeType":"777","messageId":"778","endLine":1210,"endColumn":193},{"ruleId":"794","severity":1,"message":"795","line":1219,"column":35,"nodeType":"796","endLine":1219,"endColumn":97},{"ruleId":"794","severity":1,"message":"795","line":1229,"column":64,"nodeType":"796","endLine":1229,"endColumn":151},{"ruleId":"775","severity":1,"message":"776","line":1286,"column":41,"nodeType":"777","messageId":"778","endLine":1286,"endColumn":43},{"ruleId":"771","severity":1,"message":"845","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":16},{"ruleId":"771","severity":1,"message":"846","line":5,"column":8,"nodeType":"773","messageId":"774","endLine":5,"endColumn":19},{"ruleId":"771","severity":1,"message":"847","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":22},{"ruleId":"771","severity":1,"message":"848","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":23},{"ruleId":"771","severity":1,"message":"849","line":10,"column":8,"nodeType":"773","messageId":"774","endLine":10,"endColumn":21},{"ruleId":"771","severity":1,"message":"850","line":12,"column":8,"nodeType":"773","messageId":"774","endLine":12,"endColumn":16},{"ruleId":"771","severity":1,"message":"851","line":18,"column":19,"nodeType":"773","messageId":"774","endLine":18,"endColumn":25},{"ruleId":"771","severity":1,"message":"852","line":20,"column":8,"nodeType":"773","messageId":"774","endLine":20,"endColumn":14},{"ruleId":"771","severity":1,"message":"853","line":64,"column":5,"nodeType":"773","messageId":"774","endLine":64,"endColumn":16},{"ruleId":"775","severity":1,"message":"776","line":215,"column":25,"nodeType":"777","messageId":"778","endLine":215,"endColumn":27},{"ruleId":"775","severity":1,"message":"776","line":450,"column":20,"nodeType":"777","messageId":"778","endLine":450,"endColumn":22},{"ruleId":"775","severity":1,"message":"776","line":462,"column":18,"nodeType":"777","messageId":"778","endLine":462,"endColumn":20},{"ruleId":"775","severity":1,"message":"776","line":494,"column":56,"nodeType":"777","messageId":"778","endLine":494,"endColumn":58},{"ruleId":"775","severity":1,"message":"776","line":500,"column":56,"nodeType":"777","messageId":"778","endLine":500,"endColumn":58},{"ruleId":"771","severity":1,"message":"854","line":515,"column":11,"nodeType":"773","messageId":"774","endLine":515,"endColumn":16},{"ruleId":"775","severity":1,"message":"776","line":1069,"column":41,"nodeType":"777","messageId":"778","endLine":1069,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":1073,"column":39,"nodeType":"777","messageId":"778","endLine":1073,"endColumn":41},{"ruleId":"794","severity":1,"message":"795","line":1076,"column":15,"nodeType":"796","endLine":1076,"endColumn":89},{"ruleId":"775","severity":1,"message":"776","line":1080,"column":47,"nodeType":"777","messageId":"778","endLine":1080,"endColumn":49},{"ruleId":"794","severity":1,"message":"795","line":1083,"column":15,"nodeType":"796","endLine":1083,"endColumn":89},{"ruleId":"794","severity":1,"message":"795","line":1092,"column":15,"nodeType":"796","endLine":1092,"endColumn":89},{"ruleId":"775","severity":1,"message":"776","line":1097,"column":48,"nodeType":"777","messageId":"778","endLine":1097,"endColumn":50},{"ruleId":"812","severity":1,"message":"841","line":1166,"column":43,"nodeType":"814","messageId":"842","endLine":1166,"endColumn":45},{"ruleId":"775","severity":1,"message":"776","line":1193,"column":98,"nodeType":"777","messageId":"778","endLine":1193,"endColumn":100},{"ruleId":"812","severity":1,"message":"843","line":1229,"column":53,"nodeType":"814","messageId":"842","endLine":1229,"endColumn":55},{"ruleId":"771","severity":1,"message":"844","line":1279,"column":9,"nodeType":"773","messageId":"774","endLine":1279,"endColumn":17},{"ruleId":"771","severity":1,"message":"855","line":1284,"column":9,"nodeType":"773","messageId":"774","endLine":1284,"endColumn":21},{"ruleId":"794","severity":1,"message":"795","line":1344,"column":25,"nodeType":"796","endLine":1344,"endColumn":86},{"ruleId":"794","severity":1,"message":"795","line":1349,"column":25,"nodeType":"796","endLine":1349,"endColumn":88},{"ruleId":"794","severity":1,"message":"795","line":1396,"column":29,"nodeType":"796","endLine":1396,"endColumn":92},{"ruleId":"775","severity":1,"message":"803","line":1402,"column":62,"nodeType":"777","messageId":"778","endLine":1402,"endColumn":64},{"ruleId":"775","severity":1,"message":"803","line":1413,"column":74,"nodeType":"777","messageId":"778","endLine":1413,"endColumn":76},{"ruleId":"794","severity":1,"message":"795","line":1452,"column":31,"nodeType":"796","endLine":1452,"endColumn":94},{"ruleId":"794","severity":1,"message":"795","line":1491,"column":29,"nodeType":"796","endLine":1491,"endColumn":92},{"ruleId":"775","severity":1,"message":"803","line":1497,"column":59,"nodeType":"777","messageId":"778","endLine":1497,"endColumn":61},{"ruleId":"794","severity":1,"message":"795","line":1503,"column":35,"nodeType":"796","endLine":1503,"endColumn":112},{"ruleId":"794","severity":1,"message":"795","line":1531,"column":35,"nodeType":"796","endLine":1531,"endColumn":97},{"ruleId":"794","severity":1,"message":"795","line":1541,"column":64,"nodeType":"796","endLine":1541,"endColumn":151},{"ruleId":"771","severity":1,"message":"852","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":14},{"ruleId":"771","severity":1,"message":"851","line":7,"column":29,"nodeType":"773","messageId":"774","endLine":7,"endColumn":35},{"ruleId":"771","severity":1,"message":"856","line":21,"column":10,"nodeType":"773","messageId":"774","endLine":21,"endColumn":18},{"ruleId":"812","severity":1,"message":"843","line":647,"column":36,"nodeType":"814","messageId":"842","endLine":647,"endColumn":38},{"ruleId":"771","severity":1,"message":"857","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":19},{"ruleId":"771","severity":1,"message":"858","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":14},{"ruleId":"771","severity":1,"message":"859","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":16},{"ruleId":"771","severity":1,"message":"851","line":8,"column":29,"nodeType":"773","messageId":"774","endLine":8,"endColumn":35},{"ruleId":"771","severity":1,"message":"852","line":10,"column":8,"nodeType":"773","messageId":"774","endLine":10,"endColumn":14},{"ruleId":"771","severity":1,"message":"860","line":13,"column":8,"nodeType":"773","messageId":"774","endLine":13,"endColumn":16},{"ruleId":"771","severity":1,"message":"861","line":14,"column":8,"nodeType":"773","messageId":"774","endLine":14,"endColumn":20},{"ruleId":"771","severity":1,"message":"862","line":16,"column":8,"nodeType":"773","messageId":"774","endLine":16,"endColumn":17},{"ruleId":"771","severity":1,"message":"863","line":17,"column":8,"nodeType":"773","messageId":"774","endLine":17,"endColumn":19},{"ruleId":"771","severity":1,"message":"864","line":18,"column":8,"nodeType":"773","messageId":"774","endLine":18,"endColumn":20},{"ruleId":"771","severity":1,"message":"865","line":19,"column":8,"nodeType":"773","messageId":"774","endLine":19,"endColumn":16},{"ruleId":"771","severity":1,"message":"866","line":20,"column":8,"nodeType":"773","messageId":"774","endLine":20,"endColumn":20},{"ruleId":"771","severity":1,"message":"867","line":21,"column":8,"nodeType":"773","messageId":"774","endLine":21,"endColumn":17},{"ruleId":"771","severity":1,"message":"868","line":23,"column":8,"nodeType":"773","messageId":"774","endLine":23,"endColumn":16},{"ruleId":"771","severity":1,"message":"869","line":24,"column":8,"nodeType":"773","messageId":"774","endLine":24,"endColumn":17},{"ruleId":"771","severity":1,"message":"870","line":26,"column":8,"nodeType":"773","messageId":"774","endLine":26,"endColumn":18},{"ruleId":"771","severity":1,"message":"871","line":28,"column":8,"nodeType":"773","messageId":"774","endLine":28,"endColumn":23},{"ruleId":"771","severity":1,"message":"872","line":32,"column":32,"nodeType":"773","messageId":"774","endLine":32,"endColumn":45},{"ruleId":"771","severity":1,"message":"873","line":32,"column":47,"nodeType":"773","messageId":"774","endLine":32,"endColumn":55},{"ruleId":"771","severity":1,"message":"856","line":35,"column":10,"nodeType":"773","messageId":"774","endLine":35,"endColumn":18},{"ruleId":"771","severity":1,"message":"874","line":36,"column":10,"nodeType":"773","messageId":"774","endLine":36,"endColumn":20},{"ruleId":"775","severity":1,"message":"776","line":299,"column":39,"nodeType":"777","messageId":"778","endLine":299,"endColumn":41},{"ruleId":"775","severity":1,"message":"776","line":329,"column":39,"nodeType":"777","messageId":"778","endLine":329,"endColumn":41},{"ruleId":"775","severity":1,"message":"776","line":405,"column":51,"nodeType":"777","messageId":"778","endLine":405,"endColumn":53},{"ruleId":"775","severity":1,"message":"776","line":411,"column":58,"nodeType":"777","messageId":"778","endLine":411,"endColumn":60},{"ruleId":"775","severity":1,"message":"776","line":433,"column":51,"nodeType":"777","messageId":"778","endLine":433,"endColumn":53},{"ruleId":"775","severity":1,"message":"776","line":439,"column":58,"nodeType":"777","messageId":"778","endLine":439,"endColumn":60},{"ruleId":"775","severity":1,"message":"776","line":554,"column":20,"nodeType":"777","messageId":"778","endLine":554,"endColumn":22},{"ruleId":"775","severity":1,"message":"776","line":568,"column":21,"nodeType":"777","messageId":"778","endLine":568,"endColumn":23},{"ruleId":"771","severity":1,"message":"875","line":640,"column":11,"nodeType":"773","messageId":"774","endLine":640,"endColumn":16},{"ruleId":"775","severity":1,"message":"776","line":980,"column":31,"nodeType":"777","messageId":"778","endLine":980,"endColumn":33},{"ruleId":"771","severity":1,"message":"876","line":1010,"column":5,"nodeType":"773","messageId":"774","endLine":1010,"endColumn":18},{"ruleId":"775","severity":1,"message":"776","line":1032,"column":61,"nodeType":"777","messageId":"778","endLine":1032,"endColumn":63},{"ruleId":"775","severity":1,"message":"776","line":1089,"column":55,"nodeType":"777","messageId":"778","endLine":1089,"endColumn":57},{"ruleId":"775","severity":1,"message":"776","line":1134,"column":55,"nodeType":"777","messageId":"778","endLine":1134,"endColumn":57},{"ruleId":"794","severity":1,"message":"795","line":1266,"column":19,"nodeType":"796","endLine":1266,"endColumn":78},{"ruleId":"775","severity":1,"message":"776","line":1330,"column":39,"nodeType":"777","messageId":"778","endLine":1330,"endColumn":41},{"ruleId":"877","severity":1,"message":"878","line":1372,"column":3,"nodeType":"879","messageId":"778","endLine":1398,"endColumn":4},{"ruleId":"775","severity":1,"message":"776","line":1401,"column":39,"nodeType":"777","messageId":"778","endLine":1401,"endColumn":41},{"ruleId":"775","severity":1,"message":"776","line":1405,"column":37,"nodeType":"777","messageId":"778","endLine":1405,"endColumn":39},{"ruleId":"794","severity":1,"message":"795","line":1408,"column":13,"nodeType":"796","endLine":1408,"endColumn":87},{"ruleId":"775","severity":1,"message":"776","line":1412,"column":45,"nodeType":"777","messageId":"778","endLine":1412,"endColumn":47},{"ruleId":"794","severity":1,"message":"795","line":1415,"column":13,"nodeType":"796","endLine":1415,"endColumn":87},{"ruleId":"794","severity":1,"message":"795","line":1424,"column":13,"nodeType":"796","endLine":1424,"endColumn":87},{"ruleId":"775","severity":1,"message":"776","line":1429,"column":46,"nodeType":"777","messageId":"778","endLine":1429,"endColumn":48},{"ruleId":"794","severity":1,"message":"795","line":1490,"column":108,"nodeType":"796","endLine":1490,"endColumn":161},{"ruleId":"794","severity":1,"message":"795","line":1499,"column":108,"nodeType":"796","endLine":1499,"endColumn":161},{"ruleId":"794","severity":1,"message":"795","line":1537,"column":13,"nodeType":"796","endLine":1537,"endColumn":72},{"ruleId":"794","severity":1,"message":"795","line":1544,"column":17,"nodeType":"796","endLine":1544,"endColumn":86},{"ruleId":"794","severity":1,"message":"795","line":1550,"column":17,"nodeType":"796","endLine":1550,"endColumn":86},{"ruleId":"794","severity":1,"message":"795","line":1559,"column":15,"nodeType":"796","endLine":1572,"endColumn":17},{"ruleId":"775","severity":1,"message":"776","line":1565,"column":51,"nodeType":"777","messageId":"778","endLine":1565,"endColumn":53},{"ruleId":"794","severity":1,"message":"795","line":1612,"column":23,"nodeType":"796","endLine":1612,"endColumn":81},{"ruleId":"775","severity":1,"message":"803","line":1629,"column":49,"nodeType":"777","messageId":"778","endLine":1629,"endColumn":51},{"ruleId":"775","severity":1,"message":"776","line":1630,"column":111,"nodeType":"777","messageId":"778","endLine":1630,"endColumn":113},{"ruleId":"775","severity":1,"message":"776","line":1630,"column":179,"nodeType":"777","messageId":"778","endLine":1630,"endColumn":181},{"ruleId":"794","severity":1,"message":"795","line":1720,"column":21,"nodeType":"796","endLine":1720,"endColumn":79},{"ruleId":"771","severity":1,"message":"880","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":22},{"ruleId":"771","severity":1,"message":"852","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":14},{"ruleId":"771","severity":1,"message":"851","line":7,"column":29,"nodeType":"773","messageId":"774","endLine":7,"endColumn":35},{"ruleId":"771","severity":1,"message":"881","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":15},{"ruleId":"771","severity":1,"message":"847","line":11,"column":8,"nodeType":"773","messageId":"774","endLine":11,"endColumn":22},{"ruleId":"771","severity":1,"message":"882","line":12,"column":8,"nodeType":"773","messageId":"774","endLine":12,"endColumn":24},{"ruleId":"771","severity":1,"message":"818","line":13,"column":8,"nodeType":"773","messageId":"774","endLine":13,"endColumn":21},{"ruleId":"771","severity":1,"message":"883","line":14,"column":8,"nodeType":"773","messageId":"774","endLine":14,"endColumn":22},{"ruleId":"771","severity":1,"message":"884","line":19,"column":8,"nodeType":"773","messageId":"774","endLine":19,"endColumn":18},{"ruleId":"771","severity":1,"message":"885","line":20,"column":8,"nodeType":"773","messageId":"774","endLine":20,"endColumn":23},{"ruleId":"771","severity":1,"message":"856","line":22,"column":10,"nodeType":"773","messageId":"774","endLine":22,"endColumn":18},{"ruleId":"771","severity":1,"message":"886","line":167,"column":9,"nodeType":"773","messageId":"774","endLine":167,"endColumn":19},{"ruleId":"771","severity":1,"message":"887","line":404,"column":9,"nodeType":"773","messageId":"774","endLine":404,"endColumn":21},{"ruleId":"812","severity":1,"message":"843","line":419,"column":36,"nodeType":"814","messageId":"842","endLine":419,"endColumn":38},{"ruleId":"771","severity":1,"message":"888","line":628,"column":11,"nodeType":"773","messageId":"774","endLine":628,"endColumn":22},{"ruleId":"771","severity":1,"message":"889","line":628,"column":24,"nodeType":"773","messageId":"774","endLine":628,"endColumn":34},{"ruleId":"771","severity":1,"message":"851","line":2,"column":19,"nodeType":"773","messageId":"774","endLine":2,"endColumn":25},{"ruleId":"771","severity":1,"message":"890","line":236,"column":13,"nodeType":"773","messageId":"774","endLine":236,"endColumn":28},{"ruleId":"775","severity":1,"message":"776","line":89,"column":43,"nodeType":"777","messageId":"778","endLine":89,"endColumn":45},{"ruleId":"771","severity":1,"message":"851","line":2,"column":19,"nodeType":"773","messageId":"774","endLine":2,"endColumn":25},{"ruleId":"771","severity":1,"message":"883","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":22},{"ruleId":"771","severity":1,"message":"891","line":9,"column":8,"nodeType":"773","messageId":"774","endLine":9,"endColumn":18},{"ruleId":"771","severity":1,"message":"892","line":10,"column":8,"nodeType":"773","messageId":"774","endLine":10,"endColumn":20},{"ruleId":"771","severity":1,"message":"884","line":14,"column":8,"nodeType":"773","messageId":"774","endLine":14,"endColumn":18},{"ruleId":"771","severity":1,"message":"893","line":16,"column":5,"nodeType":"773","messageId":"774","endLine":16,"endColumn":13},{"ruleId":"771","severity":1,"message":"894","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"851","line":2,"column":36,"nodeType":"773","messageId":"774","endLine":2,"endColumn":42},{"ruleId":"771","severity":1,"message":"883","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":22},{"ruleId":"771","severity":1,"message":"891","line":9,"column":8,"nodeType":"773","messageId":"774","endLine":9,"endColumn":18},{"ruleId":"771","severity":1,"message":"892","line":10,"column":8,"nodeType":"773","messageId":"774","endLine":10,"endColumn":20},{"ruleId":"771","severity":1,"message":"895","line":15,"column":8,"nodeType":"773","messageId":"774","endLine":15,"endColumn":20},{"ruleId":"771","severity":1,"message":"896","line":106,"column":13,"nodeType":"773","messageId":"774","endLine":106,"endColumn":17},{"ruleId":"794","severity":1,"message":"795","line":282,"column":65,"nodeType":"796","endLine":282,"endColumn":208},{"ruleId":"771","severity":1,"message":"851","line":11,"column":19,"nodeType":"773","messageId":"774","endLine":11,"endColumn":25},{"ruleId":"775","severity":1,"message":"803","line":63,"column":25,"nodeType":"777","messageId":"778","endLine":63,"endColumn":27},{"ruleId":"794","severity":1,"message":"795","line":522,"column":49,"nodeType":"796","endLine":522,"endColumn":141},{"ruleId":"794","severity":1,"message":"795","line":693,"column":49,"nodeType":"796","endLine":693,"endColumn":141},{"ruleId":"771","severity":1,"message":"897","line":8,"column":5,"nodeType":"773","messageId":"774","endLine":8,"endColumn":15},{"ruleId":"771","severity":1,"message":"898","line":12,"column":5,"nodeType":"773","messageId":"774","endLine":12,"endColumn":17},{"ruleId":"771","severity":1,"message":"899","line":15,"column":5,"nodeType":"773","messageId":"774","endLine":15,"endColumn":18},{"ruleId":"771","severity":1,"message":"900","line":9,"column":8,"nodeType":"773","messageId":"774","endLine":9,"endColumn":18},{"ruleId":"771","severity":1,"message":"901","line":15,"column":11,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"771","severity":1,"message":"902","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":21},{"ruleId":"771","severity":1,"message":"903","line":19,"column":23,"nodeType":"773","messageId":"774","endLine":19,"endColumn":35},{"ruleId":"771","severity":1,"message":"904","line":30,"column":11,"nodeType":"773","messageId":"774","endLine":30,"endColumn":20},{"ruleId":"771","severity":1,"message":"905","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":20},{"ruleId":"771","severity":1,"message":"906","line":14,"column":8,"nodeType":"773","messageId":"774","endLine":14,"endColumn":14},{"ruleId":"807","severity":1,"message":"808","line":134,"column":26,"nodeType":"809","messageId":"810","endLine":134,"endColumn":45,"fix":"907"},{"ruleId":"812","severity":1,"message":"813","line":148,"column":61,"nodeType":"814","messageId":"815","endLine":148,"endColumn":63},{"ruleId":"775","severity":1,"message":"776","line":149,"column":41,"nodeType":"777","messageId":"778","endLine":149,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":152,"column":41,"nodeType":"777","messageId":"778","endLine":152,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":155,"column":41,"nodeType":"777","messageId":"778","endLine":155,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":159,"column":41,"nodeType":"777","messageId":"778","endLine":159,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":163,"column":41,"nodeType":"777","messageId":"778","endLine":163,"endColumn":43},{"ruleId":"775","severity":1,"message":"776","line":167,"column":41,"nodeType":"777","messageId":"778","endLine":167,"endColumn":43},{"ruleId":"771","severity":1,"message":"908","line":234,"column":13,"nodeType":"773","messageId":"774","endLine":234,"endColumn":19},{"ruleId":"771","severity":1,"message":"909","line":234,"column":21,"nodeType":"773","messageId":"774","endLine":234,"endColumn":33},{"ruleId":"771","severity":1,"message":"910","line":234,"column":35,"nodeType":"773","messageId":"774","endLine":234,"endColumn":46},{"ruleId":"771","severity":1,"message":"911","line":234,"column":48,"nodeType":"773","messageId":"774","endLine":234,"endColumn":54},{"ruleId":"912","severity":1,"message":"913","line":43,"column":1,"nodeType":"914","endLine":135,"endColumn":2},{"ruleId":"912","severity":1,"message":"913","line":11,"column":1,"nodeType":"914","endLine":30,"endColumn":2},{"ruleId":"912","severity":1,"message":"913","line":22,"column":1,"nodeType":"914","endLine":67,"endColumn":2},{"ruleId":"771","severity":1,"message":"915","line":1,"column":16,"nodeType":"773","messageId":"774","endLine":1,"endColumn":24},{"ruleId":"771","severity":1,"message":"900","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":18},{"ruleId":"771","severity":1,"message":"916","line":9,"column":8,"nodeType":"773","messageId":"774","endLine":9,"endColumn":21},{"ruleId":"771","severity":1,"message":"901","line":19,"column":11,"nodeType":"773","messageId":"774","endLine":19,"endColumn":19},{"ruleId":"771","severity":1,"message":"903","line":28,"column":23,"nodeType":"773","messageId":"774","endLine":28,"endColumn":35},{"ruleId":"771","severity":1,"message":"917","line":29,"column":12,"nodeType":"773","messageId":"774","endLine":29,"endColumn":26},{"ruleId":"771","severity":1,"message":"918","line":29,"column":28,"nodeType":"773","messageId":"774","endLine":29,"endColumn":45},{"ruleId":"771","severity":1,"message":"919","line":31,"column":12,"nodeType":"773","messageId":"774","endLine":31,"endColumn":15},{"ruleId":"771","severity":1,"message":"920","line":31,"column":17,"nodeType":"773","messageId":"774","endLine":31,"endColumn":23},{"ruleId":"771","severity":1,"message":"921","line":32,"column":12,"nodeType":"773","messageId":"774","endLine":32,"endColumn":15},{"ruleId":"771","severity":1,"message":"922","line":32,"column":17,"nodeType":"773","messageId":"774","endLine":32,"endColumn":23},{"ruleId":"771","severity":1,"message":"904","line":48,"column":11,"nodeType":"773","messageId":"774","endLine":48,"endColumn":20},{"ruleId":"771","severity":1,"message":"923","line":64,"column":11,"nodeType":"773","messageId":"774","endLine":64,"endColumn":26},{"ruleId":"771","severity":1,"message":"924","line":107,"column":11,"nodeType":"773","messageId":"774","endLine":107,"endColumn":24},{"ruleId":"771","severity":1,"message":"925","line":12,"column":8,"nodeType":"773","messageId":"774","endLine":12,"endColumn":12},{"ruleId":"771","severity":1,"message":"902","line":22,"column":12,"nodeType":"773","messageId":"774","endLine":22,"endColumn":21},{"ruleId":"771","severity":1,"message":"903","line":22,"column":23,"nodeType":"773","messageId":"774","endLine":22,"endColumn":35},{"ruleId":"771","severity":1,"message":"904","line":34,"column":11,"nodeType":"773","messageId":"774","endLine":34,"endColumn":20},{"ruleId":"794","severity":1,"message":"795","line":36,"column":33,"nodeType":"796","endLine":36,"endColumn":74},{"ruleId":"771","severity":1,"message":"926","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":14},{"ruleId":"771","severity":1,"message":"927","line":5,"column":8,"nodeType":"773","messageId":"774","endLine":5,"endColumn":16},{"ruleId":"771","severity":1,"message":"868","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":16},{"ruleId":"771","severity":1,"message":"881","line":12,"column":8,"nodeType":"773","messageId":"774","endLine":12,"endColumn":15},{"ruleId":"771","severity":1,"message":"928","line":28,"column":11,"nodeType":"773","messageId":"774","endLine":28,"endColumn":19},{"ruleId":"771","severity":1,"message":"929","line":165,"column":11,"nodeType":"773","messageId":"774","endLine":165,"endColumn":24},{"ruleId":"771","severity":1,"message":"930","line":189,"column":11,"nodeType":"773","messageId":"774","endLine":189,"endColumn":26},{"ruleId":"812","severity":1,"message":"843","line":77,"column":66,"nodeType":"814","messageId":"842","endLine":77,"endColumn":68},{"ruleId":"775","severity":1,"message":"776","line":92,"column":53,"nodeType":"777","messageId":"778","endLine":92,"endColumn":55},{"ruleId":"820","severity":1,"message":"821","line":183,"column":49,"nodeType":"796","endLine":183,"endColumn":146},{"ruleId":"771","severity":1,"message":"931","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":17},{"ruleId":"771","severity":1,"message":"932","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":18},{"ruleId":"771","severity":1,"message":"902","line":20,"column":12,"nodeType":"773","messageId":"774","endLine":20,"endColumn":21},{"ruleId":"771","severity":1,"message":"903","line":20,"column":23,"nodeType":"773","messageId":"774","endLine":20,"endColumn":35},{"ruleId":"771","severity":1,"message":"904","line":30,"column":11,"nodeType":"773","messageId":"774","endLine":30,"endColumn":20},{"ruleId":"771","severity":1,"message":"931","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":17},{"ruleId":"771","severity":1,"message":"932","line":7,"column":8,"nodeType":"773","messageId":"774","endLine":7,"endColumn":18},{"ruleId":"771","severity":1,"message":"933","line":11,"column":8,"nodeType":"773","messageId":"774","endLine":11,"endColumn":19},{"ruleId":"771","severity":1,"message":"934","line":21,"column":12,"nodeType":"773","messageId":"774","endLine":21,"endColumn":23},{"ruleId":"771","severity":1,"message":"935","line":21,"column":25,"nodeType":"773","messageId":"774","endLine":21,"endColumn":33},{"ruleId":"771","severity":1,"message":"902","line":24,"column":12,"nodeType":"773","messageId":"774","endLine":24,"endColumn":21},{"ruleId":"771","severity":1,"message":"903","line":24,"column":23,"nodeType":"773","messageId":"774","endLine":24,"endColumn":35},{"ruleId":"771","severity":1,"message":"904","line":36,"column":11,"nodeType":"773","messageId":"774","endLine":36,"endColumn":20},{"ruleId":"771","severity":1,"message":"936","line":157,"column":17,"nodeType":"773","messageId":"774","endLine":157,"endColumn":25},{"ruleId":"771","severity":1,"message":"937","line":158,"column":17,"nodeType":"773","messageId":"774","endLine":158,"endColumn":26},{"ruleId":"771","severity":1,"message":"931","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":17},{"ruleId":"771","severity":1,"message":"932","line":7,"column":8,"nodeType":"773","messageId":"774","endLine":7,"endColumn":18},{"ruleId":"771","severity":1,"message":"906","line":16,"column":8,"nodeType":"773","messageId":"774","endLine":16,"endColumn":14},{"ruleId":"771","severity":1,"message":"902","line":27,"column":12,"nodeType":"773","messageId":"774","endLine":27,"endColumn":21},{"ruleId":"771","severity":1,"message":"903","line":27,"column":23,"nodeType":"773","messageId":"774","endLine":27,"endColumn":35},{"ruleId":"771","severity":1,"message":"938","line":29,"column":12,"nodeType":"773","messageId":"774","endLine":29,"endColumn":23},{"ruleId":"771","severity":1,"message":"904","line":41,"column":11,"nodeType":"773","messageId":"774","endLine":41,"endColumn":20},{"ruleId":"771","severity":1,"message":"936","line":124,"column":21,"nodeType":"773","messageId":"774","endLine":124,"endColumn":29},{"ruleId":"771","severity":1,"message":"937","line":125,"column":21,"nodeType":"773","messageId":"774","endLine":125,"endColumn":30},{"ruleId":"771","severity":1,"message":"939","line":153,"column":11,"nodeType":"773","messageId":"774","endLine":153,"endColumn":31},{"ruleId":"771","severity":1,"message":"940","line":170,"column":11,"nodeType":"773","messageId":"774","endLine":170,"endColumn":30},{"ruleId":"771","severity":1,"message":"931","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":17},{"ruleId":"771","severity":1,"message":"932","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":18},{"ruleId":"771","severity":1,"message":"900","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":18},{"ruleId":"771","severity":1,"message":"916","line":9,"column":8,"nodeType":"773","messageId":"774","endLine":9,"endColumn":21},{"ruleId":"771","severity":1,"message":"902","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":21},{"ruleId":"771","severity":1,"message":"903","line":19,"column":23,"nodeType":"773","messageId":"774","endLine":19,"endColumn":35},{"ruleId":"771","severity":1,"message":"904","line":29,"column":11,"nodeType":"773","messageId":"774","endLine":29,"endColumn":20},{"ruleId":"771","severity":1,"message":"924","line":61,"column":11,"nodeType":"773","messageId":"774","endLine":61,"endColumn":24},{"ruleId":"771","severity":1,"message":"941","line":27,"column":12,"nodeType":"773","messageId":"774","endLine":27,"endColumn":28},{"ruleId":"781","severity":1,"message":"942","line":187,"column":8,"nodeType":"783","endLine":187,"endColumn":10,"suggestions":"943"},{"ruleId":"781","severity":1,"message":"944","line":327,"column":8,"nodeType":"783","endLine":327,"endColumn":31,"suggestions":"945"},{"ruleId":"771","severity":1,"message":"780","line":2,"column":38,"nodeType":"773","messageId":"774","endLine":2,"endColumn":44},{"ruleId":"771","severity":1,"message":"946","line":16,"column":26,"nodeType":"773","messageId":"774","endLine":16,"endColumn":41},{"ruleId":"771","severity":1,"message":"947","line":17,"column":26,"nodeType":"773","messageId":"774","endLine":17,"endColumn":41},{"ruleId":"771","severity":1,"message":"948","line":18,"column":29,"nodeType":"773","messageId":"774","endLine":18,"endColumn":47},{"ruleId":"775","severity":1,"message":"776","line":56,"column":26,"nodeType":"777","messageId":"778","endLine":56,"endColumn":28},{"ruleId":"775","severity":1,"message":"776","line":58,"column":32,"nodeType":"777","messageId":"778","endLine":58,"endColumn":34},{"ruleId":"775","severity":1,"message":"776","line":60,"column":32,"nodeType":"777","messageId":"778","endLine":60,"endColumn":34},{"ruleId":"775","severity":1,"message":"776","line":62,"column":32,"nodeType":"777","messageId":"778","endLine":62,"endColumn":34},{"ruleId":"775","severity":1,"message":"776","line":64,"column":32,"nodeType":"777","messageId":"778","endLine":64,"endColumn":34},{"ruleId":"775","severity":1,"message":"776","line":66,"column":32,"nodeType":"777","messageId":"778","endLine":66,"endColumn":34},{"ruleId":"775","severity":1,"message":"776","line":68,"column":32,"nodeType":"777","messageId":"778","endLine":68,"endColumn":34},{"ruleId":"775","severity":1,"message":"776","line":73,"column":31,"nodeType":"777","messageId":"778","endLine":73,"endColumn":33},{"ruleId":"775","severity":1,"message":"776","line":73,"column":60,"nodeType":"777","messageId":"778","endLine":73,"endColumn":62},{"ruleId":"775","severity":1,"message":"776","line":75,"column":37,"nodeType":"777","messageId":"778","endLine":75,"endColumn":39},{"ruleId":"775","severity":1,"message":"776","line":75,"column":66,"nodeType":"777","messageId":"778","endLine":75,"endColumn":68},{"ruleId":"771","severity":1,"message":"949","line":89,"column":11,"nodeType":"773","messageId":"774","endLine":89,"endColumn":21},{"ruleId":"775","severity":1,"message":"803","line":95,"column":39,"nodeType":"777","messageId":"778","endLine":95,"endColumn":41},{"ruleId":"771","severity":1,"message":"915","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"794","severity":1,"message":"795","line":29,"column":37,"nodeType":"796","endLine":29,"endColumn":91},"no-native-reassign",["950"],"no-negated-in-lhs",["951"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTokenFound' is assigned a value but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.address'. Either include them or remove the dependency array.","ArrayExpression",["952"],"'secondary_color' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'props.match.params.address', and 'props.match.params.notab'. Either include them or remove the dependency array.",["953"],["954"],["950"],["951"],"'setPickUpChoice' is assigned a value but never used.","'handleShipperName' is assigned a value but never used.","'handleShipperPrice' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useParams' is defined but never used.","'dispatch' is assigned a value but never used.","'declaredShipment' is assigned a value but never used.","'declaredPayment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CartRedu.paymentTitleType', 'CartRedu.pickupTitleType', 'alertStatus.paymentType', 'alertStatus.phoneNumber', 'cartStatus.bizType', 'cartStatus.paymentType', 'cartStatus.totalPayment', 'promoAlert', and 'promoListData'. Either include them or remove the dependency array.",["955"],"Expected '!==' and instead saw '!='.","'CurrentLocationIcon' is defined but never used.","'formattedAddress' is assigned a value but never used.","'setCurrentLocation' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"956","text":"957"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'LocationPoint' is defined but never used.",{"range":"958","text":"957"},"'takeawayColor' is defined but never used.","'setEwallet' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'product' is assigned a value but never used.","'courierlist' is assigned a value but never used.","'setCourierList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CartRedu.lat' and 'CartRedu.lng'. Either include them or remove the dependency array.",["959"],"'GojekLogo' is defined but never used.","'radioStatus' is assigned a value but never used.","'courierChecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CartRedu.courierList' and 'CartRedu.shippingName'. Either include them or remove the dependency array.",["960"],"'ref' is assigned a value but never used.","'history' is assigned a value but never used.","'isTomorrow' is assigned a value but never used.","'pickUpChoice' is assigned a value but never used.","no-redeclare","'openHour' is already defined.","redeclared","'closeHour' is already defined.","'today' is already defined.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'eatImage' is assigned a value but never used.","'bellIcon' is defined but never used.","'profileIcon' is defined but never used.","'ArrowDownColor' is defined but never used.","'ArrowRightWhite' is defined but never used.","'checklistLogo' is defined but never used.","'InfoIcon' is defined but never used.","'secret' is defined but never used.","'sha256' is defined but never used.","'phoneNumber' is assigned a value but never used.","'noTab' is assigned a value but never used.","'paymentImage' is assigned a value but never used.","'Redirect' is defined but never used.","'prominent' is defined but never used.","'rgbHex' is defined but never used.","'cartIcon' is defined but never used.","'Storeimg' is defined but never used.","'Productimage' is defined but never used.","'NotifIcon' is defined but never used.","'ProfileIcon' is defined but never used.","'OpenHourIcon' is defined but never used.","'CoinIcon' is defined but never used.","'LocationIcon' is defined but never used.","'PhoneIcon' is defined but never used.","'StarIcon' is defined but never used.","'ArrowIcon' is defined but never used.","'HeaderLogo' is defined but never used.","'ProductListIcon' is defined but never used.","'LoadingButton' is defined but never used.","'DoneLoad' is defined but never used.","'useHistory' is defined but never used.","'value' is assigned a value but never used.","'lastScrollTop' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'sendTracking'.","MethodDefinition","'RegisterDialog' is defined but never used.","'Cookies' is defined but never used.","'diningTableColor' is defined but never used.","'CashierPayment' is defined but never used.","'ManualIcon' is defined but never used.","'OrderListStatus' is defined but never used.","'formatDate' is assigned a value but never used.","'currentState' is assigned a value but never used.","'statusIndex' is assigned a value but never used.","'statusList' is assigned a value but never used.","'transactionTime' is assigned a value but never used.","'OvoPayment' is defined but never used.","'PaymentModal' is defined but never used.","'interval' is assigned a value but never used.","'createRef' is defined but never used.","'CourierPhoto' is defined but never used.","'list' is assigned a value but never used.","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'PikaButton' is defined but never used.","'AuthRedu' is assigned a value but never used.","'isCaptcha' is assigned a value but never used.","'setIsCaptcha' is assigned a value but never used.","'backModal' is assigned a value but never used.","'AutoComplete' is defined but never used.","'Button' is defined but never used.",{"range":"961","text":"957"},"'places' is assigned a value but never used.","'mapApiLoaded' is assigned a value but never used.","'mapInstance' is assigned a value but never used.","'mapApi' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'PikaTextField' is defined but never used.","'captchaCounter' is assigned a value but never used.","'setCaptchaCounter' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lon' is assigned a value but never used.","'setLon' is assigned a value but never used.","'showLoginDialog' is assigned a value but never used.","'showPinDialog' is assigned a value but never used.","'Swal' is defined but never used.","'Loader' is defined but never used.","'backLogo' is defined but never used.","'isMobile' is assigned a value but never used.","'openPinDialog' is assigned a value but never used.","'closeAuthDialog' is assigned a value but never used.","'closeLogo' is defined but never used.","'pikappLogo' is defined but never used.","'LoginDialog' is defined but never used.","'loginDialog' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'isLoginStep' is assigned a value but never used.","'showConfirmPinDialog' is assigned a value but never used.","'showForgotPinDialog' is assigned a value but never used.","'indexCheckMandat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["962"],"React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'checkboxData', 'dispatch', 'props.datas.foodListCheckbox', 'props.datas.foodListRadio', 'radioData', 'totalCheckMandat', 'totalRadioMandat', and 'updateDataEdit'. Either include them or remove the dependency array.",["963"],"'setMerchantLogo' is assigned a value but never used.","'setMerchantName' is assigned a value but never used.","'setMerchantAddress' is assigned a value but never used.","'cartButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"964","fix":"968"},{"desc":"969","fix":"970"},[2019,2019],"()",[2272,2272],{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},[3728,3728],{"desc":"975","fix":"976"},{"desc":"977","fix":"978"},"Update the dependencies array to be: [dispatch, props.match.params.address]",{"range":"979","text":"980"},"Update the dependencies array to be: [dispatch, history, props.match.params.address, props.match.params.notab]",{"range":"981","text":"982"},{"range":"983","text":"980"},"Update the dependencies array to be: [CartRedu.paymentTitleType, CartRedu.pickupTitleType, alertStatus.paymentType, alertStatus.phoneNumber, cartStatus.bizType, cartStatus.paymentType, cartStatus.totalPayment, promoAlert, promoListData]",{"range":"984","text":"985"},"Update the dependencies array to be: [CartRedu.lat, CartRedu.lng]",{"range":"986","text":"987"},"Update the dependencies array to be: [CartRedu.courierList, CartRedu.shippingName, courierList]",{"range":"988","text":"989"},"Update the dependencies array to be: [AllRedu.openMenuCart, dispatch, props]",{"range":"990","text":"991"},"Update the dependencies array to be: [radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]",{"range":"992","text":"993"},[1035,1037],"[dispatch, props.match.params.address]",[610,612],"[dispatch, history, props.match.params.address, props.match.params.notab]",[795,797],[5118,5120],"[CartRedu.paymentTitleType, CartRedu.pickupTitleType, alertStatus.paymentType, alertStatus.phoneNumber, cartStatus.bizType, cartStatus.paymentType, cartStatus.totalPayment, promoAlert, promoListData]",[4137,4139],"[CartRedu.lat, CartRedu.lng]",[1694,1707],"[CartRedu.courierList, CartRedu.shippingName, courierList]",[7647,7649],"[AllRedu.openMenuCart, dispatch, props]",[13853,13876],"[radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]"]