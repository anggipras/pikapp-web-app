[{"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\index.js":"1","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\App.js":"2","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Store.js":"3","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProductLayout.js":"4","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartLayout.js":"5","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StatusLayout.js":"6","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\FoodCourtQR.js":"7","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js":"8","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"9","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\OrderDetailLayout.js":"10","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StoreLayout.js":"11","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MerchantQR.js":"12","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\AuthLayout.js":"13","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ManualTransaction.js":"14","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartManualLayout.js":"15","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressInputView.js":"16","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js":"17","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\PickupSelectionView.js":"18","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\ShippingDate\\ShippingDateView.js":"19","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\PaymentSelection\\PaymentMethodView.js":"20","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"21","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"22","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MainNavigation.js":"23","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartManualView.js":"24","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"25","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"26","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js":"27","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Product\\ProductView.js":"28","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"29","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"30","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\OrderDetail\\OrderDetailView.js":"31","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"32","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"33","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js":"34","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\CartReducers.js":"35","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js":"36","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"37","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"38","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js":"39","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"40","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js":"41","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js":"42","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js":"43","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js":"44","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\FailedModal.js":"45","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"46","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js":"47","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"48","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"49","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js":"50","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js":"51","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js":"52","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js":"53","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js":"54","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"55","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\OrderListStatusModal.js":"56","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\firebaseConfig.js":"57","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StatusCartManualLayout.js":"58","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Status\\StatusCartManualView.js":"59"},{"size":547,"mtime":1624263182213,"results":"60","hashOfConfig":"61"},{"size":4994,"mtime":1640832274854,"results":"62","hashOfConfig":"61"},{"size":169,"mtime":1618198598863,"results":"63","hashOfConfig":"61"},{"size":495,"mtime":1638418403057,"results":"64","hashOfConfig":"61"},{"size":532,"mtime":1618198598860,"results":"65","hashOfConfig":"61"},{"size":294,"mtime":1624367220550,"results":"66","hashOfConfig":"61"},{"size":675,"mtime":1622795045329,"results":"67","hashOfConfig":"61"},{"size":367,"mtime":1622647534704,"results":"68","hashOfConfig":"61"},{"size":656,"mtime":1614927845136,"results":"69","hashOfConfig":"61"},{"size":337,"mtime":1624263832386,"results":"70","hashOfConfig":"61"},{"size":1281,"mtime":1638417951385,"results":"71","hashOfConfig":"61"},{"size":1737,"mtime":1621496752942,"results":"72","hashOfConfig":"61"},{"size":2443,"mtime":1618198598859,"results":"73","hashOfConfig":"61"},{"size":1003,"mtime":1638189230340,"results":"74","hashOfConfig":"61"},{"size":349,"mtime":1638333992935,"results":"75","hashOfConfig":"61"},{"size":2430,"mtime":1638419788607,"results":"76","hashOfConfig":"61"},{"size":1858,"mtime":1619013742817,"results":"77","hashOfConfig":"61"},{"size":7120,"mtime":1638514854670,"results":"78","hashOfConfig":"61"},{"size":9848,"mtime":1638863477512,"results":"79","hashOfConfig":"61"},{"size":6836,"mtime":1638514854673,"results":"80","hashOfConfig":"61"},{"size":318,"mtime":1638333440501,"results":"81","hashOfConfig":"61"},{"size":38350,"mtime":1642070825738,"results":"82","hashOfConfig":"61"},{"size":1795,"mtime":1638419568382,"results":"83","hashOfConfig":"61"},{"size":44924,"mtime":1642070958805,"results":"84","hashOfConfig":"61"},{"size":24514,"mtime":1642071641375,"results":"85","hashOfConfig":"61"},{"size":80,"mtime":1614519902089,"results":"86","hashOfConfig":"61"},{"size":35525,"mtime":1642071027786,"results":"87","hashOfConfig":"61"},{"size":57912,"mtime":1642147142945,"results":"88","hashOfConfig":"61"},{"size":13812,"mtime":1637839445457,"results":"89","hashOfConfig":"61"},{"size":831,"mtime":1614519902137,"results":"90","hashOfConfig":"61"},{"size":28870,"mtime":1642071724339,"results":"91","hashOfConfig":"61"},{"size":9046,"mtime":1637839464287,"results":"92","hashOfConfig":"61"},{"size":21488,"mtime":1642070681269,"results":"93","hashOfConfig":"61"},{"size":11319,"mtime":1619014022352,"results":"94","hashOfConfig":"61"},{"size":1570,"mtime":1638933528844,"results":"95","hashOfConfig":"61"},{"size":1047,"mtime":1636963004423,"results":"96","hashOfConfig":"61"},{"size":2249,"mtime":1636963009760,"results":"97","hashOfConfig":"61"},{"size":785,"mtime":1622186261045,"results":"98","hashOfConfig":"61"},{"size":862,"mtime":1618628857384,"results":"99","hashOfConfig":"61"},{"size":10373,"mtime":1625036164266,"results":"100","hashOfConfig":"61"},{"size":1360,"mtime":1621567899912,"results":"101","hashOfConfig":"61"},{"size":22220,"mtime":1637745713307,"results":"102","hashOfConfig":"61"},{"size":11231,"mtime":1619008007918,"results":"103","hashOfConfig":"61"},{"size":2411,"mtime":1623047112725,"results":"104","hashOfConfig":"61"},{"size":1251,"mtime":1634092239715,"results":"105","hashOfConfig":"61"},{"size":991,"mtime":1614927845132,"results":"106","hashOfConfig":"61"},{"size":18158,"mtime":1621505024003,"results":"107","hashOfConfig":"61"},{"size":650,"mtime":1614927845134,"results":"108","hashOfConfig":"61"},{"size":30,"mtime":1614927845139,"results":"109","hashOfConfig":"61"},{"size":15667,"mtime":1624262714999,"results":"110","hashOfConfig":"61"},{"size":32865,"mtime":1621505024006,"results":"111","hashOfConfig":"61"},{"size":8867,"mtime":1621505023998,"results":"112","hashOfConfig":"61"},{"size":6427,"mtime":1619006161594,"results":"113","hashOfConfig":"61"},{"size":12716,"mtime":1624262730327,"results":"114","hashOfConfig":"61"},{"size":1605,"mtime":1641288775108,"results":"115","hashOfConfig":"61"},{"size":2709,"mtime":1625036164269,"results":"116","hashOfConfig":"61"},{"size":498,"mtime":1640313643443,"results":"117","hashOfConfig":"61"},{"size":334,"mtime":1640832073225,"results":"118","hashOfConfig":"61"},{"size":18100,"mtime":1642071681064,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"9dcu7l",{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"122"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\index.js",[],["266","267"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\App.js",["268","269","270"],"import React, { useEffect, useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Asset/scss/App.scss\";\r\nimport AuthLayout from \"./Master/AuthLayout\";\r\nimport ProductLayout from \"./Master/ProductLayout\";\r\nimport CartLayout from \"./Master/CartLayout\";\r\nimport StatusLayout from \"./Master/StatusLayout\";\r\nimport StoreLayout from \"./Master/StoreLayout\";\r\nimport ProfileLayout from \"./Master/ProfileLayout\";\r\nimport MerchantResto from \"./Master/MerchantQR\";\r\nimport FoodCourt from \"./Master/FoodCourtQR\";\r\nimport ResetPin from \"./View/ResetPin/ResetPinView\";\r\nimport OrderConfirmationLayout from \"./Master/OrderConfirmationLayout\";\r\nimport OrderDetailLayout from \"./Master/OrderDetailLayout\";\r\nimport ManualTxn from \"./Master/ManualTransaction\";\r\nimport CartManualLayout from \"./Master/CartManualLayout\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n// import Cookies from \"js-cookie\";\r\nimport { useDispatch } from 'react-redux'\r\nimport PickupSelectionView from \"./View/Cart/AddressSelection/PickupSelectionView\";\r\nimport AddressInputView from \"./View/Cart/AddressSelection/AddressInputView\";\r\nimport ShippingDateView from \"./View/Cart/ShippingDate/ShippingDateView\";\r\nimport PaymentMethodView from \"./View/Cart/PaymentSelection/PaymentMethodView\";\r\nimport StatusCartManualLayout from \"./Master/StatusCartManualLayout\";\r\n\r\nexport var cart = [\r\n    {\r\n        mid: \"\",\r\n        storeName: \"\",\r\n        storeDesc: \"\",\r\n        storeDistance: \"\",\r\n        food: [\r\n            {\r\n                productId: \"\",\r\n                foodName: \"\",\r\n                foodPrice: 0,\r\n                foodAmount: 0,\r\n                foodImage: \"\",\r\n                foodNote: \"\",\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport var counterTime = 0;\r\nexport var timeLeft = null;\r\n\r\nif (localStorage.getItem(\"cart\")) {\r\n    cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n} else {\r\n    localStorage.setItem('cart', JSON.stringify(cart))\r\n}\r\n\r\nif (!localStorage.getItem(\"storeTour\")) {\r\n    localStorage.setItem('storeTour', 1);\r\n    localStorage.setItem('productTour', 1);\r\n    localStorage.setItem('cartTour', 1);\r\n    localStorage.setItem('merchantFlow', 1);\r\n    localStorage.setItem('cartMerchant', 1);\r\n}\r\n\r\nfunction countDown(){\r\n    let counter = Number(localStorage.getItem(\"counterPayment\"));\r\n    if(counter == 0) {\r\n        clearInterval(timeLeft);\r\n        console.log(\"clear\");\r\n        localStorage.setItem(\"counterPayment\", counterTime);\r\n    } else {\r\n        counterTime = counter - 1;\r\n        localStorage.setItem(\"counterPayment\", counterTime);\r\n    }\r\n}\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const [tokenFound, setTokenFound] = useState('');\r\n    // getToken(setTokenFound);\r\n\r\n    dispatch({ type: 'FCMTOKEN', payload: tokenFound });\r\n\r\n    // if (Cookies.get(\"auth\") === undefined) {\r\n    //     let deleteCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n    //     let newCart = []\r\n    //     newCart.push(deleteCart[0])\r\n    //     localStorage.setItem('cart', JSON.stringify(newCart))\r\n    // }\r\n\r\n    if(localStorage.getItem(\"counterPayment\")) {\r\n        timeLeft = setInterval(() => countDown(), 1000);\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/login\" component={() => <AuthLayout isLogin={true} />} />\r\n            <Route\r\n                path=\"/register\"\r\n                component={() => <AuthLayout isLogin={false} />}\r\n            />\r\n            <Route path=\"/cart\" component={() => <CartLayout />} />\r\n            <Route path=\"/status\" component={() => <StatusLayout />} />\r\n            <Route path=\"/statuscartmanual\" component={() => <StatusCartManualLayout />} />\r\n            <Route path=\"/store\" component={() => <ProductLayout />} />\r\n            <Route exact path=\"/merchant/:mid/:notab\" component={MerchantResto} />\r\n            {/* <Route exact path=\"/d/:username\" component={ManualTxn} /> */}\r\n            <Route exact path=\"/merchant/list/:address/:notab\" component={FoodCourt} />\r\n            <Route path=\"/profile\" component={() => <ProfileLayout />} />\r\n            <Route path=\"/reset-pin/:pintoken\" component={ResetPin} />\r\n            <Route path=\"/orderconfirmation\" component={() => <OrderConfirmationLayout />} />\r\n            <Route path=\"/orderdetail\" component={() => <OrderDetailLayout />} />\r\n            <Route exact path=\"/cartmanual/pickup/address\" component={AddressInputView} />\r\n            <Route path=\"/cartmanual/pickup\" component={PickupSelectionView} />\r\n            <Route path=\"/cartmanual/shipping\" component={ShippingDateView} />\r\n            <Route path=\"/cartmanual/payment\" component={PaymentMethodView} />\r\n            <Route path=\"/cartmanual\" component={() => <CartManualLayout />} />\r\n            <Route exact path=\"/:username\" component={ManualTxn} />\r\n            <Route path=\"/\" component={() => <StoreLayout />} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Store.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProductLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\FoodCourtQR.js",["271"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst FoodCourt = (props) => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let fcadd = props.match.params.address\r\n        // fcadd = fcadd.replace(/_/g, \" \")\r\n        localStorage.setItem('fctable', props.match.params.notab)\r\n        Cookies.set(\"fcaddress\", fcadd, { expires: 1 })\r\n        dispatch({ type: 'ISMERCHANTQR', payload: false });\r\n        history.push(\"/\");\r\n    }, []);\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default FoodCourt\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\OrderDetailLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StoreLayout.js",["272"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport StoreView from \"../View/Store/StoreView\";\r\nimport {\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport default class StoreLayout extends React.Component {\r\n  state = {\r\n    isLogin: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'white';\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"));\r\n      this.setState({ isLogin: auth.isLogged });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MainNavigation />\r\n        {\r\n          this.state.isLogin ?\r\n            <Container>\r\n              <div className='container2'>\r\n                <StoreView />\r\n              </div>\r\n            </Container>\r\n            :\r\n            // <Container className={\"resize-mobile-store\"}>\r\n            <Container>\r\n              <div className='container2'>\r\n                <StoreView />\r\n              </div>\r\n            </Container>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MerchantQR.js",["273","274"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MerchantResto = (props) => {\r\n  const merchantID = props.match.params.mid\r\n  const [longlat, setlonglat] = useState({});\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const _isMounted = useRef(true)\r\n\r\n  useEffect(() => {\r\n    // if (navigator.geolocation) { //SHUTDOWN FOR A WHILE\r\n    //   navigator.geolocation.getCurrentPosition(showPosition)\r\n    // } else {\r\n    //   alert('Geolocation is not supported by this browser.')\r\n    // }\r\n    // return () => {\r\n    //   _isMounted.current = false\r\n    // }\r\n\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    console.log(latitude, longitude);\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    if (!props.match.params.address) {\r\n      setlonglat({ lat: latitude, lon: longitude })\r\n    }\r\n    dispatch({ type: 'ISMERCHANTQR', payload: true });\r\n  }, []);\r\n\r\n  // const showPosition = (position) => { //SHUTDOWN FOR A WHILE\r\n  //   let latitude = position.coords.latitude\r\n  //   let longitude = position.coords.longitude\r\n  //   let longlat = { lat: latitude, lon: longitude }\r\n  //   console.log(latitude, longitude);\r\n  //   localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  //   if (!props.match.params.address) {\r\n  //     setlonglat({ lat: latitude, lon: longitude })\r\n  //   }\r\n  // }\r\n\r\n  if (longlat.lat) {\r\n    history.push(\r\n      \"/store?mid=\" +\r\n      merchantID +\r\n      \"&table=\" +\r\n      props.match.params.notab\r\n    );\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default MerchantResto\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ManualTransaction.js",["275","276"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ManualTxn = (props) => {\r\n    // const merchantID = props.match.params.mid\r\n    const [longlat, setlonglat] = useState({});\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let latitude = -6.28862\r\n        let longitude = 106.71789\r\n        let longlat = { lat: latitude, lon: longitude }\r\n        console.log(latitude, longitude);\r\n        localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n        if (!props.match.params.address) {\r\n            setlonglat({ lat: latitude, lon: longitude })\r\n        }\r\n        dispatch({ type: 'ISMANUALTXN', payload: true });\r\n    }, []);\r\n\r\n    if (longlat.lat) {\r\n        history.push(\r\n            \"/store?username=\" +\r\n            props.match.params.username\r\n        );\r\n    }\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default ManualTxn\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartManualLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\AddressInputView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js",["277","278","279"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport \"../../Asset/scss/AuthenticationLayout.scss\";\r\nimport ResetPinDialog from '../../Component/Authentication/ResetPin/ResetPinDialog';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ResetPin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const pintoken = props.match.params.pintoken;\r\n    const [showResetDialog, setShowResetDialog] = useState(true);\r\n\r\n    console.log(pintoken);\r\n    // const setMenuDetail = () => {\r\n        // setShowResetDialog(true);\r\n    // }\r\n\r\n    const resetPin = () => {\r\n        dispatch({ type: 'PINTOKEN', payload: pintoken });\r\n        if (showResetDialog) {\r\n            return (\r\n            <ResetPinDialog\r\n                isShowResetPin={showResetDialog}\r\n                onHideResetPin={() => setShowResetDialog(true)}\r\n            />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {resetPin()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPin\r\n// class ResetPinView extends React.Component {\r\n\r\n//     state = {\r\n//         showResetDialog : true\r\n//     }\r\n\r\n//     setMenuDetail(isShow) {\r\n//         this.setState({ showResetDialog: isShow })\r\n//         document.body.style.overflowY = ''\r\n//     }\r\n\r\n//     resetPin = () => {\r\n//         if (this.state.showResetDialog === true) {\r\n//           return (\r\n//             <ResetPinDialog\r\n//                 isShowResetPin={this.state.showResetDialog}\r\n//                 onHideResetPin={() => this.setMenuDetail(true)}\r\n//             />\r\n//           );\r\n//         }\r\n//     }\r\n\r\n//     render() { \r\n//         return (\r\n//             <>\r\n//             {this.resetPin()}\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n// export default connect(null, {LoadingButton, DoneLoad })(ResetPinView)","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\AddressSelection\\PickupSelectionView.js",["280","281","282","283"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport ArrowGo from \"../../../Asset/Icon/arrowright-icon.png\";\r\nimport takeawayColor from '../../../Asset/Icon/takeawayColor.png'\r\nimport deliveryColor from '../../../Asset/Icon/delivery-icon.png'\r\nimport LocationIcon from '../../../Asset/Icon/location-icon.png'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst PickupSelectionView = () => {\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [pickUpChoice, setPickUpChoice] = useState([\r\n    {\r\n        image: \"takeaway\",\r\n        option: \"Pickup Sendiri\"\r\n    },\r\n    {\r\n        image: \"delivery\",\r\n        option: \"Dikirim\"\r\n    }\r\n    ])\r\n\r\n    const onChangeRadio = (ind) => {\r\n        dispatch({ type: 'PICKUPTYPE', payload: ind })\r\n    }\r\n\r\n    const goToAddress = () => {\r\n        history.push('./pickup/address')\r\n    }\r\n\r\n    const handleShipperName = (e) => {\r\n        dispatch({ type: 'SHIPPERNAME', payload: e.target.value})\r\n    }\r\n\r\n    const handleShipperPrice= (e) => {\r\n        dispatch({ type: 'SHIPPERPRICE', payload: e.target.value })\r\n    }\r\n\r\n    const pickUpSelection = () => {\r\n        var pickUpRadioSelection = pickUpChoice.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"delivery\") {\r\n                imageOption = deliveryColor;\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                imageOption = takeawayColor;\r\n            }\r\n\r\n            return (\r\n                <div key={keyOption} className='pickup-detailContent'>\r\n                    <div className='pickup-radioSection'>\r\n                        <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption)} name={'PICKUPMETHOD'} defaultChecked={CartRedu.pickupType === keyOption ? true : false} />\r\n                        <label htmlFor={optionVal.image} style={{ borderBottomLeftRadius: CartRedu.pickupType === 1 ? \"0px\" : \"8px\", borderBottomRightRadius: CartRedu.pickupType === 1 ? \"0px\" : \"8px\" }}>\r\n                            <div className='pickup-radioSide'>\r\n                                <img className='pickupradio-image' src={imageOption} alt='' />\r\n                                <div className='pickup-radioTitle'>{optionVal.option}</div>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return pickUpRadioSelection\r\n    }\r\n\r\n    const shipperArea = () => {\r\n        return (\r\n            <div className=\"deliverySelection-layout\">\r\n                <div className=\"deliverySelection-input\" onClick={goToAddress}>\r\n                    <div className=\"deliverySelection-input-leftSide\">\r\n                        <span className=\"deliverySelection-locationIcon\">\r\n                            <img className=\"address-location-icon\" src={LocationIcon} />\r\n                        </span>\r\n\r\n                        <div className=\"deliverySelection-addressLayout\">\r\n                            <div className=\"deliverySelection-addressTitle\">\r\n                                Alamat Pengiriman\r\n                            </div>\r\n                            <div className=\"deliverySelection-addressInputted\">\r\n                                { CartRedu.fullAddress ? <span className=\"deliverySelection-grayNotes\">{CartRedu.fullAddress}</span> : \"Masukkan alamat pengiriman sekarang\" }\r\n                            </div>\r\n                            <div className=\"deliverySelection-addressInputted\">\r\n                                { CartRedu.shipperNotes ? <span className=\"deliverySelection-greenNotes\">Catatan : <span className=\"deliverySelection-grayNotes\">{CartRedu.shipperNotes}</span></span> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <span className=\"deliverySelection-openIcon\">\r\n                        <img className=\"address-open-icon\" src={ArrowGo} />\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"deliverySelection-shipperName\">\r\n                    <div className=\"deliverySelection-shipperName-title\">Nama Kurir <span style={{color: \"red\"}}>*</span></div>\r\n                    <input onChange={handleShipperName} className=\"deliverySelection-shipperName-inputArea\" placeholder=\"Masukkan nama kurir disini...\" defaultValue={CartRedu.shipperName}/>\r\n                </div>\r\n\r\n                <div className=\"deliverySelection-shipperPrice\">\r\n                    <div className=\"deliverySelection-shipperPrice-title\">Ongkos Kirim <span style={{color: \"red\"}}>*</span></div>\r\n                    <div className=\"deliverySelection-shipperPrice-layout\">\r\n                        <div className=\"deliverySelection-shipperPrice-currency\">Rp</div>\r\n                        <input onChange={handleShipperPrice} type='number' inputMode='numeric' className=\"deliverySelection-shipperPrice-inputArea\" placeholder=\"Masukkan ongkos kirim disini...\" defaultValue={CartRedu.shipperPrice}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if(CartRedu.pickupType === 0) {\r\n            // Save pickup takeaway data\r\n            window.history.go(-1)\r\n        } else if(CartRedu.fullAddress && CartRedu.shipperName && CartRedu.shipperPrice) {\r\n            // Save pickup delivery data\r\n            dispatch({ type: 'PICKUPTYPE', payload: 1 })\r\n            window.history.go(-1)\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        dispatch({ type: 'PICKUPTYPE', payload: -1 })\r\n        window.history.go(-1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pickupSelection-layout\">\r\n                <div className=\"pickupSelection-topSide\">\r\n                    <div className=\"pickupSelection-header\">\r\n                        <span className=\"pickupSelection-backArrow\" onClick={goBack}>\r\n                            <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"pickupSelection-title\">Pilih Pengiriman</div>\r\n                    </div>\r\n\r\n                    {pickUpSelection()}\r\n                    {CartRedu.pickupType === 1 ? shipperArea() : null}\r\n                </div>\r\n\r\n                <div \r\n                    onClick={handleSave} \r\n                    className=\"pickupSelection-selectButton\" \r\n                    style={{backgroundColor: \r\n                        CartRedu.pickupType === 0 ? '#4bb7ac' \r\n                        : \r\n                        CartRedu.fullAddress && CartRedu.shipperName && CartRedu.shipperPrice ? '#4bb7ac'\r\n                        : \r\n                        '#aaaaaa'}}\r\n                >Pilih</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickupSelectionView","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\ShippingDate\\ShippingDateView.js",["284","285","286","287","288","289","290"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport ShippingDate from \"../../../Asset/Icon/shipping-date.png\";\r\n// import TextField from '@material-ui/core/TextField';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n// import { alpha } from '@material-ui/core/styles';\r\n// import DateTimePicker from 'react-datetime-picker';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from \"moment\";\r\nimport idLocale from \"moment/locale/id\";\r\nimport TimePicker from 'react-bootstrap-time-picker';\r\n\r\nconst ShippingDateView = () => {\r\n    const ref = useRef();\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [choiceDate, setChoiceDate] = useState(false)\r\n    const [currentDate, setCurrentDate] = useState(\"\");\r\n    const [currentTime, setCurrentTime] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n    const [selectedTime, setSelectedTime] = useState(\"\");\r\n    const [isTomorrow, setIsTomorrow] = useState(false);\r\n    const [pickUpChoice, setPickUpChoice] = useState([\r\n    {\r\n        image: \"now\",\r\n        option: \"Sekarang\"\r\n    },\r\n    {\r\n        image: \"custom\",\r\n        option: \"Custom Tanggal\"\r\n    }\r\n    ])\r\n\r\n    const onChangeRadio = (ind) => {\r\n        dispatch({ type: 'SHIPPINGDATETYPE', payload: ind })\r\n        if(ind === 1) {\r\n            moment.updateLocale('id', idLocale);\r\n            setChoiceDate(true);\r\n            var today = new Date();\r\n            today.setHours(today.getHours() + 2);\r\n            console.log(today);\r\n            var convertDate = moment(new Date(today)).format(\"yyyy-MM-DD\");\r\n            var convertTime = moment(new Date(today)).format(\"HH\");\r\n            setCurrentDate(convertDate);\r\n            setCurrentTime(convertTime);\r\n            setSelectedDate(convertDate);\r\n            setSelectedTime(convertTime);\r\n            // dispatch({ type: 'SHIPPINGDATE', payload: today});\r\n        } else {\r\n            setChoiceDate(false);\r\n            var today = new Date();\r\n            today.setHours(today.getHours() + 2);\r\n            setSelectedDate(today);\r\n            // var currentDateTime = moment(new Date()).format(\"yyyy-MM-DD HH:mm:ss\");\r\n            // dispatch({ type: 'SHIPPINGDATE', payload: today})\r\n        }\r\n        \r\n    }\r\n\r\n    const handleShippingDate = (e) => {\r\n        var today = new Date();\r\n        today = moment(new Date(today)).format(\"yyyy-MM-DD\");\r\n        var pickDate = moment(new Date(e)).format(\"yyyy-MM-DD\");\r\n\r\n        if(pickDate !== today) {\r\n            setIsTomorrow(true);\r\n            e.setHours(e.getHours() + 1);\r\n            var convertTime = moment(new Date(e)).format(\"HH\");\r\n            setCurrentTime(convertTime);\r\n            setSelectedTime(convertTime);\r\n        } else {\r\n            setIsTomorrow(false);\r\n        }\r\n\r\n        var date = moment(new Date(e)).format(\"yyyy-MM-DD\");\r\n        setSelectedDate(date);\r\n        // var date = moment(new Date(e.target.value)).format(\"yyyy-MM-DD HH:mm:ss\");\r\n        // dispatch({ type: 'SHIPPINGDATE', payload: e});\r\n    }\r\n\r\n    const handleShippingTime = (e) => {\r\n        var hours   = Math.floor(e / 3600);\r\n        var minutes = Math.floor((e - (hours * 3600)) / 60);\r\n        var time = hours + \":\" + minutes;\r\n\r\n        setSelectedTime(time);\r\n    }\r\n\r\n    const shippingSelection = () => {\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className='shippingdate-detailContent'>\r\n                        <div className='shippingdate-radioSection'>\r\n                        <input type='radio' id='now' onChange={() => onChangeRadio(0)} name={'DATETYPE'} />\r\n                            <label htmlFor='now'>\r\n                                <div className='shippingdate-radioSide'>\r\n                                    <div className='shippingdate-radioTitle'>Sekarang</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <div>\r\n                <div className='shippingdate-detailContent'>\r\n                    <div className='shippingdate-radioSection'>\r\n                    <input type='radio' id='custom' onChange={() => onChangeRadio(1)} name={'DATETYPE'} />\r\n                        <label htmlFor='custom'>\r\n                            <div className='shippingdate-radioSide'>\r\n                                <div className='shippingdate-radioTitle'>Custom Tanggal</div>\r\n                            </div>\r\n                            <img className='shippingdate-radio-image' src={ShippingDate} alt='' />\r\n                        </label>\r\n                    </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n\r\n    const shippingDateCustom = () => {\r\n        return (\r\n            <div className=\"shippingdate-selection-layout\">\r\n                <div>\r\n                    {/* <TextField \r\n                        ref={ref} \r\n                        placeholder=\"Custom Tanggal\" \r\n                        id=\"registerDate\" \r\n                        type=\"datetime-local\"\r\n                        // type=\"text\" \r\n                        variant=\"standard\" \r\n                        onChange={handleShippingDate} \r\n                        InputLabelProps={{ shrink: true }} \r\n                        // InputProps={{inputProps: { min: \"2021-12-01\", max: \"2021-12-12\" }, disableUnderline: true }} \r\n                        // onFocus={() => (ref.current.type = \"datetime-local\")}\r\n                        // onBlur={() => (ref.current.type = \"datetime-local\")}\r\n                        // minTime={0,0,0,new Date().setHours(new Date().getHours() + 3)}\r\n                        // minDate={new Date(\"2021-12-01\")}\r\n                        // minTime={new Date(0, 0, 0, 8)}\r\n                        // minDateTime={new Date()}\r\n                        // inputProps={{ min: currentDate }}\r\n                        // inputProps={{\r\n                        //     min: \"2021-08-10\",\r\n                        //     max: \"2021-08-20\"\r\n                        // }}\r\n                        // min=\"2021-12-01\"\r\n                        InputProps={{ inputProps: { min: \"2021-01-12\" } }}\r\n                        style={{ width : \"425px\"}}\r\n                    /> */}\r\n\r\n                    {/* <DateTimePicker\r\n                        // renderInput={(params) => <TextField {...params} />}\r\n                        id=\"registerDate\" \r\n                        inputVariant=\"standard\" \r\n                        onChange={handleShippingDate} \r\n                        // InputLabelProps={{ shrink: true }} \r\n                        minDateTime={new Date()}\r\n                        style={{ width : \"425px\"}}\r\n                    /> */}\r\n                    \r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        autoOk\r\n                        id=\"registerDate\"\r\n                        onChange={handleShippingDate}\r\n                        inputVariant=\"outlined\" \r\n                        className={\"shippingdate-datetimepicker\"}\r\n                        format={\"d MMMM yyyy\"}\r\n                        minDate={currentDate}\r\n                        value={selectedDate}\r\n                        ampm={false}\r\n                        disablePast={true}\r\n                    />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <div>\r\n                <TimePicker \r\n                    className={\"shippingdate-timepicker\"}\r\n                    format={24}\r\n                    start={currentTime} \r\n                    end=\"18:00\" \r\n                    step={120}\r\n                    // initialValue={currentTime} \r\n                    value={selectedTime}\r\n                    onChange={handleShippingTime}\r\n                />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if(CartRedu.shippingDateType === 1) {\r\n            const dateTime = moment(`${selectedDate} ${selectedTime}`, 'yyyy-MM-DD HH:mm:ss').format();\r\n            dispatch({ type: 'SHIPPINGDATE', payload: Date.parse(dateTime)});\r\n        } else {\r\n            dispatch({ type: 'SHIPPINGDATE', payload: selectedDate});\r\n        }\r\n        \r\n        window.history.back();\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.back();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"shippingdate-layout\">\r\n                <div className=\"shippingdate-topSide\">\r\n                    <div className=\"shippingdate-header\">\r\n                        <span className=\"shippingdate-backArrow\" onClick={goBack}>\r\n                            <img className=\"shippingdate-backArrow-icon\" src={ArrowBack} alt='' />\r\n                        </span>\r\n                        <div className=\"shippingdate-title\">Atur Tanggal Pengiriman</div>\r\n                    </div>\r\n\r\n                    {shippingSelection()}\r\n                    {choiceDate ? shippingDateCustom() : null}\r\n                </div>\r\n\r\n                <div \r\n                    onClick={handleSave} \r\n                    className=\"shippingdate-selectButton\" \r\n                    style={{backgroundColor: \r\n                        selectedDate ? '#4bb7ac' \r\n                        : \r\n                        '#aaaaaa'}}\r\n                >Pilih</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShippingDateView","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\PaymentSelection\\PaymentMethodView.js",["291","292","293"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../../Asset/scss/AddressSelection.scss'\r\nimport ArrowBack from \"../../../Asset/Icon/arrow-left.png\";\r\nimport takeawayColor from '../../../Asset/Icon/takeawayColor.png'\r\nimport deliveryColor from '../../../Asset/Icon/delivery-icon.png'\r\nimport OvoPayment from '../../../Asset/Icon/ovo_icon.png'\r\nimport Alertcircle from '../../../Asset/Icon/alertcircle.png'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst PaymentMethodView = () => {\r\n    const dispatch = useDispatch()\r\n    const CartRedu = useSelector(state => state.CartRedu)\r\n    const [ewallet, setEwallet] = useState([\r\n        {\r\n            image: \"ovo\",\r\n            option: \"OVO\"\r\n        }\r\n        ])\r\n    const [isCheckNumber, setisCheckNumber] = useState(true)\r\n    const [isAlertNumber, setisAlertNumber] = useState(\"\")\r\n    const [phoneNum, setphoneNum] = useState(CartRedu.phoneNumber)\r\n\r\n    const handleSave = () => {\r\n        if (CartRedu.paymentType === 0 && phoneNum && isAlertNumber === \"\") {\r\n            dispatch({ type: 'PHONENUMBER', payload: phoneNum })\r\n            window.history.go(-1)\r\n        } else if(CartRedu.paymentType === -1) {\r\n            console.log(\"CANNOT GO THROUGH\")\r\n        } else {\r\n            console.log(\"CANNOT GO THROUGH\")\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        if (!CartRedu.phoneNumber) {\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n            dispatch({ type: 'PAYMENTTYPE', payload: -1 })\r\n        }\r\n        window.history.go(-1)\r\n    }\r\n\r\n    const onChangeRadio = (ind) => {\r\n        dispatch({ type: 'PAYMENTTYPE', payload: ind })\r\n    }\r\n\r\n    const hideTooltip = () => {\r\n        setTimeout(() => {\r\n            ReactTooltip.hide()\r\n        }, 3000);\r\n    }\r\n\r\n    const onChangeNumber = (e) => {\r\n        let reg = /^(?!00)(?!01)(?!02)(?!03)(?!04)(?!05)(?!06)(?!07)(?!09)[0][0-9]\\d{0,12}$/\r\n        let checkNumber = reg.test(e.target.value)\r\n        setphoneNum(e.target.value)\r\n        if (checkNumber) {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('')\r\n        } else if (e.target.value === '') {\r\n            setisCheckNumber(false)\r\n            setisAlertNumber('Nomor harus diisi')\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n        } else {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('Masukkan nomor dengan benar')\r\n            dispatch({ type: 'PHONENUMBER', payload: \"\" })\r\n        }\r\n    }\r\n\r\n    const ewalletPaymentOption = () => {\r\n        var ewalletRadioSelection = ewallet.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"gopay\") {\r\n                imageOption = deliveryColor;\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            } else if (optionVal.image === \"dana\") {\r\n                imageOption = takeawayColor;\r\n            }\r\n\r\n            return (\r\n                <div key={keyOption} className='payment-detailContent'>\r\n                    <div className='payment-radioSection'>\r\n                        <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption)} name={'PAYMENTMETHOD'} defaultChecked={CartRedu.paymentType === keyOption ? true : false} />\r\n                        <label htmlFor={optionVal.image}>\r\n                            <div className='payment-radioSide'>\r\n                                <img className='paymentradio-image' src={imageOption} alt='' />\r\n                                <div className='payment-radioTitle'>{optionVal.option}</div>\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    {\r\n                        CartRedu.paymentType === 0 && keyOption === 0 ?\r\n                        <div className='ovoNumber-layout'>\r\n                            <div className='payment-ovoNumber-topSide'>\r\n                                <div className='payment-ovoNumber-title'>\r\n                                    Masukkan Nomor Anda\r\n                                </div>\r\n\r\n                                <a data-tip='Masukkan Nomor Yang Terdaftar Di OVO Untuk Melakukan Pembayaran' data-event='click'><img src={Alertcircle} className='payment-alertImg' alt='' /></a>\r\n                                <ReactTooltip className='payment-extraClass' effect='solid' arrowColor='#F8FAFC' globalEventOff='click' afterShow={() => hideTooltip()} />\r\n                            </div>\r\n\r\n                            <input defaultValue={CartRedu.phoneNumber} type='number' inputMode='numeric' className='payment-ovoNumber-bottomSide' onChange={onChangeNumber} style={{ borderBottom: !isCheckNumber ? '0.5px solid #DC6A84' : '0.5px solid #D9CECE', color: !isCheckNumber ? '#DC6A84' : '#111111' }} />\r\n                            {\r\n                                isAlertNumber !== '' ?\r\n                                    <h4 className='payment-ovoNumber-alert'>\r\n                                        {isAlertNumber}\r\n                                    </h4>\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return ewalletRadioSelection\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"paymentMethod-layout\">\r\n                <div className=\"paymentMethod-header\">\r\n                    <span className=\"paymentMethod-backArrow\" onClick={goBack}>\r\n                        <img className=\"backArrow-icon\" src={ArrowBack} alt='' />\r\n                    </span>\r\n                    <div className=\"paymentMethod-title\">Metode Pembayaran</div>\r\n                </div>\r\n\r\n                <div className=\"ewallet-layout\">\r\n                    <div className=\"ewallet-title\">E-Wallet</div>\r\n                    {ewalletPaymentOption()}\r\n                </div>\r\n\r\n                <div className=\"paymentMethod-buttonLayout\">\r\n                    <div \r\n                        onClick={handleSave} \r\n                        className=\"paymentMethod-selectButton\" \r\n                        style={{backgroundColor: \r\n                            CartRedu.paymentType === -1 ? '#aaaaaa'\r\n                            :\r\n                            CartRedu.paymentType === 0 ? '#4bb7ac' \r\n                            : \r\n                            CartRedu.phoneNumber ? '#4bb7ac'\r\n                            :\r\n                            '#aaaaaa'}}\r\n                    >Simpan</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentMethodView","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["294","295","296","297","298","299","300","301"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MainNavigation.js",["302","303"],"import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport bellIcon from \"../Asset/Icon/icon_bell2x.png\";\r\nimport profileIcon from \"../Asset/Icon/icon_profile2x.png\";\r\nimport logo from \"../Asset/Logo/logo4x.png\";\r\nimport Cookies from \"js-cookie\";\r\nimport orderIcon from \"../Asset/Icon/OrderIcon.png\";\r\n\r\nexport default class MainNavigation extends React.Component {\r\n  state = {\r\n    isLogin : false\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'white';\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"));\r\n      this.setState({ isLogin: auth.isLogged });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let homePage = \"/\" + Cookies.get(\"homePage\")\r\n    return (\r\n      // <div className={\"resize-mobile-nav\"}>\r\n      <div className={\"mobile-view\"}>\r\n        <Navbar>\r\n          <Navbar>\r\n            <Link to={homePage}> <img src={logo} alt={\"logo\"} class=\"icon\"></img> </Link>\r\n          </Navbar>\r\n\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Link to={\"/status\"}>\r\n              <img src={orderIcon} class=\"iconStatus\" alt={\"status\"}></img>\r\n            </Link>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        {/* <Navbar.Collapse className=\"justify-content-end\">\r\n            <Link to={\"/profile\"}>\r\n              <img src={profileIcon} class=\"icon\" alt={\"profile\"}></img>\r\n            </Link>\r\n          </Navbar.Collapse> */}\r\n\r\n        <div className='listTitle'>\r\n            <h2 className='listTitleContent'>Daftar Restoran</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartManualView.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["325","326","327","328"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js",["329","330"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Product\\ProductView.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Auth\\FormView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\OrderDetail\\OrderDetailView.js",["370","371"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["372"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js",["373","374","375","376","377"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Button/PikaButton\";\r\nimport ConfirmResetPinDialog from \"../ResetPin/ConfirmResetPinDialog\";\r\n\r\nconst ResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPinDialog, setConfirmResetPin] = useState(false);\r\n    const [resetPin, setResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleResetPin = (e) => {\r\n        setResetPin(e);\r\n    }\r\n\r\n    const checkResetPin = () => {\r\n        if (resetPin.length < 6) {\r\n          setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n    };\r\n\r\n    const openConfirmPinDialog = (e) => {\r\n        if (checkResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            currentPin : resetPin\r\n        };\r\n\r\n        dispatch({ type: 'RESETPIN', payload: data });\r\n\r\n        setConfirmResetPin(true);\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if(confirmResetPinDialog) {\r\n            return (\r\n                <ConfirmResetPinDialog \r\n                    isShowConfirmResetPin={confirmResetPinDialog}\r\n                    onHideConfirmResetPin={() =>setConfirmResetPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {showConfirmPinDialog()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPinDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\CartReducers.js",["378"],"const INITIAL_STATE = {\r\n    pickupType: -1, //PICKUP PAGE\r\n    fullAddress: \"\",\r\n    shipperNotes: \"\",\r\n    shipperName: \"\",\r\n    shipperPrice: \"\",\r\n    shippingDateType : \"\", //SHIPPING DATE PAGE\r\n    shippingDate : \"\",\r\n    paymentType: -1, //PAYMENT PAGE\r\n    phoneNumber: \"\",\r\n    customerName: \"\",\r\n    customerPhoneNumber: \"\",\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"PICKUPTYPE\":\r\n            return { ...state, pickupType: action.payload }\r\n        case \"FULLADDRESS\":\r\n            return { ...state, fullAddress: action.payload }\r\n        case \"SHIPPERNOTES\":\r\n            return { ...state, shipperNotes: action.payload }\r\n        case \"SHIPPERNAME\":\r\n            return { ...state, shipperName: action.payload }\r\n        case \"SHIPPERPRICE\":\r\n            return { ...state, shipperPrice: action.payload }\r\n        case \"SHIPPINGDATETYPE\":\r\n            return { ...state, shippingDateType: action.payload }\r\n        case \"SHIPPINGDATE\":\r\n            return { ...state, shippingDate: action.payload }\r\n        case \"PAYMENTTYPE\":\r\n            return { ...state, paymentType: action.payload }\r\n        case \"PHONENUMBER\":\r\n            return { ...state, phoneNumber: action.payload }\r\n        case \"CUSTOMERNAME\":\r\n            return { ...state, customerName: action.payload }\r\n        case \"CUSTOMERPHONENUMBER\":\r\n            return { ...state, customerPhoneNumber: action.payload }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js",["379"],"const INITIAL_STATE = {\r\n    dataRegister : {},\r\n    dataLogin : {},\r\n    isLoginStep : false,\r\n    dataResetPin : {},\r\n    dataPin : '',\r\n    dataPinToken: '',\r\n    isMerchantQR: false,\r\n    isManualTxn : false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"REGISTER\" :\r\n            return {...state, dataRegister: action.payload}\r\n        case \"LOGIN\" :\r\n            return {...state, dataLogin: action.payload}\r\n        case \"LOGINSTEP\" :\r\n            return {...state, isLoginStep: action.payload}\r\n        case \"RESETPIN\" :\r\n            return {...state, dataResetPin: action.payload}\r\n        case \"PIN\" :\r\n            return {...state, dataPin: action.payload}\r\n        case \"PINTOKEN\" :\r\n            return {...state, dataPinToken: action.payload}\r\n        case \"ISMERCHANTQR\":\r\n            return { ...state, isMerchantQR: action.payload }\r\n        case \"ISMANUALTXN\":\r\n            return { ...state, isManualTxn: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["380"],"const INITIAL_STATE = {\r\n    buttonLoad: true,\r\n    validQTY: 0,\r\n    openSelect: false,\r\n    foodCateg: '',\r\n    checkboxes: [],\r\n    checkboxesTotal: [],\r\n    mandatCheckCond: false,\r\n    mandatCheck: false,\r\n    radiobutton: [],\r\n    mandatRadioCond: false,\r\n    mandatRadio: false,\r\n    totalAmountProd: 0,\r\n    openMenuCart: false,\r\n    dataOrder : {},\r\n    fcmToken : '',\r\n    dataDetail : {},\r\n    // isManualTxn : false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return { ...state, buttonLoad: false }\r\n        case \"DONELOAD\":\r\n            return { ...state, buttonLoad: true }\r\n        case \"VALIDATIONQTY\":\r\n            return { ...state, validQTY: action.payload }\r\n        case \"OPENSELECT\":\r\n            return { ...state, openSelect: action.payload }\r\n        case \"FOODCATEG\":\r\n            return { ...state, foodCateg: action.payload }\r\n        case \"CHECKBOXES\":\r\n            return { ...state, checkboxes: action.payload }\r\n        case \"MANDATCHECKCOND\":\r\n            return { ...state, mandatCheckCond: action.payload }\r\n        case \"MANDATCHECK\":\r\n            return { ...state, mandatCheck: action.payload }\r\n        case \"COUNTCHECKBOX\":\r\n            return { ...state, checkboxesTotal: action.payload }\r\n        case \"RADIOBUTTON\":\r\n            return { ...state, radiobutton: action.payload }\r\n        case \"MANDATRADIOCOND\":\r\n            return { ...state, mandatRadioCond: action.payload }\r\n        case \"MANDATRADIO\":\r\n            return { ...state, mandatRadio: action.payload }\r\n        case \"COUNTTOTAL\":\r\n            return { ...state, totalAmountProd: action.payload }\r\n        case \"EDITCART\":\r\n            return { ...state, openMenuCart: action.payload }\r\n        case \"DATAORDER\":\r\n            return { ...state, dataOrder: action.payload }\r\n        case \"FCMTOKEN\":\r\n            return { ...state, fcmToken: action.payload }\r\n        case \"DATADETAIL\":\r\n            return { ...state, dataDetail: action.payload }\r\n        // case \"ISMANUALTXN\":\r\n        //     return { ...state, isManualTxn: action.payload }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["381","382","383"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",["384","385"],"import React, { useState } from 'react'\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png'\r\nimport diningTableColor from '../../Asset/Icon/diningTableColor.png'\r\nimport diningTableWhite from '../../Asset/Icon/diningTableWhite.png'\r\nimport takeawayColor from '../../Asset/Icon/takeawayColor.png'\r\nimport takeawayWhite from '../../Asset/Icon/takeawayWhite.png'\r\nimport CashierPayment from '../../Asset/Icon/CashierPayment.png'\r\nimport CashierPaymentWhite from '../../Asset/Icon/CashierPaymentWhite.png'\r\nimport OvoPayment from '../../Asset/Icon/ovo_icon.png'\r\nimport Alertcircle from '../../Asset/Icon/alertcircle.png'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport '../../Asset/scss/CartModal.scss'\r\n\r\nconst CartModal = (props) => {\r\n    const [radioNumEat, setradioNumEat] = useState(props.indexOptionEat)\r\n    const [radioNumPay, setradioNumPay] = useState(props.indexOptionPay)\r\n    const [modalTitle, setmodalTitle] = useState(\"\")\r\n    const [isCheckNumber, setisCheckNumber] = useState(true)\r\n    const [isAlertNumber, setisAlertNumber] = useState(\"\")\r\n\r\n    const closeModal = (e) => {\r\n        if (isCheckNumber) {\r\n            e.stopPropagation()\r\n            props.onHide()\r\n        }\r\n    }\r\n\r\n    const confirmPay = () => {\r\n        props.confirmPay()\r\n        props.onHide()\r\n    }\r\n\r\n    const selectButton = () => {\r\n        if (modalTitle === 'Pilih Cara Makan Anda') {\r\n            props.handleData(radioNumEat)\r\n            props.onHide()\r\n        } else {\r\n            if (isCheckNumber) {\r\n                props.handleData(radioNumPay)\r\n                props.onHide()\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeRadio = (num, title) => {\r\n        if (title === 'Pilih Cara Makan Anda') {\r\n            setradioNumEat(num)\r\n            setmodalTitle(title)\r\n            setisCheckNumber(true)\r\n        } else if (title === 'Bayar Pakai Apa') {\r\n            setradioNumPay(num)\r\n            setmodalTitle(title)\r\n            setisCheckNumber(true)\r\n        }\r\n    }\r\n\r\n    const onChangeNumber = (e) => {\r\n        let reg = /^(?!00)(?!01)(?!02)(?!03)(?!04)(?!05)(?!06)(?!07)(?!09)[0][0-9]\\d{0,12}$/\r\n        let checkNumber = reg.test(e.target.value)\r\n        props.setPhoneNumber(e.target.value)\r\n        if (checkNumber) {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('')\r\n        } else if (e.target.value === '') {\r\n            setisCheckNumber(false)\r\n            setisAlertNumber('Nomor harus diisi')\r\n        } else {\r\n            setisCheckNumber(checkNumber)\r\n            setisAlertNumber('Masukkan nomor dengan benar')\r\n        }\r\n    }\r\n\r\n    const choicesCartModal = () => {\r\n        let optionList = props.detailOptions\r\n        let choicesModal = optionList.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"dineIn\") {\r\n                if (radioNumEat === 1) {\r\n                    imageOption = diningTableColor;\r\n                } else {\r\n                    imageOption = diningTableWhite;\r\n                }\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                if (radioNumEat === 0) {\r\n                    imageOption = takeawayColor;\r\n                } else {\r\n                    imageOption = takeawayWhite;\r\n                }\r\n            } else if (optionVal.image === \"cashier\") {\r\n                if (radioNumPay === 1) {\r\n                    imageOption = CashierPayment;\r\n                } else {\r\n                    imageOption = CashierPaymentWhite;\r\n                }\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            }\r\n\r\n            if (props.title === 'Pilih Cara Makan Anda') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'EATMETHOD'} defaultChecked={radioNumEat === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Bayar Pakai Apa') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'PAYMETHOD'} defaultChecked={radioNumPay === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Rincian Pembayaran') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailTotalPrice'>\r\n                        <div className='modalCart-totalPrice'>\r\n                            <h2 className='modalCart-totalPrice-left'>Total Harga Barang</h2>\r\n                            <h2 className='modalCart-totalPrice-right'>{Intl.NumberFormat(\"id-ID\").format(optionVal.totalPrice)}</h2>\r\n                        </div>\r\n\r\n                        <div className='modalCart-discount'>\r\n                            <h2 className='modalCart-discount-left'>Diskon</h2>\r\n                            <h2 className='modalCart-discount-right'>{optionVal.discountPrice}</h2>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return choicesModal\r\n    }\r\n\r\n    const hideTooltip = () => {\r\n        setTimeout(() => {\r\n            ReactTooltip.hide()\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modalCartPage' style={{\r\n                display: props.isShow ? 'block' : 'none'\r\n            }} onClick={closeModal}>\r\n                <div className='modalCartContent' onClick={e => e.stopPropagation()}>\r\n                    <span className='iconCloseNarrow' onClick={closeModal}>\r\n                        <img src={closeNarrow} className='closeLogoNarrow' alt='' />\r\n                    </span>\r\n\r\n                    {\r\n                        props.title !== \"Pesanan yang Anda buat tidak dapat dibatalkan\" ?\r\n                            <div className='modalCart-detail'>\r\n                                <h1 className='modalCart-title'>{props.title}</h1>\r\n\r\n                                {choicesCartModal()}\r\n\r\n                                {\r\n                                    modalTitle === 'Bayar Pakai Apa' && radioNumPay === 1 ?\r\n                                        <div className='ovoNumber-layout'>\r\n                                            <div className='ovoNumber-topSide'>\r\n                                                <h3 className='ovoNumber-title'>\r\n                                                    Masukkan Nomor Anda\r\n                                                </h3>\r\n\r\n                                                <a data-tip='Masukkan Nomor Yang Terdaftar Di OVO Untuk Melakukan Pembayaran' data-event='click'><img src={Alertcircle} className='alertImg' alt='' /></a>\r\n                                                <ReactTooltip className='extraClass' effect='solid' arrowColor='#F8FAFC' globalEventOff='click' afterShow={() => hideTooltip()} />\r\n                                            </div>\r\n\r\n                                            <input type='number' inputMode='numeric' className='ovoNumber-bottomSide' onChange={onChangeNumber} style={{ borderBottom: !isCheckNumber ? '0.5px solid #DC6A84' : '0.5px solid #D9CECE', color: !isCheckNumber ? '#DC6A84' : '#111111' }} />\r\n                                            {\r\n                                                isAlertNumber !== '' ?\r\n                                                    <h4 className='ovoNumber-alert'>\r\n                                                        {isAlertNumber}\r\n                                                    </h4>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div className='modalCart-selectLayout'>\r\n                                    <div className='modalCart-selectButton' onClick={selectButton}>\r\n                                        OK\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='modalCart-paymentLayout'>\r\n                                <h1 className='modalCart-paymentTitle'>{props.title}</h1>\r\n\r\n                                <div className='modalCart-paymentCheck'>\r\n                                    <div className='modalCart-cancelPay' onClick={closeModal}>\r\n                                        Cek Ulang\r\n                                    </div>\r\n\r\n                                    <div className='modalCart-confirmPay' onClick={confirmPay}>\r\n                                        Setuju\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartModal","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js",["386"],"import React, {useState} from \"react\";\r\nimport Tour from 'reactour';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../../Asset/scss/TourPage.scss';\r\n\r\n// const tour_steps = [\r\n//     {\r\n//         selector: '.merchantList-layout',\r\n//         content: 'This is my first Step'\r\n//     }\r\n// ];\r\n\r\nconst TourPage = (props) => {\r\n    // const [isTourOpen, setIsTourOpen] = useState(false);\r\n    const tour_steps = props.stepsContent;\r\n    const isTourOpen = props.isShowTour;\r\n    const isTourClose = props.isHideTour;\r\n\r\n    return (\r\n        <>\r\n            <Tour\r\n                steps={tour_steps}\r\n                isOpen={isTourOpen}\r\n                onRequestClose={isTourClose}\r\n                showNumber={false}\r\n                rounded={10}\r\n                nextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selanjutnya</Button>}\r\n                prevButton={<Button style={{ backgroundColor: \"#4056C6\" }} onClick={isTourClose}>Lewati</Button>}\r\n                lastStepNextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selesai</Button>}\r\n                onAfterOpen={target => (document.body.style.overflowY = 'hidden')}\r\n                onBeforeClose={target => (document.body.style.overflowY = 'auto')}\r\n                className={\"tourpage\"}\r\n            />\r\n        </>\r\n      );\r\n    };\r\n    \r\nexport default TourPage;\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js",["387","388","389","390","391","392"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/MenuDetail.scss'\r\n// import prodPhoto from '../../Asset/Illustration/samplefood.jpg'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport backLogo from '../../Asset/Icon/arrow-left.png'\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport MenuSelection from './MenuSelection'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport RegisterDialog from '../Authentication/RegisterDialog';\r\nimport Cookies from \"js-cookie\"\r\nimport PinDialog from \"../Authentication/PinDialog\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MenuDetail = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const menuCateg = props.handleCateg\r\n    const [menuSelect, setmenuSelect] = useState(false)\r\n    const [menuCondition, setmenuCondition] = useState(false)\r\n    const [registerDialog, setRegister] = useState(false)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [loadingButton, setloadingButton] = useState(true)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHide()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHide()\r\n        } else {\r\n            setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const addtoCart = () => {\r\n        if (!loadingButton) {\r\n            console.log('waitbro');\r\n        } else {\r\n            if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'error',\r\n                    text: 'Pilih terlebih dahulu pilihan yang wajib',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"Close\",\r\n                    closeOnConfirm: false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const countTotalPrice = () => {\r\n        let totalCheckPrice = 0\r\n        let totalRadioPrice = 0\r\n        let totalPrice = 0\r\n        let sumCheckPrice = AllRedu.checkboxes\r\n        sumCheckPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalCheckPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        let sumRadioPrice = AllRedu.radiobutton\r\n        sumRadioPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalRadioPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n        totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n        totalPrice += totalCheckPrice + totalRadioPrice\r\n        totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n        return totalPrice\r\n    }\r\n\r\n    let auth;\r\n\r\n    const openMenuSelect = () => {\r\n\r\n        setloadingButton(false)\r\n        dispatch({ type: 'LOADING' })\r\n        setmenuSelect(true)\r\n        dispatch({ type: 'FOODCATEG', payload: findCateg })\r\n\r\n        // if (Cookies.get(\"auth\") === undefined) {\r\n        //     // props.onHide();\r\n        //     setRegister(true);\r\n        //     // showRegisterDialog();\r\n        // } else {\r\n        //     auth = JSON.parse(Cookies.get(\"auth\"));\r\n        //     if (auth.isLogged === false) {\r\n        //         openPinDialog();\r\n        //     } else {\r\n        //         setloadingButton(false)\r\n        //         dispatch({ type: 'LOADING' })\r\n        //         setmenuSelect(true)\r\n        //         dispatch({ type: 'FOODCATEG', payload: findCateg })\r\n        //     }\r\n        //     // openPinDialog();\r\n\r\n        // }\r\n    }\r\n\r\n    let findCateg\r\n    if (AllRedu.openMenuCart) {\r\n        findCateg = props.datas.foodCategory\r\n        if (!menuCondition) {\r\n            setmenuSelect(true)\r\n            setmenuCondition(true)\r\n        }\r\n    } else {\r\n        findCateg = menuCateg.filter((val) => {\r\n            return props.datas.category === parseInt(val.category_id)\r\n        })\r\n        findCateg = findCateg[0].category_name.toLowerCase()\r\n    }\r\n\r\n    let totalCheckPrice = 0\r\n    let totalRadioPrice = 0\r\n    let totalPrice = 0\r\n    let sumCheckPrice = AllRedu.checkboxes\r\n    sumCheckPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalCheckPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    let sumRadioPrice = AllRedu.radiobutton\r\n    sumRadioPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalRadioPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n    totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n    totalPrice += totalCheckPrice + totalRadioPrice\r\n    totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n    props.handleAmount(totalPrice)\r\n\r\n    const showRegisterDialog = () => {\r\n        if (registerDialog) {\r\n            return (\r\n                <RegisterDialog\r\n                    isShowRegister={registerDialog}\r\n                    onHideRegister={() => setRegister(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        setEmail(auth.email);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        setPin(true);\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    // onHidePin={closeAuthDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const closeAuthDialog = () => {\r\n        setPin(false);\r\n        setRegister(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                // !isMobile ?\r\n                //     <div className='modalMenuDetail' style={{\r\n                //         display: props.isShow ? 'block' : 'none'\r\n                //     }} onClick={closeModal}\r\n                //     >\r\n                //         <div className='modal-content-menudetail' onClick={e => e.stopPropagation()}>\r\n                //             {\r\n                //                 menuSelect ?\r\n                //                     <span className='iconBack' onClick={backModal}>\r\n                //                         <img src={backLogo} className='backLogo' alt='' />\r\n                //                     </span>\r\n                //                     :\r\n                //                     <span className='iconClose' onClick={closeModal}>\r\n                //                         <img src={closeLogo} className='closeLogo' alt='' />\r\n                //                     </span>\r\n                //             }\r\n\r\n                //             <div className='menuDetail-layout'>\r\n                //                 <div className='menuContain-left'>\r\n                //                     <div className='menuBanner'>\r\n                //                         <img className='menuimg' src={props.datas.foodImage} alt='' />\r\n                //                     </div>\r\n\r\n                //                     <div className='menu-detail'>\r\n                //                         {/* <div className='menu-star'>\r\n                //                             <img className='menu-star-img' src={StarIcon} alt='' />\r\n                //                             <h6 className='menu-star-rating'>5.0</h6>\r\n                //                         </div> */}\r\n\r\n                //                         <div className='menu-name'>\r\n                //                             {props.datas.foodName}\r\n                //                         </div>\r\n\r\n                //                         <div className='menu-category'>\r\n                //                             {findCateg}\r\n                //                         </div>\r\n\r\n                //                         <div className='menu-price'>\r\n                //                             {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                //                         </div>\r\n                //                     </div>\r\n                //                 </div>\r\n\r\n                //                 <div className='menuContain-right'>\r\n                //                     {\r\n                //                         menuSelect ?\r\n                //                             <Scrollbars style={{ height: \"calc(100% - 133px)\" }}>\r\n                //                                 <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                //                             </Scrollbars>\r\n                //                             :\r\n                //                             <div className='menuDesc'>\r\n                //                                 <div className='menuDesc-title'>\r\n                //                                     Description\r\n                //                                 </div>\r\n                //                                 <div className='menuDesc-content'>\r\n                //                                     {props.datas.foodDesc}\r\n                //                                 </div>\r\n                //                             </div>\r\n                //                     }\r\n\r\n                //                     <div className='menuButton'>\r\n                //                         {\r\n                //                             menuSelect ?\r\n                //                                 <div className='openMenuSelection' style={{\r\n                //                                     backgroundColor:\r\n                //                                         AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                //                                             '#4bb7ac'\r\n                //                                             :\r\n                //                                             !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                //                                                 '#4bb7ac'\r\n                //                                                 :\r\n                //                                                 AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                //                                                     '#4bb7ac'\r\n                //                                                     :\r\n                //                                                     !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                //                                                         '#4bb7ac'\r\n                //                                                         :\r\n                //                                                         '#aaaaaa'\r\n                //                                 }} onClick={addtoCart}>\r\n                //                                     {\r\n                //                                         !loadingButton ?\r\n                //                                             <Loader\r\n                //                                                 type=\"ThreeDots\"\r\n                //                                                 color=\"#ffffff\"\r\n                //                                                 height={70}\r\n                //                                                 width={70}\r\n                //                                             />\r\n                //                                             :\r\n                //                                             <h2 className='add-words'>\r\n                //                                                 {\r\n                //                                                     AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                //                                                         `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                //                                                         :\r\n                //                                                         `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                //                                                 }\r\n                //                                             </h2>\r\n                //                                     }\r\n                //                                 </div>\r\n                //                                 :\r\n                //                                 <div onClick={openMenuSelect} className='openMenuSelection'>\r\n                //                                     <h2 className='add-words'>\r\n                //                                         PESAN\r\n                //                                     </h2>\r\n                //                                 </div>\r\n                //                         }\r\n                //                     </div>\r\n                //                 </div>\r\n                //             </div>\r\n                //         </div>\r\n                //     </div>\r\n                //     :\r\n                    <div className='mob-modalMenuDetail' style={{\r\n                        display: props.isShow ? 'block' : 'none'\r\n                    }} onClick={closeModal}\r\n                    >\r\n                        <div className='mob-modal-content-menudetail' onClick={e => e.stopPropagation()}>\r\n                            <div className='mob-menuBanner'>\r\n                                <img className='mob-menuimg' src={props.datas.foodImage} alt='' />\r\n                                {\r\n                                    menuSelect ?\r\n                                        <span className='mob-iconClose' onClick={backModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                        :\r\n                                        <span className='mob-iconClose' onClick={closeModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='mob-menuContain'>\r\n                                <div className='mob-inside-menuContain' style={{ boxShadow: menuSelect ? \"0px 5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n                                    <div className='mob-menu-detail'>\r\n                                        {/* <div className='mob-menu-star'>\r\n                                            <img className='mob-menu-star-img' src={StarIcon} alt='' />\r\n                                            <h6 className='mob-menu-star-rating'>{props.datas.foodRating}</h6>\r\n                                        </div> */}\r\n\r\n                                        <div className='mob-menu-name'>\r\n                                            {props.datas.foodName}\r\n                                        </div>\r\n\r\n                                        <div className='mob-menu-category'>\r\n                                            {findCateg}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-price'>\r\n                                        {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    menuSelect ?\r\n                                        <Scrollbars style={{ height: \"calc(88vh - 375px)\" }}>\r\n                                            <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                                        </Scrollbars>\r\n                                        :\r\n                                        <div className='mob-menuDesc'>\r\n                                            <div className='mob-menu-desc'>\r\n                                                {props.datas.foodDesc}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                <div className='mob-menuButton' style={{ boxShadow: menuSelect ? \"0px -5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n\r\n                                    {\r\n                                        menuSelect ?\r\n                                            <div className='mob-openMenuSelection' style={{\r\n                                                backgroundColor:\r\n                                                    AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                        '#4bb7ac'\r\n                                                        :\r\n                                                        !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                            '#4bb7ac'\r\n                                                            :\r\n                                                            AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                '#4bb7ac'\r\n                                                                :\r\n                                                                !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                                    '#4bb7ac'\r\n                                                                    :\r\n                                                                    '#aaaaaa'\r\n                                            }} onClick={addtoCart}>\r\n                                                {\r\n                                                    !loadingButton ?\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            color=\"#ffffff\"\r\n                                                            height={70}\r\n                                                            width={70}\r\n                                                        />\r\n                                                        :\r\n                                                        <h2 className='mob-add-words'>\r\n                                                            {\r\n                                                                AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                                                                    :\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                                                            }\r\n                                                        </h2>\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            <div onClick={openMenuSelect} className='mob-openMenuSelection' style={{ backgroundColor: '#4bb7ac' }}>\r\n                                                <h2 className='mob-add-words'>\r\n                                                    PESAN\r\n                                                </h2>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n            {showRegisterDialog()}\r\n            {showPinDialog()}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MenuDetail","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js",["393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport PinDialog from \"./PinDialog\";\r\nimport ConfirmPinDialog from \"./ConfirmPinDialog\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\n\r\nconst RegisterDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false);\r\n    const [pinDialog, setPin] = useState(false);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [lat, setLat] = useState('');\r\n    const [lon, setLon] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    // if(AuthRedu.dataRegister) {\r\n    //     setName(AuthRedu.dataRegister.full_name);\r\n    //     setEmail(AuthRedu.dataRegister.email);\r\n    //     setPhone(AuthRedu.dataRegister.phone_number);\r\n    // }\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideRegister()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideRegister()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openLoginDialog = () => {\r\n        setLogin(true);\r\n    }\r\n\r\n    const showLoginDialog = () => {\r\n        if (loginDialog) {\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = (e) => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkName() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkPhone() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        // this.props.LoadingButton()\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: name,\r\n            phone_number: phone,\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: false });\r\n\r\n        setPin(true);\r\n        // setConfirmPin(true);\r\n        // setForgotPin(true);\r\n        // props.onHideRegister();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const checkName = () => {\r\n        if (name.length > 0) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Name cannot be empty.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const checkPhone = () => {\r\n        if (phone.startsWith(\"08\")) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Phone not valid.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onChange = (value) => {\r\n        console.log(value);\r\n    }\r\n\r\n    const closeRegisterFlowDialog = () => {\r\n        setConfirmPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeLoginFlowDialog = () => {\r\n        setPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeForgotFlowDialog = () => {\r\n        setForgotPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const showDialog = (value) => {\r\n        if(pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                    onShowConfirm={() => setConfirmPin(true)}\r\n                    onShowForgotPin={() => setForgotPin(true)}\r\n                    onHideLoginFlow={closeLoginFlowDialog}\r\n                />\r\n            )\r\n        } else if(loginDialog){\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                    onShowPin={() => setPin(true)}\r\n                />\r\n            )\r\n        } \r\n        else if(confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                    onHideRegisterFlow={closeRegisterFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                    onHideForgotFlow={closeForgotFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='text' className='textfieldinput-auth' placeholder=\"Nama Lengkap\" onChange={handleName} />\r\n                        <input type='tel' className='textfieldinput-auth' placeholder=\"Nomor Handphone (Whatsapp)\" onChange={handlePhone} />\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {!isCaptcha || (\r\n                                        <ReCAPTCHA sitekey=\"asd\" onChange={onChange} />\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={6}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                        \r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={openLoginDialog}>LOGIN SAJA</p>\r\n                                <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                    <div className=\"wordsButton-auth\">\r\n                                        NEXT\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\FailedModal.js",["406"],"import React from \"react\";\r\nimport Loader from 'react-loader-spinner';\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png';\r\nimport '../../Asset/scss/FailedModal.scss'\r\n\r\nconst FailedModal = (props) => {\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <div className='modalFailedPage' style={{\r\n            display: props.isShow ? 'block' : 'none'\r\n        }} onClick={closeModal}>\r\n            <div className='modalFailedContent' onClick={e => e.stopPropagation()}>\r\n                <span className='iconCloseNarrow-failed' onClick={closeModal}>\r\n                    <img src={closeNarrow} className='closeLogoNarrow-failed' alt='' />\r\n                </span>\r\n\r\n                <div className='modalFailed-Layout'>\r\n                    <h1 className='modalFailed-Title'>Jaringan Anda terputus. Silahkan refresh broweser Anda.</h1>\r\n\r\n                    <div className='modalFailed-Check'>\r\n                        <div className='modalFailed-cancel' onClick={closeModal}>\r\n                            Tutup\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailedModal","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js",["407","408","409","410"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport Cookies from \"js-cookie\";\r\nimport PikaButton from \"../../../Component/Button/PikaButton\";\r\n\r\nconst ConfirmResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPin, setConfirmResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [successStatus, setSuccessStatus] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const backToHome = (e) => {\r\n        window.location.href = '/'\r\n    }\r\n\r\n    const handleConfirmResetPin = (e) => {\r\n        setConfirmResetPin(e);\r\n    }\r\n\r\n    const checkConfirmResetPin = () => {\r\n        if (AuthRedu.dataResetPin.currentPin === confirmResetPin) {\r\n            return true;\r\n          } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n          }\r\n    };\r\n\r\n    const handleResetPin = (e) => {\r\n        if (checkConfirmResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            // email: email\r\n            pin : confirmResetPin\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/reset-pin/\" + AuthRedu.dataPinToken + \"/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                setSuccessStatus(true);\r\n                var lastLink = { value: window.location.origin}\r\n                Cookies.set(\"lastLink\", lastLink,{ expires: 1});\r\n                localStorage.clear();\r\n                Cookies.remove(\"auth\");\r\n                dispatch({ type: 'DONELOAD' });\r\n                // props.DoneLoad();\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message);\r\n                    // setSuccessStatus(true);\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className=\"blankSpace\">\r\n\r\n                                            </div>\r\n\r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className='buttonSide-auth top270'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmResetPinDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js",["411","412","413","414","415","416","417","418","419","420","421"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport ConfirmPinDialog from './ConfirmPinDialog';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NotifModal from '../Modal/NotifModal';\r\n\r\nconst PinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [pin, setPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isLoginStep, setIsLoginStep] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHidePin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHidePin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openConfirmPinDialog = () => {\r\n\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            pin: pin\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        setIsLoginStep(false);\r\n        // setConfirmPin(true);\r\n        props.onHidePin();\r\n        props.onShowConfirm();\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            username: AuthRedu.dataLogin.email,\r\n            pin: pin,\r\n            fcm_token: AllRedu.fcmToken\r\n        };\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            setSuccessMessage(\"Login Berhasil.\");\r\n            setTimeout(() => {\r\n                auth.isLogged = true;\r\n                auth.token = res.data.token;\r\n                auth.new_event = res.data.new_event;\r\n                auth.recommendation_status = res.data.recommendation_status;\r\n                auth.is_email_verified = res.data.is_email_verified;\r\n                auth.email = AuthRedu.dataLogin.email;\r\n                Cookies.set(\"auth\", auth, { expires: 1 });\r\n                var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n                var latitude = getLocation.lat\r\n                var longitude = getLocation.lon\r\n                // props.onHidePin()\r\n                props.onHideLoginFlow()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }, 1000);\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            // window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        })  \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if (confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openForgotPinDialog = () => {\r\n        props.onHidePin();\r\n        props.onShowForgotPin();\r\n        // setForgotPin(true);\r\n    }\r\n\r\n    const showForgotPinDialog = () => {\r\n        if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handlePin = (e) => {\r\n        setPin(e);\r\n    }\r\n\r\n    const checkPin = () => {\r\n        if (pin.length < 6) {\r\n            setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const showNotifModal = () => {\r\n        if (AllRedu.buttonLoad === false) {\r\n            return <NotifModal isShowNotif={AllRedu.buttonLoad} responseMessage={successMessage} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n            }\r\n            {showNotifModal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PinDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js",["422","423","424"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../Asset/scss/MenuSelection.scss'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Autosize from 'autosize'\r\nimport { ValidQty } from '../../Redux/Actions'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\n// const checkboxDummyData = [\r\n//     { additionname: 'topping', maxchoice: 3, isMandat: true, listaddition: [{ name: 'coklat', price: 5000, isChecked: false }, { name: 'keju', price: 6000, isChecked: false }, { name: 'pisang', price: 7000, isChecked: false }, { name: 'wijen', price: 8000, isChecked: false }] },\r\n//     { additionname: 'boba', maxchoice: 2, isMandat: false, listaddition: [{ name: 'rainbow', price: 1000, isChecked: false }, { name: 'jelly', price: 2000, isChecked: false }, { name: 'pudding', price: 3000, isChecked: false }, { name: 'pearl', price: 4000, isChecked: false }] },\r\n// ]\r\n\r\n// const radioDummyData = [\r\n//     { additionname: 'level pedas', isMandat: true, listaddition: [{ name: 'tidak pedas', isChecked: false }, { name: 'pedas', isChecked: false }, { name: 'pedas mampus', isChecked: false }] },\r\n//     { additionname: 'level dingin', isMandat: false, listaddition: [{ name: 'tidak dingin', isChecked: false }, { name: 'dingin', isChecked: false }, { name: 'dingin mampus', isChecked: false }] },\r\n// ]\r\n\r\nconst MenuSelection = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [detailCategory, setdetailCategory] = useState([\r\n        {\r\n            name: \"\",\r\n            amount: 1,\r\n        },\r\n    ])\r\n    const [note, setnote] = useState('')\r\n    const [checkboxVal, setcheckboxVal] = useState([])\r\n    const [checkboxData, setcheckboxData] = useState([])\r\n    const [checkboxMatch, setcheckboxMatch] = useState([])\r\n    const [totalCheckMandat, settotalCheckMandat] = useState(0)\r\n    const [indexCheckMandat, setindexCheckMandat] = useState(null)\r\n\r\n    const [radioVal, setradioVal] = useState([])\r\n    const [radioData, setradioData] = useState([])\r\n    const [radioMatch, setradioMatch] = useState([])\r\n    const [totalRadioMandat, settotalRadioMandat] = useState(0)\r\n    // const [indexGroupRadioMandat, setindexGroupRadioMandat] = useState(null)\r\n    // const [indexEachRadioMandat, setindexEachRadioMandat] = useState(null)\r\n\r\n    const [updateDataEdit, setupdateDataEdit] = useState(false)\r\n    const [updateEditChoice, setupdateEditChoice] = useState(false)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    useEffect(() => {\r\n        Autosize(document.getElementById('note'))\r\n\r\n        //hit API in order to get response of product detail v2\r\n        let uuid = uuidV4()\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(`${address}/home/v2/detail/product/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\": \"PUBLIC\",\r\n                \"pid\": props.datas.productId,\r\n            },\r\n            method: 'GET'\r\n        }).then(productRes => {\r\n            let productDet = productRes.data.results.extra_menus.extra_menu\r\n            let radioResponse = []\r\n            let checkboxResponse = []\r\n            productDet.forEach(valProduct => {\r\n                if (valProduct.menu_type === 'RADIO') {\r\n                    radioResponse.push(valProduct)\r\n                } else {\r\n                    checkboxResponse.push(valProduct)\r\n                }\r\n            })\r\n\r\n            let radioData = []\r\n            let radioValData = []\r\n            radioResponse.forEach(valRadRes => {\r\n                let listadditionradio = []\r\n                valRadRes.menu_extra_item.forEach(valList => {\r\n                    listadditionradio.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                radioData.push({\r\n                    additionname: valRadRes.menu_name,\r\n                    isMandat: valRadRes.is_mandatory,\r\n                    listaddition: listadditionradio\r\n                })\r\n                radioValData.push([])\r\n            })\r\n\r\n            let checkboxData = []\r\n            let checkValData = []\r\n            checkboxResponse.forEach(valCheckRes => {\r\n                let listadditioncheckbox = []\r\n                valCheckRes.menu_extra_item.forEach(valList => {\r\n                    listadditioncheckbox.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                checkboxData.push({\r\n                    additionname: valCheckRes.menu_name,\r\n                    maxchoice: valCheckRes.max_choice,\r\n                    isMandat: valCheckRes.is_mandatory,\r\n                    listaddition: listadditioncheckbox\r\n                })\r\n                checkValData.push([])\r\n            })\r\n\r\n            //set mandatory for checkboxes\r\n            let mandatCheckAvailability = checkboxData.length\r\n            let mandatCheckLength = checkboxData.length\r\n            let checkboxMandat = []\r\n            let totalMandatforCheck = 0\r\n            checkboxData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    checkboxMandat.push(false)\r\n                    totalMandatforCheck++\r\n                    mandatCheckAvailability = mandatCheckAvailability - 1\r\n                } else {\r\n                    checkboxMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatCheckLength === mandatCheckAvailability) {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: true })\r\n            }\r\n            setcheckboxMatch(checkboxMandat)\r\n            settotalCheckMandat(totalMandatforCheck)\r\n\r\n            //set mandatory for radio\r\n            let mandatRadioAvailability = radioData.length\r\n            let mandatRadioLength = radioData.length\r\n            let radioMandat = []\r\n            let totalMandatforRadio = 0\r\n            radioData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    radioMandat.push(false)\r\n                    totalMandatforRadio++\r\n                    mandatRadioAvailability = mandatRadioAvailability - 1\r\n                } else {\r\n                    radioMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatRadioLength === mandatRadioAvailability) {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: true })\r\n            }\r\n            setradioMatch(radioMandat)\r\n            settotalRadioMandat(totalMandatforRadio)\r\n\r\n            if (!AllRedu.openMenuCart) {\r\n                var datas = props.datas\r\n                var list = []\r\n                if (datas.foodExt !== undefined) {\r\n                    datas.foodExt.map((data) => {\r\n                        return list.push({\r\n                            name: data.name,\r\n                            amount: data.amount + 1,\r\n                        });\r\n                    });\r\n                    props.ValidQty(1)\r\n                    setdetailCategory(list);\r\n                    setradioData(radioData)\r\n                    setcheckboxData(checkboxData)\r\n                    setradioVal(radioValData)\r\n                    setcheckboxVal(checkValData)\r\n                }\r\n            } else {\r\n                let amountofProd = props.datas.foodExt\r\n                amountofProd.forEach((val) => {\r\n                    props.ValidQty(val.amount)\r\n                })\r\n                setdetailCategory(props.datas.foodExt)\r\n                setnote(props.datas.foodNote)\r\n                setradioData(radioData)\r\n                setcheckboxData(checkboxData)\r\n                dispatch({ type: 'CHECKBOXES', payload: props.datas.foodListCheckbox })\r\n                dispatch({ type: 'RADIOBUTTON', payload: props.datas.foodListRadio })\r\n                setupdateDataEdit(true)\r\n                setradioVal(props.datas.foodListRadio)\r\n                setcheckboxVal(props.datas.foodListCheckbox)\r\n            }\r\n            dispatch({ type: 'DONELOAD' })\r\n            props.loadingButton()\r\n        }).catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (AllRedu.openMenuCart && updateDataEdit) {\r\n            //this function is used for replace api data with edit data (CHECKBOX)\r\n            let editCheckbox = []\r\n            let newlistcheckboxAddition = []\r\n            let foodListCheckbox = props.datas.foodListCheckbox\r\n\r\n            checkboxData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListCheckbox.forEach((foodfirstVal, indfoodFirst) => {\r\n                        let countNoMatch = 1\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistcheckboxAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    if (countNoMatch === foodfirstVal.length) {\r\n                                        newlistcheckboxAddition.push({\r\n                                            name: secondVal.name,\r\n                                            price: secondVal.price,\r\n                                            isChecked: false\r\n                                        })\r\n                                        countNoMatch = 1\r\n                                    } else {\r\n                                        countNoMatch++\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListCheckbox[indfirstVal].length === 0) {\r\n                        newlistcheckboxAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editCheckbox.push({\r\n                    additionname: firstVal.additionname,\r\n                    maxchoice: firstVal.maxchoice,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistcheckboxAddition\r\n                })\r\n                newlistcheckboxAddition = []\r\n            })\r\n            let editTotalcheckMandat = 0\r\n            let editArraycheckMandat = []\r\n            editCheckbox.forEach(valEdit => {\r\n                editArraycheckMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalcheckMandat++\r\n                }\r\n            })\r\n            if (editTotalcheckMandat === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(editArraycheckMandat)\r\n\r\n            //this function is used for replace api data with edit data (RADIO)\r\n            let editRadio = []\r\n            let newlistradioAddition = []\r\n            let foodListRadio = props.datas.foodListRadio\r\n\r\n            radioData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListRadio.forEach((foodfirstVal, indfoodFirst) => {\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: false\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListRadio[indfirstVal].length === 0) {\r\n                        newlistradioAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editRadio.push({\r\n                    additionname: firstVal.additionname,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistradioAddition\r\n                })\r\n                newlistradioAddition = []\r\n            })\r\n            let editTotalradioMandat = 0\r\n            let editArrayradioMandat = []\r\n            editRadio.forEach(valEdit => {\r\n                editArrayradioMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalradioMandat++\r\n                }\r\n            })\r\n            if (editTotalradioMandat === totalRadioMandat) {\r\n                if (totalRadioMandat === 0) {\r\n                    dispatch({ type: 'MANDATRADIO', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATRADIO', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            }\r\n            setradioMatch(editArrayradioMandat)\r\n\r\n            setcheckboxData(editCheckbox)\r\n            setradioData(editRadio)\r\n            setupdateDataEdit(false)\r\n            setupdateEditChoice(true)\r\n        }\r\n    }, [radioVal, checkboxVal])\r\n\r\n    const checkboxArrData = () => {\r\n        return checkboxData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='checkbox-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname.toUpperCase().toLowerCase()}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Max {listname.maxchoice} items</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='box-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='checkBox-side'>\r\n                                                        <div className='check-box' />\r\n                                                        <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='box-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='checkBox-side'>\r\n                                                    <div className='check-box' />\r\n                                                    <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const radioArrData = () => {\r\n        return radioData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='radio-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Pilih Salah Satu</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='radiobox-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='radio-side'>\r\n                                                        <div className='radio-circle' />\r\n                                                        <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='radiobox-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='radio-side'>\r\n                                                    <div className='radio-circle' />\r\n                                                    <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const onCheckboxChange = (e, indexlistname, listprice, name, max, mandat) => {\r\n        var checkedChecks = document.querySelectorAll(`.${name}:checked`)\r\n        if (checkedChecks.length > max) {\r\n            e.target.checked = false\r\n        } else {\r\n            let checkMandat = [...checkboxMatch]\r\n            if (mandat) {\r\n                checkMandat[indexlistname] = mandat\r\n                setindexCheckMandat(indexlistname)\r\n            }\r\n\r\n            let checkboxArr = [...checkboxVal]\r\n            if (e.target.checked) {\r\n                checkboxArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n                setcheckboxVal(checkboxArr)\r\n                dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n            } else {\r\n                checkboxArr[indexlistname] = checkboxArr[indexlistname].filter(val => val.name !== e.target.value)\r\n                setcheckboxVal(checkboxArr)\r\n                let sizeArr = 0\r\n                checkboxArr.forEach((firstVal) => {\r\n                    firstVal.forEach((nestedVal) => {\r\n                        if (nestedVal.name) {\r\n                            sizeArr += 1\r\n                        }\r\n                    })\r\n                })\r\n                if (sizeArr > 0) {\r\n                    dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n                    if (checkboxArr[indexlistname].length === 0) {\r\n                        checkMandat[indexlistname] = false\r\n                        // dispatch({ type: 'MANDATCHECK', payload: false })\r\n\r\n                    }\r\n                } else {\r\n                    checkMandat[indexlistname] = false\r\n                    dispatch({ type: 'CHECKBOXES', payload: [] })\r\n                    // dispatch({ type: 'MANDATCHECK', payload: false })\r\n                }\r\n            }\r\n\r\n            // console.log(checkMandat);\r\n            let totalMandatCheck = 0\r\n            checkMandat.forEach(valMandat => {\r\n                if (valMandat) {\r\n                    totalMandatCheck++\r\n                }\r\n            })\r\n            if (totalMandatCheck === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(checkMandat)\r\n        }\r\n    }\r\n\r\n    const onRadioChange = (e, indexlistname, mandat, listprice, indexlistadd) => {\r\n        let radioMandat = [...radioMatch]\r\n        if (mandat) {\r\n            radioMandat[indexlistname] = mandat\r\n        }\r\n        // console.log(indexlistname, indexGroupRadioMandat, 'selectGroupRadio');\r\n        // console.log(indexlistadd, indexEachRadioMandat, 'selectEachRadio');\r\n        // if (indexlistname === indexGroupRadioMandat) {\r\n        //     if (indexlistadd === indexEachRadioMandat) {\r\n        //         console.log('yoo');\r\n        //         if (e.target.checked) {\r\n        //             e.target.checked = false\r\n        //         }\r\n        //     }\r\n        // }\r\n        let radiobuttonArr = [...radioVal]\r\n        radiobuttonArr[indexlistname].pop()\r\n        radiobuttonArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n        setradioVal(radiobuttonArr)\r\n        dispatch({ type: 'RADIOBUTTON', payload: radiobuttonArr })\r\n\r\n        // console.log(radioMandat);\r\n        let totalMandatRadio = 0\r\n        radioMandat.forEach(valMandat => {\r\n            if (valMandat) {\r\n                totalMandatRadio++\r\n            }\r\n        })\r\n        if (totalMandatRadio === totalRadioMandat) {\r\n            if (totalRadioMandat === 0) {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: true })\r\n            }\r\n        } else {\r\n            dispatch({ type: 'MANDATRADIO', payload: false })\r\n        }\r\n        setradioMatch(radioMandat)\r\n        // setindexGroupRadioMandat(indexlistname)\r\n        // setindexEachRadioMandat(indexlistadd)\r\n    }\r\n\r\n    const handleDecrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e && food.amount > 1) {\r\n                food.amount = food.amount - 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleIncrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e) {\r\n                food.amount = food.amount + 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        return detailCategory.map((food, ind) => {\r\n            return (\r\n                <div key={ind} className='amount-box-inside'>\r\n                    <div className='minus-box' style={{ backgroundColor: AllRedu.validQTY > 1 ? '#4bb7ac' : '#767676' }} onClick={() => handleDecrease(food)}>\r\n                        <div className='minus-sym'>\r\n                            -\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='number-area'>\r\n                        {food.amount}\r\n                    </div>\r\n\r\n                    <div className='plus-box' onClick={() => handleIncrease(food)}>\r\n                        <div className='plus-sym'>\r\n                            +\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        setnote(e.target.value)\r\n    }\r\n\r\n    var thedata = {\r\n        detailCategory: detailCategory,\r\n        note: note ? note : '',\r\n        foodCategory: AllRedu.openMenuCart ? props.datas.foodCategory : AllRedu.foodCateg,\r\n        listcheckbox: checkboxVal,\r\n        listradio: radioVal\r\n    }\r\n    props.handleData(thedata)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isMobile ?\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { ValidQty })(MenuSelection)","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js",["425","426","427","428","429"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\n\r\nconst ForgotPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideForgotPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideForgotPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/forget-pin\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    text: 'Link verifikasi telah dikirim ke alamat email Anda. Segera lakukan reset PIN untuk melanjutkan proses ini.',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    closeOnConfirm: false,\r\n                    // timer: 3000\r\n                }).then(() => {\r\n                    props.onHideForgotFlow();\r\n                    dispatch({ type: 'DONELOAD' });\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                            \r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ForgotPinDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js",["430","431","432","433","434","435","436","437"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport PinDialog from \"./PinDialog\";\r\n\r\nconst LoginDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideLogin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideLogin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        // setPin(true);\r\n        props.onHideLogin();\r\n        props.onShowPin();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js",["438","439","440","441","442","443","444","445","446","447"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst ConfirmPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false)\r\n    const [confirmPin, setConfirmPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleConfirmPin = (e) => {\r\n        setConfirmPin(e);\r\n    }\r\n\r\n    const checkConfirmPin = () => {\r\n        if (AuthRedu.dataRegister.pin === confirmPin) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        if (checkConfirmPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            password: confirmPin,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            gender: \"MALE\",\r\n            birth_day: \"01011970\",\r\n            token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/register\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Register Berhasil.',\r\n                    // showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    // closeOnConfirm: false,\r\n                    timer: 3000\r\n                }).then(() => {\r\n                    handleLogin();\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n                setCaptchaCounter(captchaCounter + 1);\r\n            });\r\n\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        const data = {\r\n            username: AuthRedu.dataRegister.email,\r\n            pin: confirmPin,\r\n            fcm_token: AllRedu.fcmToken\r\n        };\r\n\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            auth.isLogged = true;\r\n            auth.token = res.data.token;\r\n            auth.new_event = res.data.new_event;\r\n            auth.recommendation_status = res.data.recommendation_status;\r\n            auth.is_email_verified = res.data.is_email_verified;\r\n            auth.email = AuthRedu.dataRegister.email;\r\n            Cookies.set(\"auth\", auth, { expires: 1 });\r\n            var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n            var latitude = getLocation.lat\r\n            var longitude = getLocation.lon\r\n            // props.onHideConfirmPin()\r\n            props.onHideRegisterFlow();\r\n            dispatch({ type: 'DONELOAD' });\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value;\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            //     window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        }) \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmPinDialog","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\OrderListStatusModal.js",["448"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/OrderListStatusModal.scss'\r\nimport closeLogo from '../../Asset/Icon/closeNarrow.png';\r\nimport checkListLogo from '../../Asset/Icon/checklistIcon.png'\r\n\r\nconst OrderListStatus = (props) => {\r\n    const statusName = ['Semua Status', 'Menunggu Pembayaran', 'Menunggu Konfirmasi', 'Sedang Dimasak', 'Makanan Tiba']\r\n    const [radioStatus, setradioStatus] = useState(props.sendIndexStatus)\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHideStatusModal()\r\n    }\r\n\r\n    const onChangeRadio = (ind) => {\r\n        setradioStatus(ind)\r\n    }\r\n\r\n    const chooseStatus = () => {\r\n        props.getStatusData(radioStatus)\r\n        props.onHideStatusModal()\r\n    }\r\n\r\n    const statusList = () => {\r\n        return statusName.map((statName, ind) => {\r\n            return (\r\n                <div key={ind} className='statusOrder-eachList'>\r\n                    <div className='statusOrder-name'>\r\n                        {statName}\r\n                    </div>\r\n\r\n                    <div className='statusOrder-radioButton'>\r\n                        <div class=\"pretty p-image p-round p-jelly\">\r\n                            <input type=\"radio\" name=\"icon_solid\" onChange={() => onChangeRadio(ind)} defaultChecked={radioStatus === ind ? true : false} />\r\n                            <div class=\"state\">\r\n                                <img class=\"image\" src={checkListLogo} />\r\n                                <label></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='modalStatusOrder' style={{\r\n            display: props.isShowStatusModal ? 'block' : 'none'\r\n        }} onClick={closeModal}\r\n        >\r\n            <div className='modal-content-statusOrder' onClick={e => e.stopPropagation()}>\r\n                <div className='modalTop-statusOrder'>\r\n                    <span className='iconClose-statusOrder' onClick={closeModal}>\r\n                        <img src={closeLogo} className='closeLogo-statusOrder' alt='' />\r\n                    </span>\r\n\r\n                    <div className='title-statusOrder'>\r\n                        Pilih Status Yang Ingin Dilihat\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='modalContent-statusOrder'>\r\n                    {statusList()}\r\n                </div>\r\n\r\n                <div className='statusOrder-chooseButton' onClick={() => chooseStatus()}>\r\n                    PILIH\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListStatus","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\firebaseConfig.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StatusCartManualLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Status\\StatusCartManualView.js",["449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"476","severity":1,"message":"477","line":65,"column":16,"nodeType":"478","messageId":"479","endLine":65,"endColumn":18},{"ruleId":"472","severity":1,"message":"480","line":78,"column":24,"nodeType":"474","messageId":"475","endLine":78,"endColumn":37},{"ruleId":"481","severity":1,"message":"482","line":17,"column":8,"nodeType":"483","endLine":17,"endColumn":10,"suggestions":"484"},{"ruleId":"472","severity":1,"message":"485","line":5,"column":3,"nodeType":"474","messageId":"475","endLine":5,"endColumn":18},{"ruleId":"472","severity":1,"message":"486","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":34},{"ruleId":"481","severity":1,"message":"487","line":31,"column":6,"nodeType":"483","endLine":31,"endColumn":8,"suggestions":"488"},{"ruleId":"472","severity":1,"message":"486","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":34},{"ruleId":"481","severity":1,"message":"487","line":21,"column":8,"nodeType":"483","endLine":21,"endColumn":10,"suggestions":"489"},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"486","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":34},{"ruleId":"472","severity":1,"message":"490","line":5,"column":10,"nodeType":"474","messageId":"475","endLine":5,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"491","line":15,"column":26,"nodeType":"474","messageId":"475","endLine":15,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":75,"column":29,"nodeType":"494","endLine":75,"endColumn":89},{"ruleId":"492","severity":1,"message":"493","line":92,"column":25,"nodeType":"494","endLine":92,"endColumn":76},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"495","line":18,"column":11,"nodeType":"474","messageId":"475","endLine":18,"endColumn":14},{"ruleId":"472","severity":1,"message":"496","line":19,"column":9,"nodeType":"474","messageId":"475","endLine":19,"endColumn":16},{"ruleId":"472","severity":1,"message":"497","line":27,"column":12,"nodeType":"474","messageId":"475","endLine":27,"endColumn":22},{"ruleId":"472","severity":1,"message":"498","line":28,"column":12,"nodeType":"474","messageId":"475","endLine":28,"endColumn":24},{"ruleId":"472","severity":1,"message":"491","line":28,"column":26,"nodeType":"474","messageId":"475","endLine":28,"endColumn":41},{"ruleId":"499","severity":1,"message":"500","line":56,"column":17,"nodeType":"474","messageId":"501","endLine":56,"endColumn":22},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"502","line":14,"column":21,"nodeType":"474","messageId":"475","endLine":14,"endColumn":31},{"ruleId":"503","severity":1,"message":"504","line":101,"column":33,"nodeType":"494","endLine":101,"endColumn":130},{"ruleId":"472","severity":1,"message":"505","line":12,"column":19,"nodeType":"474","messageId":"475","endLine":12,"endColumn":25},{"ruleId":"472","severity":1,"message":"506","line":14,"column":8,"nodeType":"474","messageId":"475","endLine":14,"endColumn":14},{"ruleId":"476","severity":1,"message":"477","line":150,"column":42,"nodeType":"478","messageId":"479","endLine":150,"endColumn":44},{"ruleId":"476","severity":1,"message":"477","line":152,"column":54,"nodeType":"478","messageId":"479","endLine":152,"endColumn":56},{"ruleId":"476","severity":1,"message":"477","line":318,"column":18,"nodeType":"478","messageId":"479","endLine":318,"endColumn":20},{"ruleId":"476","severity":1,"message":"477","line":330,"column":16,"nodeType":"478","messageId":"479","endLine":330,"endColumn":18},{"ruleId":"507","severity":1,"message":"508","line":872,"column":41,"nodeType":"509","messageId":"510","endLine":872,"endColumn":43},{"ruleId":"507","severity":1,"message":"511","line":929,"column":51,"nodeType":"509","messageId":"510","endLine":929,"endColumn":53},{"ruleId":"472","severity":1,"message":"512","line":4,"column":8,"nodeType":"474","messageId":"475","endLine":4,"endColumn":16},{"ruleId":"472","severity":1,"message":"513","line":5,"column":8,"nodeType":"474","messageId":"475","endLine":5,"endColumn":19},{"ruleId":"472","severity":1,"message":"514","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":22},{"ruleId":"472","severity":1,"message":"515","line":3,"column":8,"nodeType":"474","messageId":"475","endLine":3,"endColumn":23},{"ruleId":"472","severity":1,"message":"516","line":8,"column":8,"nodeType":"474","messageId":"475","endLine":8,"endColumn":21},{"ruleId":"472","severity":1,"message":"505","line":12,"column":19,"nodeType":"474","messageId":"475","endLine":12,"endColumn":25},{"ruleId":"472","severity":1,"message":"506","line":14,"column":8,"nodeType":"474","messageId":"475","endLine":14,"endColumn":14},{"ruleId":"472","severity":1,"message":"517","line":57,"column":5,"nodeType":"474","messageId":"475","endLine":57,"endColumn":16},{"ruleId":"476","severity":1,"message":"477","line":316,"column":20,"nodeType":"478","messageId":"479","endLine":316,"endColumn":22},{"ruleId":"476","severity":1,"message":"477","line":328,"column":18,"nodeType":"478","messageId":"479","endLine":328,"endColumn":20},{"ruleId":"472","severity":1,"message":"518","line":361,"column":11,"nodeType":"474","messageId":"475","endLine":361,"endColumn":16},{"ruleId":"507","severity":1,"message":"508","line":797,"column":43,"nodeType":"509","messageId":"510","endLine":797,"endColumn":45},{"ruleId":"472","severity":1,"message":"519","line":885,"column":9,"nodeType":"474","messageId":"475","endLine":885,"endColumn":17},{"ruleId":"472","severity":1,"message":"520","line":890,"column":9,"nodeType":"474","messageId":"475","endLine":890,"endColumn":21},{"ruleId":"492","severity":1,"message":"493","line":938,"column":25,"nodeType":"494","endLine":938,"endColumn":86},{"ruleId":"492","severity":1,"message":"493","line":943,"column":25,"nodeType":"494","endLine":943,"endColumn":88},{"ruleId":"492","severity":1,"message":"493","line":989,"column":29,"nodeType":"494","endLine":989,"endColumn":92},{"ruleId":"476","severity":1,"message":"521","line":995,"column":58,"nodeType":"478","messageId":"479","endLine":995,"endColumn":60},{"ruleId":"476","severity":1,"message":"521","line":1006,"column":70,"nodeType":"478","messageId":"479","endLine":1006,"endColumn":72},{"ruleId":"492","severity":1,"message":"493","line":1039,"column":31,"nodeType":"494","endLine":1039,"endColumn":94},{"ruleId":"492","severity":1,"message":"493","line":1078,"column":29,"nodeType":"494","endLine":1078,"endColumn":92},{"ruleId":"476","severity":1,"message":"521","line":1084,"column":59,"nodeType":"478","messageId":"479","endLine":1084,"endColumn":61},{"ruleId":"492","severity":1,"message":"493","line":1090,"column":35,"nodeType":"494","endLine":1090,"endColumn":99},{"ruleId":"472","severity":1,"message":"506","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":14},{"ruleId":"472","severity":1,"message":"505","line":7,"column":29,"nodeType":"474","messageId":"475","endLine":7,"endColumn":35},{"ruleId":"472","severity":1,"message":"522","line":19,"column":10,"nodeType":"474","messageId":"475","endLine":19,"endColumn":18},{"ruleId":"507","severity":1,"message":"511","line":621,"column":36,"nodeType":"509","messageId":"510","endLine":621,"endColumn":38},{"ruleId":"472","severity":1,"message":"505","line":8,"column":19,"nodeType":"474","messageId":"475","endLine":8,"endColumn":25},{"ruleId":"476","severity":1,"message":"521","line":58,"column":25,"nodeType":"478","messageId":"479","endLine":58,"endColumn":27},{"ruleId":"472","severity":1,"message":"523","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"505","line":8,"column":29,"nodeType":"474","messageId":"475","endLine":8,"endColumn":35},{"ruleId":"472","severity":1,"message":"506","line":10,"column":8,"nodeType":"474","messageId":"475","endLine":10,"endColumn":14},{"ruleId":"472","severity":1,"message":"524","line":14,"column":8,"nodeType":"474","messageId":"475","endLine":14,"endColumn":20},{"ruleId":"472","severity":1,"message":"525","line":16,"column":8,"nodeType":"474","messageId":"475","endLine":16,"endColumn":17},{"ruleId":"472","severity":1,"message":"526","line":17,"column":8,"nodeType":"474","messageId":"475","endLine":17,"endColumn":19},{"ruleId":"472","severity":1,"message":"527","line":18,"column":8,"nodeType":"474","messageId":"475","endLine":18,"endColumn":20},{"ruleId":"472","severity":1,"message":"528","line":19,"column":8,"nodeType":"474","messageId":"475","endLine":19,"endColumn":16},{"ruleId":"472","severity":1,"message":"529","line":20,"column":8,"nodeType":"474","messageId":"475","endLine":20,"endColumn":20},{"ruleId":"472","severity":1,"message":"530","line":22,"column":8,"nodeType":"474","messageId":"475","endLine":22,"endColumn":16},{"ruleId":"472","severity":1,"message":"531","line":23,"column":8,"nodeType":"474","messageId":"475","endLine":23,"endColumn":17},{"ruleId":"472","severity":1,"message":"532","line":27,"column":8,"nodeType":"474","messageId":"475","endLine":27,"endColumn":23},{"ruleId":"472","severity":1,"message":"533","line":31,"column":32,"nodeType":"474","messageId":"475","endLine":31,"endColumn":45},{"ruleId":"472","severity":1,"message":"534","line":31,"column":47,"nodeType":"474","messageId":"475","endLine":31,"endColumn":55},{"ruleId":"472","severity":1,"message":"522","line":34,"column":10,"nodeType":"474","messageId":"475","endLine":34,"endColumn":18},{"ruleId":"472","severity":1,"message":"535","line":35,"column":10,"nodeType":"474","messageId":"475","endLine":35,"endColumn":20},{"ruleId":"476","severity":1,"message":"477","line":296,"column":39,"nodeType":"478","messageId":"479","endLine":296,"endColumn":41},{"ruleId":"476","severity":1,"message":"477","line":326,"column":39,"nodeType":"478","messageId":"479","endLine":326,"endColumn":41},{"ruleId":"499","severity":1,"message":"536","line":389,"column":21,"nodeType":"474","messageId":"501","endLine":389,"endColumn":34},{"ruleId":"499","severity":1,"message":"537","line":390,"column":21,"nodeType":"474","messageId":"501","endLine":390,"endColumn":33},{"ruleId":"476","severity":1,"message":"477","line":400,"column":53,"nodeType":"478","messageId":"479","endLine":400,"endColumn":55},{"ruleId":"476","severity":1,"message":"477","line":406,"column":60,"nodeType":"478","messageId":"479","endLine":406,"endColumn":62},{"ruleId":"499","severity":1,"message":"536","line":431,"column":21,"nodeType":"474","messageId":"501","endLine":431,"endColumn":34},{"ruleId":"499","severity":1,"message":"537","line":432,"column":21,"nodeType":"474","messageId":"501","endLine":432,"endColumn":33},{"ruleId":"476","severity":1,"message":"477","line":440,"column":53,"nodeType":"478","messageId":"479","endLine":440,"endColumn":55},{"ruleId":"476","severity":1,"message":"477","line":446,"column":60,"nodeType":"478","messageId":"479","endLine":446,"endColumn":62},{"ruleId":"476","severity":1,"message":"477","line":486,"column":20,"nodeType":"478","messageId":"479","endLine":486,"endColumn":22},{"ruleId":"476","severity":1,"message":"477","line":500,"column":21,"nodeType":"478","messageId":"479","endLine":500,"endColumn":23},{"ruleId":"472","severity":1,"message":"538","line":572,"column":11,"nodeType":"474","messageId":"475","endLine":572,"endColumn":16},{"ruleId":"476","severity":1,"message":"477","line":930,"column":31,"nodeType":"478","messageId":"479","endLine":930,"endColumn":33},{"ruleId":"472","severity":1,"message":"539","line":961,"column":5,"nodeType":"474","messageId":"475","endLine":961,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":1170,"column":19,"nodeType":"494","endLine":1170,"endColumn":78},{"ruleId":"476","severity":1,"message":"477","line":1235,"column":39,"nodeType":"478","messageId":"479","endLine":1235,"endColumn":41},{"ruleId":"492","severity":1,"message":"493","line":1324,"column":108,"nodeType":"494","endLine":1324,"endColumn":161},{"ruleId":"492","severity":1,"message":"493","line":1333,"column":108,"nodeType":"494","endLine":1333,"endColumn":161},{"ruleId":"492","severity":1,"message":"493","line":1374,"column":13,"nodeType":"494","endLine":1374,"endColumn":72},{"ruleId":"492","severity":1,"message":"493","line":1381,"column":17,"nodeType":"494","endLine":1381,"endColumn":86},{"ruleId":"492","severity":1,"message":"493","line":1387,"column":17,"nodeType":"494","endLine":1387,"endColumn":86},{"ruleId":"492","severity":1,"message":"493","line":1395,"column":15,"nodeType":"494","endLine":1399,"endColumn":17},{"ruleId":"472","severity":1,"message":"505","line":2,"column":19,"nodeType":"474","messageId":"475","endLine":2,"endColumn":25},{"ruleId":"472","severity":1,"message":"540","line":229,"column":13,"nodeType":"474","messageId":"475","endLine":229,"endColumn":28},{"ruleId":"476","severity":1,"message":"477","line":89,"column":43,"nodeType":"478","messageId":"479","endLine":89,"endColumn":45},{"ruleId":"472","severity":1,"message":"541","line":9,"column":8,"nodeType":"474","messageId":"475","endLine":9,"endColumn":18},{"ruleId":"472","severity":1,"message":"542","line":15,"column":11,"nodeType":"474","messageId":"475","endLine":15,"endColumn":19},{"ruleId":"472","severity":1,"message":"543","line":19,"column":12,"nodeType":"474","messageId":"475","endLine":19,"endColumn":21},{"ruleId":"472","severity":1,"message":"544","line":19,"column":23,"nodeType":"474","messageId":"475","endLine":19,"endColumn":35},{"ruleId":"472","severity":1,"message":"545","line":30,"column":11,"nodeType":"474","messageId":"475","endLine":30,"endColumn":20},{"ruleId":"546","severity":1,"message":"547","line":15,"column":1,"nodeType":"548","endLine":44,"endColumn":2},{"ruleId":"546","severity":1,"message":"547","line":12,"column":1,"nodeType":"548","endLine":33,"endColumn":2},{"ruleId":"546","severity":1,"message":"547","line":21,"column":1,"nodeType":"548","endLine":64,"endColumn":2},{"ruleId":"472","severity":1,"message":"549","line":5,"column":5,"nodeType":"474","messageId":"475","endLine":5,"endColumn":15},{"ruleId":"472","severity":1,"message":"550","line":9,"column":5,"nodeType":"474","messageId":"475","endLine":9,"endColumn":17},{"ruleId":"472","severity":1,"message":"551","line":12,"column":5,"nodeType":"474","messageId":"475","endLine":12,"endColumn":18},{"ruleId":"507","severity":1,"message":"511","line":75,"column":66,"nodeType":"509","messageId":"510","endLine":75,"endColumn":68},{"ruleId":"503","severity":1,"message":"504","line":177,"column":49,"nodeType":"494","endLine":177,"endColumn":146},{"ruleId":"472","severity":1,"message":"552","line":1,"column":16,"nodeType":"474","messageId":"475","endLine":1,"endColumn":24},{"ruleId":"472","severity":1,"message":"553","line":5,"column":8,"nodeType":"474","messageId":"475","endLine":5,"endColumn":16},{"ruleId":"472","severity":1,"message":"530","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"554","line":12,"column":8,"nodeType":"474","messageId":"475","endLine":12,"endColumn":15},{"ruleId":"472","severity":1,"message":"555","line":28,"column":11,"nodeType":"474","messageId":"475","endLine":28,"endColumn":19},{"ruleId":"472","severity":1,"message":"556","line":183,"column":11,"nodeType":"474","messageId":"475","endLine":183,"endColumn":24},{"ruleId":"472","severity":1,"message":"557","line":208,"column":11,"nodeType":"474","messageId":"475","endLine":208,"endColumn":26},{"ruleId":"472","severity":1,"message":"541","line":8,"column":8,"nodeType":"474","messageId":"475","endLine":8,"endColumn":18},{"ruleId":"472","severity":1,"message":"558","line":9,"column":8,"nodeType":"474","messageId":"475","endLine":9,"endColumn":21},{"ruleId":"472","severity":1,"message":"542","line":19,"column":11,"nodeType":"474","messageId":"475","endLine":19,"endColumn":19},{"ruleId":"472","severity":1,"message":"544","line":28,"column":23,"nodeType":"474","messageId":"475","endLine":28,"endColumn":35},{"ruleId":"472","severity":1,"message":"559","line":29,"column":12,"nodeType":"474","messageId":"475","endLine":29,"endColumn":26},{"ruleId":"472","severity":1,"message":"560","line":29,"column":28,"nodeType":"474","messageId":"475","endLine":29,"endColumn":45},{"ruleId":"472","severity":1,"message":"561","line":31,"column":12,"nodeType":"474","messageId":"475","endLine":31,"endColumn":15},{"ruleId":"472","severity":1,"message":"562","line":31,"column":17,"nodeType":"474","messageId":"475","endLine":31,"endColumn":23},{"ruleId":"472","severity":1,"message":"563","line":32,"column":12,"nodeType":"474","messageId":"475","endLine":32,"endColumn":15},{"ruleId":"472","severity":1,"message":"564","line":32,"column":17,"nodeType":"474","messageId":"475","endLine":32,"endColumn":23},{"ruleId":"472","severity":1,"message":"545","line":48,"column":11,"nodeType":"474","messageId":"475","endLine":48,"endColumn":20},{"ruleId":"472","severity":1,"message":"565","line":64,"column":11,"nodeType":"474","messageId":"475","endLine":64,"endColumn":26},{"ruleId":"472","severity":1,"message":"566","line":107,"column":11,"nodeType":"474","messageId":"475","endLine":107,"endColumn":24},{"ruleId":"472","severity":1,"message":"567","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":14},{"ruleId":"472","severity":1,"message":"568","line":12,"column":8,"nodeType":"474","messageId":"475","endLine":12,"endColumn":12},{"ruleId":"472","severity":1,"message":"543","line":22,"column":12,"nodeType":"474","messageId":"475","endLine":22,"endColumn":21},{"ruleId":"472","severity":1,"message":"544","line":22,"column":23,"nodeType":"474","messageId":"475","endLine":22,"endColumn":35},{"ruleId":"472","severity":1,"message":"545","line":34,"column":11,"nodeType":"474","messageId":"475","endLine":34,"endColumn":20},{"ruleId":"472","severity":1,"message":"569","line":3,"column":8,"nodeType":"474","messageId":"475","endLine":3,"endColumn":17},{"ruleId":"472","severity":1,"message":"570","line":7,"column":8,"nodeType":"474","messageId":"475","endLine":7,"endColumn":18},{"ruleId":"472","severity":1,"message":"571","line":16,"column":8,"nodeType":"474","messageId":"475","endLine":16,"endColumn":14},{"ruleId":"472","severity":1,"message":"543","line":27,"column":12,"nodeType":"474","messageId":"475","endLine":27,"endColumn":21},{"ruleId":"472","severity":1,"message":"544","line":27,"column":23,"nodeType":"474","messageId":"475","endLine":27,"endColumn":35},{"ruleId":"472","severity":1,"message":"572","line":29,"column":12,"nodeType":"474","messageId":"475","endLine":29,"endColumn":23},{"ruleId":"472","severity":1,"message":"545","line":41,"column":11,"nodeType":"474","messageId":"475","endLine":41,"endColumn":20},{"ruleId":"472","severity":1,"message":"573","line":124,"column":21,"nodeType":"474","messageId":"475","endLine":124,"endColumn":29},{"ruleId":"472","severity":1,"message":"574","line":125,"column":21,"nodeType":"474","messageId":"475","endLine":125,"endColumn":30},{"ruleId":"472","severity":1,"message":"575","line":153,"column":11,"nodeType":"474","messageId":"475","endLine":153,"endColumn":31},{"ruleId":"472","severity":1,"message":"576","line":170,"column":11,"nodeType":"474","messageId":"475","endLine":170,"endColumn":30},{"ruleId":"472","severity":1,"message":"577","line":37,"column":12,"nodeType":"474","messageId":"475","endLine":37,"endColumn":28},{"ruleId":"481","severity":1,"message":"578","line":199,"column":8,"nodeType":"483","endLine":199,"endColumn":10,"suggestions":"579"},{"ruleId":"481","severity":1,"message":"580","line":339,"column":8,"nodeType":"483","endLine":339,"endColumn":31,"suggestions":"581"},{"ruleId":"472","severity":1,"message":"569","line":3,"column":8,"nodeType":"474","messageId":"475","endLine":3,"endColumn":17},{"ruleId":"472","severity":1,"message":"570","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":18},{"ruleId":"472","severity":1,"message":"543","line":20,"column":12,"nodeType":"474","messageId":"475","endLine":20,"endColumn":21},{"ruleId":"472","severity":1,"message":"544","line":20,"column":23,"nodeType":"474","messageId":"475","endLine":20,"endColumn":35},{"ruleId":"472","severity":1,"message":"545","line":30,"column":11,"nodeType":"474","messageId":"475","endLine":30,"endColumn":20},{"ruleId":"472","severity":1,"message":"569","line":3,"column":8,"nodeType":"474","messageId":"475","endLine":3,"endColumn":17},{"ruleId":"472","severity":1,"message":"570","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":18},{"ruleId":"472","severity":1,"message":"541","line":8,"column":8,"nodeType":"474","messageId":"475","endLine":8,"endColumn":18},{"ruleId":"472","severity":1,"message":"558","line":9,"column":8,"nodeType":"474","messageId":"475","endLine":9,"endColumn":21},{"ruleId":"472","severity":1,"message":"543","line":19,"column":12,"nodeType":"474","messageId":"475","endLine":19,"endColumn":21},{"ruleId":"472","severity":1,"message":"544","line":19,"column":23,"nodeType":"474","messageId":"475","endLine":19,"endColumn":35},{"ruleId":"472","severity":1,"message":"545","line":29,"column":11,"nodeType":"474","messageId":"475","endLine":29,"endColumn":20},{"ruleId":"472","severity":1,"message":"566","line":61,"column":11,"nodeType":"474","messageId":"475","endLine":61,"endColumn":24},{"ruleId":"472","severity":1,"message":"569","line":3,"column":8,"nodeType":"474","messageId":"475","endLine":3,"endColumn":17},{"ruleId":"472","severity":1,"message":"570","line":7,"column":8,"nodeType":"474","messageId":"475","endLine":7,"endColumn":18},{"ruleId":"472","severity":1,"message":"582","line":11,"column":8,"nodeType":"474","messageId":"475","endLine":11,"endColumn":19},{"ruleId":"472","severity":1,"message":"583","line":21,"column":12,"nodeType":"474","messageId":"475","endLine":21,"endColumn":23},{"ruleId":"472","severity":1,"message":"584","line":21,"column":25,"nodeType":"474","messageId":"475","endLine":21,"endColumn":33},{"ruleId":"472","severity":1,"message":"543","line":24,"column":12,"nodeType":"474","messageId":"475","endLine":24,"endColumn":21},{"ruleId":"472","severity":1,"message":"544","line":24,"column":23,"nodeType":"474","messageId":"475","endLine":24,"endColumn":35},{"ruleId":"472","severity":1,"message":"545","line":36,"column":11,"nodeType":"474","messageId":"475","endLine":36,"endColumn":20},{"ruleId":"472","severity":1,"message":"573","line":157,"column":17,"nodeType":"474","messageId":"475","endLine":157,"endColumn":25},{"ruleId":"472","severity":1,"message":"574","line":158,"column":17,"nodeType":"474","messageId":"475","endLine":158,"endColumn":26},{"ruleId":"492","severity":1,"message":"493","line":36,"column":33,"nodeType":"494","endLine":36,"endColumn":74},{"ruleId":"472","severity":1,"message":"585","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":22},{"ruleId":"472","severity":1,"message":"506","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":14},{"ruleId":"472","severity":1,"message":"505","line":7,"column":29,"nodeType":"474","messageId":"475","endLine":7,"endColumn":35},{"ruleId":"472","severity":1,"message":"554","line":8,"column":8,"nodeType":"474","messageId":"475","endLine":8,"endColumn":15},{"ruleId":"472","severity":1,"message":"514","line":11,"column":8,"nodeType":"474","messageId":"475","endLine":11,"endColumn":22},{"ruleId":"472","severity":1,"message":"586","line":12,"column":8,"nodeType":"474","messageId":"475","endLine":12,"endColumn":24},{"ruleId":"472","severity":1,"message":"587","line":13,"column":8,"nodeType":"474","messageId":"475","endLine":13,"endColumn":21},{"ruleId":"472","severity":1,"message":"588","line":14,"column":8,"nodeType":"474","messageId":"475","endLine":14,"endColumn":22},{"ruleId":"472","severity":1,"message":"589","line":15,"column":8,"nodeType":"474","messageId":"475","endLine":15,"endColumn":18},{"ruleId":"472","severity":1,"message":"590","line":18,"column":8,"nodeType":"474","messageId":"475","endLine":18,"endColumn":23},{"ruleId":"472","severity":1,"message":"522","line":20,"column":10,"nodeType":"474","messageId":"475","endLine":20,"endColumn":18},{"ruleId":"472","severity":1,"message":"591","line":20,"column":20,"nodeType":"474","messageId":"475","endLine":20,"endColumn":24},{"ruleId":"472","severity":1,"message":"592","line":161,"column":9,"nodeType":"474","messageId":"475","endLine":161,"endColumn":19},{"ruleId":"492","severity":1,"message":"493","line":177,"column":17,"nodeType":"494","endLine":177,"endColumn":82},{"ruleId":"472","severity":1,"message":"593","line":328,"column":9,"nodeType":"474","messageId":"475","endLine":328,"endColumn":17},{"ruleId":"472","severity":1,"message":"594","line":332,"column":9,"nodeType":"474","messageId":"475","endLine":332,"endColumn":21},{"ruleId":"507","severity":1,"message":"511","line":347,"column":36,"nodeType":"509","messageId":"510","endLine":347,"endColumn":38},{"ruleId":"472","severity":1,"message":"595","line":500,"column":11,"nodeType":"474","messageId":"475","endLine":500,"endColumn":22},{"ruleId":"472","severity":1,"message":"596","line":500,"column":24,"nodeType":"474","messageId":"475","endLine":500,"endColumn":34},"no-native-reassign",["597"],"no-negated-in-lhs",["598"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTokenFound' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'props.match.params.address', and 'props.match.params.notab'. Either include them or remove the dependency array.","ArrayExpression",["599"],"'secondary_color' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.address'. Either include them or remove the dependency array.",["600"],["601"],"'useParams' is defined but never used.","'setPickUpChoice' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ref' is assigned a value but never used.","'history' is assigned a value but never used.","'isTomorrow' is assigned a value but never used.","'pickUpChoice' is assigned a value but never used.","no-redeclare","'today' is already defined.","redeclared","'setEwallet' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'secret' is defined but never used.","'sha256' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'bellIcon' is defined but never used.","'profileIcon' is defined but never used.","'ArrowDownColor' is defined but never used.","'ArrowRightWhite' is defined but never used.","'checklistLogo' is defined but never used.","'phoneNumber' is assigned a value but never used.","'noTab' is assigned a value but never used.","'eatImage' is assigned a value but never used.","'paymentImage' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Redirect' is defined but never used.","'cartIcon' is defined but never used.","'Productimage' is defined but never used.","'NotifIcon' is defined but never used.","'ProfileIcon' is defined but never used.","'OpenHourIcon' is defined but never used.","'CoinIcon' is defined but never used.","'LocationIcon' is defined but never used.","'StarIcon' is defined but never used.","'ArrowIcon' is defined but never used.","'ProductListIcon' is defined but never used.","'LoadingButton' is defined but never used.","'DoneLoad' is defined but never used.","'useHistory' is defined but never used.","'merchantColor' is already defined.","'productColor' is already defined.","'value' is assigned a value but never used.","'lastScrollTop' is assigned a value but never used.","'transactionTime' is assigned a value but never used.","'PikaButton' is defined but never used.","'AuthRedu' is assigned a value but never used.","'isCaptcha' is assigned a value but never used.","'setIsCaptcha' is assigned a value but never used.","'backModal' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'useState' is defined but never used.","'backLogo' is defined but never used.","'Cookies' is defined but never used.","'isMobile' is assigned a value but never used.","'openPinDialog' is assigned a value but never used.","'closeAuthDialog' is assigned a value but never used.","'PikaTextField' is defined but never used.","'captchaCounter' is assigned a value but never used.","'setCaptchaCounter' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lon' is assigned a value but never used.","'setLon' is assigned a value but never used.","'showLoginDialog' is assigned a value but never used.","'showPinDialog' is assigned a value but never used.","'Loader' is defined but never used.","'Swal' is defined but never used.","'closeLogo' is defined but never used.","'pikappLogo' is defined but never used.","'Button' is defined but never used.","'isLoginStep' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'showConfirmPinDialog' is assigned a value but never used.","'showForgotPinDialog' is assigned a value but never used.","'indexCheckMandat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["602"],"React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'checkboxData', 'dispatch', 'props.datas.foodListCheckbox', 'props.datas.foodListRadio', 'radioData', 'totalCheckMandat', 'totalRadioMandat', and 'updateDataEdit'. Either include them or remove the dependency array.",["603"],"'LoginDialog' is defined but never used.","'loginDialog' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'RegisterDialog' is defined but never used.","'diningTableColor' is defined but never used.","'takeawayColor' is defined but never used.","'CashierPayment' is defined but never used.","'OvoPayment' is defined but never used.","'OrderListStatus' is defined but never used.","'Link' is defined but never used.","'formatDate' is assigned a value but never used.","'payImage' is defined but never used.","'currentState' is assigned a value but never used.","'statusIndex' is assigned a value but never used.","'statusList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"606","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},"Update the dependencies array to be: [dispatch, history, props.match.params.address, props.match.params.notab]",{"range":"613","text":"614"},"Update the dependencies array to be: [dispatch, props.match.params.address]",{"range":"615","text":"616"},{"range":"617","text":"616"},"Update the dependencies array to be: [AllRedu.openMenuCart, dispatch, props]",{"range":"618","text":"619"},"Update the dependencies array to be: [radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]",{"range":"620","text":"621"},[610,612],"[dispatch, history, props.match.params.address, props.match.params.notab]",[1074,1076],"[dispatch, props.match.params.address]",[795,797],[8852,8854],"[AllRedu.openMenuCart, dispatch, props]",[15058,15081],"[radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]"]