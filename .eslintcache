[{"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\index.js":"1","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Button\\PikaButton.js":"2","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js":"3","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\MainNavigation.js":"4","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\AuthLayout.js":"5","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js":"6","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProductLayout.js":"7","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js":"8","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Product\\ProductView.js":"9","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Auth\\FormView.js":"10","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Main\\JumbotronView.js":"11","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\PikaModal.js":"12","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\CartLayout.js":"13","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Cart\\CartView.js":"14","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\CartModal.js":"15","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\DetailNavigation.js":"16","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StatusLayout.js":"17","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Status\\StatusView.js":"18","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StoreLayout.js":"19","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Store\\StoreView.js":"20"},{"size":1969,"mtime":1608405149741,"results":"21","hashOfConfig":"22"},{"size":298,"mtime":1607928483171,"results":"23","hashOfConfig":"22"},{"size":415,"mtime":1607928496232,"results":"24","hashOfConfig":"22"},{"size":1013,"mtime":1608405359758,"results":"25","hashOfConfig":"22"},{"size":1287,"mtime":1608401366536,"results":"26","hashOfConfig":"22"},{"size":54,"mtime":1608389116205,"results":"27","hashOfConfig":"22"},{"size":675,"mtime":1608401370132,"results":"28","hashOfConfig":"22"},{"size":80,"mtime":1607920097360,"results":"29","hashOfConfig":"22"},{"size":11665,"mtime":1608405118876,"results":"30","hashOfConfig":"22"},{"size":10239,"mtime":1608400950161,"results":"31","hashOfConfig":"22"},{"size":778,"mtime":1607928516520,"results":"32","hashOfConfig":"22"},{"size":3850,"mtime":1608397030317,"results":"33","hashOfConfig":"22"},{"size":838,"mtime":1608401365819,"results":"34","hashOfConfig":"22"},{"size":10528,"mtime":1608404609505,"results":"35","hashOfConfig":"22"},{"size":1965,"mtime":1608234087791,"results":"36","hashOfConfig":"22"},{"size":677,"mtime":1608401367707,"results":"37","hashOfConfig":"22"},{"size":856,"mtime":1608401371224,"results":"38","hashOfConfig":"22"},{"size":14708,"mtime":1608234106380,"results":"39","hashOfConfig":"22"},{"size":668,"mtime":1608401372273,"results":"40","hashOfConfig":"22"},{"size":5591,"mtime":1608405032612,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5fne88",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\index.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Button\\PikaButton.js",[],["93","94"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\MainNavigation.js",["95"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\AuthLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProductLayout.js",["96"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport { ProductView } from \"../View/Product/ProductView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = secondary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <MainNavigation />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <ProductView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Product\\ProductView.js",["97"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Auth\\FormView.js",["98","99","100"],"import React from \"react\";\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport { PikaTextField } from \"../../Component/TextField/PikaTextField\";\r\nimport axios from \"axios\";\r\nimport { address } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"../../index.js\";\r\n\r\nexport class FormView extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    isValid: true,\r\n    isCaptcha: false,\r\n    captchaCounter: 0,\r\n    errorMsg: \"\",\r\n  };\r\n\r\n  handleEmail = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  handlePassword = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  handleName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handlePhone = (e) => {\r\n    this.setState({ phone: e.target.value });\r\n  };\r\n\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  checkEmail = () => {\r\n    let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRegex.test(this.state.email)) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Email is not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkName = () => {\r\n    if (this.state.name.length > 0) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Name cannot be empty.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPassword = () => {\r\n    let passwordRegex = /^(?=.*[A-Z])(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\r\n    if (!passwordRegex.test(this.state.password)) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.password.length < 8 || this.state.password.length > 16) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  checkConfirmPassword = () => {\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Password does not match.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPhone = () => {\r\n    if (this.state.phone.startsWith(\"08\")) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Phone not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      username: this.name,\r\n      password: this.password,\r\n      fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        auth.token = res.data.token;\r\n        auth.new_event = res.data.new_event;\r\n        auth.recommendation_status = res.data.recommendation_status;\r\n        window.location.href = \"/cart\";\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkName() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPhone() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkConfirmPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      full_name: this.state.name,\r\n      password: this.state.password,\r\n      phone_number: this.state.phone,\r\n      email: this.state.email,\r\n      gender: \"MALE\",\r\n      birth_day: \"01011970\",\r\n      token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/register\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        window.location.href = \"/login\";\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  onChange(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  render() {\r\n    const isLogIn = this.props.isLogIn;\r\n    let form;\r\n    if (isLogIn) {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Email Anda\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password Anda\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Login\"\r\n                buttonStyle=\"secondaryPika\"\r\n                handleClick={this.handleLogin}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Belum punya akun?\r\n                <Link to=\"/register\">register sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    } else {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Daftarkan Email\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nama Lengkap\"\r\n                type=\"text\"\r\n                placeholder=\"Masukkan Namamu..\"\r\n                handleChange={this.handleName}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nomor HP\"\r\n                type=\"tel\"\r\n                placeholder=\"08000000\"\r\n                handleChange={this.handlePhone}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handleConfirmPassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {!this.state.isCaptcha || (\r\n                <ReCAPTCHA sitekey=\"asd\" onChange={this.onChange} />\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Daftar\"\r\n                buttonStyle=\"primaryPika\"\r\n                handleClick={this.handleRegister}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Sudah punya akun?\r\n                <Link to=\"/login\">login sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    }\r\n    return <div>{form}</div>;\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Main\\JumbotronView.js",["101","102"],"import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport login_illustration from \"../../Asset/Illustration/illustration_login.png\";\r\nimport register_illustration from \"../../Asset/Illustration/illustration_register.png\";\r\n\r\nexport class JumbotronView extends React.Component {\r\n  render() {\r\n    const isLogIn = this.props.isLogIn;\r\n    let image;\r\n    if (isLogIn) {\r\n      image = <img src={login_illustration}></img>;\r\n    } else {\r\n      image = <img src={register_illustration}></img>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1 class=\"jumbotron-title\" style={{ color: this.props.titleColor }}>\r\n            {this.props.title}\r\n          </h1>\r\n          {image}\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\PikaModal.js",["103"],"import React from \"react\";\r\nimport { Row, Col, ButtonGroup, Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { PikaButton } from \"../Button/PikaButton\";\r\n\r\nexport class PikaModal extends React.Component {\r\n  state = {\r\n    detailCategory: [\r\n      {\r\n        name: \"\",\r\n        amount: 0,\r\n      },\r\n    ],\r\n    note: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    var list = [{ ...this.state.detailCategory }];\r\n    var datas = this.props.datas;\r\n    list.pop();\r\n    if(datas.foodExt !== undefined) {\r\n      datas.foodExt.map((data) => {\r\n        return list.push({\r\n          name: data.name,\r\n          amount: data.amount,\r\n        });\r\n      });\r\n      this.setState({ detailCategory: list });\r\n    }\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    let foodList = [];\r\n    foodList = this.state.detailCategory;\r\n    let updatedFoodlist = foodList.map((food) => {\r\n      if (food === e && food.amount > 0) {\r\n        food.amount = food.amount - 1;\r\n      }\r\n      return food;\r\n    });\r\n    this.setState({ detailCategory: updatedFoodlist });\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    let foodList = [];\r\n    foodList = this.state.detailCategory;\r\n    let updatedFoodlist = foodList.map((food) => {\r\n      if (food === e) {\r\n        food.amount = food.amount + 1;\r\n      }\r\n      return food;\r\n    });\r\n    this.setState({ detailCategory: updatedFoodlist });\r\n  }\r\n\r\n  handleNote = (e) => {\r\n    this.setState({ note: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let foodList = [];\r\n    foodList = this.state.detailCategory;\r\n    let data = this.state;\r\n    let handleData = this.props.handleData(data);\r\n    let foodListView = foodList.map((food) => {\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={4} md={5}>\r\n              <h6 className={\"modalFoodName\"}>{food.name}</h6>\r\n            </Col>\r\n            <Col xs={1} md={3} />\r\n            <Col xs={6} md={4}>\r\n              <ButtonGroup className={\"modalButtonGroup\"}>\r\n                <Button\r\n                  onClick={() => this.handleDecrease(food)}\r\n                  variant=\"modalMiniButton\"\r\n                >\r\n                  -\r\n                </Button>\r\n                <Form.Control\r\n                  value={food.amount}\r\n                  className=\"modalField\"\r\n                  disabled\r\n                ></Form.Control>\r\n                <Button\r\n                  onClick={() => this.handleIncrease(food)}\r\n                  variant=\"modalMiniButton\"\r\n                >\r\n                  +\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={this.props.isShow}\r\n        onHide={this.props.onHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Detail Produk</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {foodListView}\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Form.Label className={\"modalNoteLabel\"}>Catatan</Form.Label>\r\n                <Form.Control\r\n                  placeholder={\"Tambahkan catatanmu\"}\r\n                  className={\"modalNote\"}\r\n                  fluid\r\n                  onChange={this.handleNote}\r\n                ></Form.Control>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={2} />\r\n            <Col xs={10} md={8}>\r\n              <PikaButton\r\n                title=\"Add to cart\"\r\n                buttonStyle=\"modalPika\"\r\n                handleClick={this.props.handleClick}\r\n              />\r\n            </Col>\r\n            <Col xs={1} md={2} />\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\CartLayout.js",["104"],"import React from \"react\";\r\nimport DetailNavigation from \"./DetailNavigation\";\r\nimport { CartView } from \"../View/Cart/CartView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport cartLogo from \"../Asset/Illustration/cart_illustration2x.png\";\r\nimport backIcon from \"../Asset/Icon/back_icon2x.png\";\r\n\r\nexport default class CartLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = secondary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <DetailNavigation centerImage={cartLogo} backIcon={backIcon} />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <CartView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Cart\\CartView.js",["105","106","107"],"import React from \"react\";\r\nimport { Row, Col, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport chevronImage from \"../../Asset/Icon/chevron_right.png\";\r\nimport removeIcon from \"../../Asset/Icon/remove_icon.png\";\r\nimport storeIcon from \"../../Asset/Icon/store_icon.png\";\r\nimport checklistIcon from \"../../Asset/Icon/checklist_icon.png\";\r\nimport frontIcon from \"../../Asset/Icon/front_icon.png\";\r\nimport imageSample from \"../../Asset/Illustration/sample_food.jpg\";\r\nimport { CartModal } from \"../../Component/Modal/CartModal\";\r\nimport { cart, auth } from \"../../index.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class CartView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    currentModalTitle: \"\",\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Cara makan anda?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan di tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Bungkus / Takeaway\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar pakai apa?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cash\",\r\n            option: \"Cash\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    if (e.foodAmount > 1) {\r\n      e.foodAmount -= 1;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    e.foodAmount += 1;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDelete(e) {\r\n    cart.forEach((store) => {\r\n      let filteredStore = store.food.filter((data) => {\r\n        return data.foodName !== e.foodName;\r\n      });\r\n      store.food = filteredStore;\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handlePayment = () => {\r\n    console.log(\"Handle\");\r\n  };\r\n\r\n  render() {\r\n    console.log(cart)\r\n    let modal;\r\n    let paymentButton;\r\n    if (auth.isLoggedIn === false) {\r\n      paymentButton = (\r\n        <Link to={\"/login\"} className={\"iconButton\"}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      paymentButton = (\r\n        <button className={\"iconButton\"} onClick={() => this.handlePayment()}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </button>\r\n      );\r\n    }\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n\r\n    let data = cart;\r\n    let totalAmount = 0;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n    let storeList = data.filter((store) => {\r\n      if (store.storeName !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    let itemListView = storeList.map((store) => {\r\n      return data.map((cartData) => {\r\n        if (cartData.storeName === store.storeName) {\r\n          return cartData.food.map((food) => {\r\n            return (\r\n              <Row>\r\n                <Col xs={0} md={3} />\r\n                <Col xs={3} md={1}>\r\n                  <img\r\n                    src={food.foodImage}\r\n                    alt={\"food\"}\r\n                    className={\"cartFoodImage\"}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Row>\r\n                    <Col>\r\n                      <p className={\"cartContentFood\"}>{food.foodName}</p>\r\n                      <p className={\"cartContentPrice\"}>\r\n                        {Intl.NumberFormat(\"id-ID\", {\r\n                          style: \"currency\",\r\n                          currency: \"IDR\",\r\n                        }).format(food.foodPrice)}\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col>\r\n                  <Row>\r\n                    <Col>\r\n                      <button\r\n                        className={\"iconButton\"}\r\n                        onClick={() => this.handleDelete(food)}\r\n                      >\r\n                        <img src={removeIcon} alt={\"remove icon\"} />\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <ButtonGroup className={\"cartModalButtonGroup\"}>\r\n                        <Button\r\n                          onClick={() => this.handleDecrease(food)}\r\n                          variant=\"cartModalMiniButton\"\r\n                        >\r\n                          -\r\n                        </Button>\r\n                        <Form.Control\r\n                          value={food.foodAmount}\r\n                          className=\"cartModalField\"\r\n                          disabled\r\n                        ></Form.Control>\r\n                        <Button\r\n                          onClick={() => this.handleIncrease(food)}\r\n                          variant=\"cartModalMiniButton\"\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    let contentView = storeList.map((store) => {\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col>\r\n              <p className={\"cartTitle\"}>{store.storeName}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col xs={1} md={1}>\r\n              <img src={storeIcon} className={\"cartIcon\"} alt={\"store icon\"} />\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <p className={\"cartNote\"}>Store Location</p>\r\n                  <p className={\"cartTitle\"}>{store.storeDesc}</p>\r\n                  <p className={\"cartNote\"}>\r\n                    <b>{store.storeDistance}</b>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={2} md={3}>\r\n              <button className={\"iconButton\"}>\r\n                <img\r\n                  src={chevronImage}\r\n                  onClick={() => this.handleDetail()}\r\n                  alt={\"chevron right\"}\r\n                />\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          {itemListView}\r\n        </>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <p className={\"cartTitle\"}>Pilih cara makan anda</p>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"eat-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Bayar pakai apa?</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartContent\"}>Cash</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"pay-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        {contentView}\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Rincian Pembayaran</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Total harga barang:</p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Diskon:</p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(totalAmount)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(0)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className={\"cartPayment\"}>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Total Belanja Kamu</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartFinalPrice\"}>\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(totalAmount)}\r\n                </p>\r\n              </Col>\r\n              <Col className={\"cartFinalButton\"}>{paymentButton}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\CartModal.js",["108"],"import React from \"react\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { PikaButton } from \"../Button/PikaButton\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\n\r\nexport class CartModal extends React.Component {\r\n  state = {\r\n    radio: 0,\r\n  };\r\n\r\n  onClick = (num) => () => {\r\n    this.setState({ radio: num });\r\n  };\r\n  render() {\r\n    let optionList = [];\r\n    optionList = this.props.detailOptions;\r\n    let optionListView = optionList.map((data) => {\r\n      let image;\r\n      if (data.image === \"dineIn\") {\r\n        image = dineinIcon;\r\n      } else if (data.image === \"takeaway\") {\r\n        image = takeawayIcon;\r\n      }\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={8} md={5}>\r\n              <img src={image} class=\"cartModalImage\" alt=\"icon\" />\r\n\r\n              <span class=\"cartModalOption\">{data.option}</span>\r\n            </Col>\r\n            <Col xs={1} md={3} />\r\n            <Col xs={2} md={4}>\r\n              <Form>\r\n                <Form.Check\r\n                  name=\"option\"\r\n                  type={\"radio\"}\r\n                  id={\"option\"}\r\n                  onClick={this.onClick(optionList.indexOf(data))}\r\n                  checked={\r\n                    this.state.radio === optionList.indexOf(data) ? true : false\r\n                  }\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={this.props.isShow}\r\n        onHide={this.props.onHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{optionListView}</Modal.Body>\r\n        <Modal.Footer />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\DetailNavigation.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StatusLayout.js",["109"],"import React from \"react\";\r\nimport DetailNavigation from \"./DetailNavigation\";\r\nimport { StatusView } from \"../View/Status/StatusView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport statusLogo from \"../Asset/Illustration/status_illustration2x.png\";\r\nimport backIcon from \"../Asset/Icon/back_icon_alt2x.png\";\r\n\r\nexport default class StatusLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = primary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <DetailNavigation centerImage={statusLogo} backIcon={backIcon} />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <StatusView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Status\\StatusView.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import React from \"react\";\r\nimport { Row, Col, Nav, Card, Modal } from \"react-bootstrap\";\r\nimport unpaidIcon from \"../../Asset/Icon/unpaid_status.png\";\r\nimport unpaidActiveIcon from \"../../Asset/Icon/unpaid_active_status.png\";\r\nimport packIcon from \"../../Asset/Icon/pack_status.png\";\r\nimport packActiveIcon from \"../../Asset/Icon/pack_active_status.png\";\r\nimport sendIcon from \"../../Asset/Icon/send_status.png\";\r\nimport sendActiveIcon from \"../../Asset/Icon/send_active_status.png\";\r\nimport reviewIcon from \"../../Asset/Icon/review_status.png\";\r\nimport reviewActiveIcon from \"../../Asset/Icon/review_active_status.png\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\n\r\nexport class StatusView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    activeTab: 1,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n      },\r\n    ],\r\n    currentModal: {\r\n      storeName: \"Store\",\r\n      storeLocation: \"Location\",\r\n      storeDistance: \"Distance\",\r\n      status: \"Status\",\r\n      payment: \"Cash\",\r\n      food: [\r\n        {\r\n          name: \"Food1\",\r\n          price: 1000,\r\n          image: \"\",\r\n          note: \"Note1\",\r\n          quantity: 1,\r\n        },\r\n        {\r\n          name: \"Food2\",\r\n          price: 2000,\r\n          image: \"\",\r\n          note: \"Note2\",\r\n          quantity: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleSelect(tabIndex) {\r\n    this.setState({ activeTab: tabIndex });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var state = { ...this.state };\r\n    state.data.pop();\r\n    state.data.push({\r\n      title: \"Food1\",\r\n      distance: \"dist1\",\r\n      quantity: \"qty1\",\r\n      status: \"unpaid\",\r\n    });\r\n    state.data.push({\r\n      title: \"Food4\",\r\n      distance: \"dist1\",\r\n      quantity: \"qty1\",\r\n      status: \"unpaid\",\r\n    });\r\n    state.data.push({\r\n      title: \"Food2\",\r\n      distance: \"dist1\",\r\n      quantity: \"qty1\",\r\n      status: \"pick\",\r\n    });\r\n    state.data.push({\r\n      title: \"Food3\",\r\n      distance: \"dist1\",\r\n      quantity: \"qty1\",\r\n      status: \"send\",\r\n    });\r\n    this.setState({ data: state.data });\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let modalList = this.state.currentModal.food;\r\n\r\n    let modalListView = modalList.map((data) => {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={reviewIcon} class=\"statusFoodIcon\" />\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodname\">{data.name}</p>\r\n                <p class=\"statusFoodPrice\">\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(data.price)}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodQuantity\">{data.quantity}x</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p class=\"statusFoodNote\">Catatan: {data.note}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n    let currentTotal = 0;\r\n    modalList.forEach((data) => {\r\n      currentTotal = currentTotal + data.price * data.quantity;\r\n    });\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p class=\"statusNoteLabel\">No Pesanan.</p>\r\n              <p class=\"statusNoteHeader\">CURB27022020-1</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={reviewIcon} class=\"statusStoreIcon\" />\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusStoreName\">\r\n                  {this.state.currentModal.storeName}\r\n                </p>\r\n                <p class=\"statusStoreLabel\">store location</p>\r\n                <p class=\"statusStoreLocation\">\r\n                  {this.state.currentModal.storeLocation}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={reviewIcon} class=\"statusStoreStatusIcon\" />\r\n              </Col>\r\n              <Col>\r\n                <span class=\"statusStoreStatus\">\r\n                  {this.state.currentModal.status}\r\n                </span>\r\n                <span class=\"statusStoreDistance\">\r\n                  {this.state.currentModal.storeDistance}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStorePaymentLabel\">Metode Pembayaran</p>\r\n                <p class=\"statusStorePayment\">\r\n                  {this.state.currentModal.payment}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            {modalListView}\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStoreTotal\">Total Pembayaran</p>\r\n              </Col>\r\n              <Col>\r\n                {Intl.NumberFormat(\"id-ID\", {\r\n                  style: \"currency\",\r\n                  currency: \"IDR\",\r\n                }).format(currentTotal)}\r\n                }\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    let notPaidImage;\r\n    let contentView;\r\n\r\n    let currentState = this.state.activeTab;\r\n    if (currentState === 1) {\r\n      notPaidImage = unpaidActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"unpaid\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={unpaidIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity}</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.setModal(true)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusLeftText\">Pickup</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusRightText\">Pickup</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      notPaidImage = unpaidIcon;\r\n    }\r\n\r\n    let packImage;\r\n    if (currentState === 2) {\r\n      packImage = packActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"pack\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={unpaidIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity}</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.setModal(true)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusLeftText\">Pickup</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusRightText\">Pickup</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      packImage = packIcon;\r\n    }\r\n\r\n    let sendImage;\r\n    if (currentState === 3) {\r\n      sendImage = sendActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"send\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={unpaidIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity}</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.setModal(true)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusLeftText\">Pickup</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusRightText\">Pickup</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      sendImage = sendIcon;\r\n    }\r\n\r\n    let reviewImage;\r\n    if (currentState === 4) {\r\n      reviewImage = reviewActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"review\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={unpaidIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity}</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.setModal(true)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusLeftText\">Pickup</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={unpaidIcon}></img>\r\n                      <span class=\"statusRightText\">Pickup</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      reviewImage = reviewIcon;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav variant=\"tabs\" defaultActiveKey={\"not-paid\"}>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              eventKey={\"not-paid\"}\r\n              onClick={() => this.handleSelect(1)}\r\n            >\r\n              <Row>\r\n                <img\r\n                  src={notPaidImage}\r\n                  alt={\"unpaid\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Belum Bayar</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"pack\"} onClick={() => this.handleSelect(2)}>\r\n              <Row>\r\n                <img src={packImage} alt={\"pack\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Dikemas</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"send\"} onClick={() => this.handleSelect(3)}>\r\n              <Row>\r\n                <img src={sendImage} alt={\"send\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Siap / Dikirim</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"review\"} onClick={() => this.handleSelect(4)}>\r\n              <Row>\r\n                <img\r\n                  src={reviewImage}\r\n                  alt={\"review\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Beri Penilaian</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {contentView}\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StoreLayout.js",["125"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport { StoreView } from \"../View/Store/StoreView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default class StoreLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = secondary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <MainNavigation />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <StoreView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Store\\StoreView.js",["126","127","128","129","130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":3,"column":16,"nodeType":"138","messageId":"139","endLine":3,"endColumn":26},{"ruleId":"136","severity":1,"message":"140","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"141","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":14},{"ruleId":"136","severity":1,"message":"142","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":47,"column":32,"nodeType":"145","messageId":"146","endLine":47,"endColumn":33,"suggestions":"147"},{"ruleId":"143","severity":1,"message":"144","line":47,"column":57,"nodeType":"145","messageId":"146","endLine":47,"endColumn":58,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":11,"column":15,"nodeType":"151","endLine":11,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":13,"column":15,"nodeType":"151","endLine":13,"endColumn":48},{"ruleId":"136","severity":1,"message":"152","line":64,"column":9,"nodeType":"138","messageId":"139","endLine":64,"endColumn":19},{"ruleId":"136","severity":1,"message":"140","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"153","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":124,"column":41,"nodeType":"156","messageId":"157","endLine":124,"endColumn":43},{"ruleId":"154","severity":1,"message":"158","line":131,"column":34,"nodeType":"156","messageId":"157","endLine":131,"endColumn":36},{"ruleId":"136","severity":1,"message":"159","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"160","line":6,"column":3,"nodeType":"138","messageId":"139","endLine":6,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":98,"column":17,"nodeType":"151","endLine":98,"endColumn":64},{"ruleId":"149","severity":1,"message":"150","line":142,"column":17,"nodeType":"151","endLine":142,"endColumn":65},{"ruleId":"149","severity":1,"message":"150","line":156,"column":17,"nodeType":"151","endLine":156,"endColumn":71},{"ruleId":"154","severity":1,"message":"158","line":202,"column":38,"nodeType":"156","messageId":"157","endLine":202,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":230,"column":23,"nodeType":"151","endLine":230,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":234,"column":23,"nodeType":"151","endLine":234,"endColumn":45},{"ruleId":"154","severity":1,"message":"158","line":253,"column":38,"nodeType":"156","messageId":"157","endLine":253,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":281,"column":23,"nodeType":"151","endLine":281,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":285,"column":23,"nodeType":"151","endLine":285,"endColumn":45},{"ruleId":"154","severity":1,"message":"158","line":304,"column":38,"nodeType":"156","messageId":"157","endLine":304,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":332,"column":23,"nodeType":"151","endLine":332,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":336,"column":23,"nodeType":"151","endLine":336,"endColumn":45},{"ruleId":"154","severity":1,"message":"158","line":355,"column":38,"nodeType":"156","messageId":"157","endLine":355,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":383,"column":23,"nodeType":"151","endLine":383,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":387,"column":23,"nodeType":"151","endLine":387,"endColumn":45},{"ruleId":"136","severity":1,"message":"140","line":5,"column":3,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"161","line":2,"column":27,"nodeType":"138","messageId":"139","endLine":2,"endColumn":31},{"ruleId":"136","severity":1,"message":"162","line":2,"column":33,"nodeType":"138","messageId":"139","endLine":2,"endColumn":37},{"ruleId":"136","severity":1,"message":"163","line":2,"column":39,"nodeType":"138","messageId":"139","endLine":2,"endColumn":42},{"ruleId":"136","severity":1,"message":"164","line":2,"column":44,"nodeType":"138","messageId":"139","endLine":2,"endColumn":49},{"ruleId":"136","severity":1,"message":"159","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"141","line":9,"column":10,"nodeType":"138","messageId":"139","endLine":9,"endColumn":14},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'primary_color' is defined but never used.","'auth' is defined but never used.","'sha256' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["167","168"],["169","170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleData' is assigned a value but never used.","'imageSample' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'PikaButton' is defined but never used.","'secondary_color' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"171","fix":"172","desc":"173"},{"messageId":"174","fix":"175","desc":"176"},{"messageId":"171","fix":"177","desc":"173"},{"messageId":"174","fix":"178","desc":"176"},"removeEscape",{"range":"179","text":"180"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"181","text":"182"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"183","text":"180"},{"range":"184","text":"182"},[1262,1263],"",[1262,1262],"\\",[1287,1288],[1287,1287]]