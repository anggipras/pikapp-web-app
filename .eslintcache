[{"D:\\PIKAPP\\pikapp-frontend\\src\\index.js":"1","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Store.js":"2","D:\\PIKAPP\\pikapp-frontend\\src\\App.js":"3","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js":"4","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js":"5","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js":"6","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js":"7","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js":"8","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"9","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js":"10","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\FoodCourtQR.js":"11","D:\\PIKAPP\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js":"12","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js":"13","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"14","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js":"15","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js":"16","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"17","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"18","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js":"19","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"20","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"21","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"22","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"23","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"24","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js":"25","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js":"26","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js":"27","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"28","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"29","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js":"30","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"31","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js":"32","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js":"33","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js":"34","D:\\PIKAPP\\pikapp-frontend\\src\\firebaseConfig.js":"35","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js":"36","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js":"37","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"38","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"39","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"40","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js":"41","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js":"42","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js":"43","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js":"44","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js":"45","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"46"},{"size":456,"mtime":1622711666473,"results":"47","hashOfConfig":"48"},{"size":169,"mtime":1618911481708,"results":"49","hashOfConfig":"48"},{"size":3113,"mtime":1623401683583,"results":"50","hashOfConfig":"48"},{"size":865,"mtime":1614170607873,"results":"51","hashOfConfig":"48"},{"size":532,"mtime":1618911481701,"results":"52","hashOfConfig":"48"},{"size":2443,"mtime":1618911481700,"results":"53","hashOfConfig":"48"},{"size":274,"mtime":1617790499497,"results":"54","hashOfConfig":"48"},{"size":1227,"mtime":1622193700666,"results":"55","hashOfConfig":"48"},{"size":656,"mtime":1617686402109,"results":"56","hashOfConfig":"48"},{"size":1737,"mtime":1622193700665,"results":"57","hashOfConfig":"48"},{"size":675,"mtime":1622794260462,"results":"58","hashOfConfig":"48"},{"size":1858,"mtime":1621238036596,"results":"59","hashOfConfig":"48"},{"size":367,"mtime":1623040661930,"results":"60","hashOfConfig":"48"},{"size":246,"mtime":1618911481707,"results":"61","hashOfConfig":"48"},{"size":860,"mtime":1618911481703,"results":"62","hashOfConfig":"48"},{"size":1964,"mtime":1622193700664,"results":"63","hashOfConfig":"48"},{"size":26806,"mtime":1623395565642,"results":"64","hashOfConfig":"48"},{"size":80,"mtime":1614170607813,"results":"65","hashOfConfig":"48"},{"size":43105,"mtime":1623395446397,"results":"66","hashOfConfig":"48"},{"size":13806,"mtime":1623396046632,"results":"67","hashOfConfig":"48"},{"size":831,"mtime":1614170607877,"results":"68","hashOfConfig":"48"},{"size":9040,"mtime":1623395506071,"results":"69","hashOfConfig":"48"},{"size":36135,"mtime":1623395461355,"results":"70","hashOfConfig":"48"},{"size":21348,"mtime":1623379494721,"results":"71","hashOfConfig":"48"},{"size":17591,"mtime":1623291789016,"results":"72","hashOfConfig":"48"},{"size":11319,"mtime":1621238036580,"results":"73","hashOfConfig":"48"},{"size":931,"mtime":1622193700669,"results":"74","hashOfConfig":"48"},{"size":1908,"mtime":1623118476504,"results":"75","hashOfConfig":"48"},{"size":785,"mtime":1622712797776,"results":"76","hashOfConfig":"48"},{"size":11231,"mtime":1621238036565,"results":"77","hashOfConfig":"48"},{"size":991,"mtime":1617686402096,"results":"78","hashOfConfig":"48"},{"size":21745,"mtime":1622193700660,"results":"79","hashOfConfig":"48"},{"size":862,"mtime":1618910090714,"results":"80","hashOfConfig":"48"},{"size":1360,"mtime":1622193700661,"results":"81","hashOfConfig":"48"},{"size":492,"mtime":1623396073379,"results":"82","hashOfConfig":"48"},{"size":18158,"mtime":1621315324094,"results":"83","hashOfConfig":"48"},{"size":2411,"mtime":1623118476500,"results":"84","hashOfConfig":"48"},{"size":5147,"mtime":1621238036580,"results":"85","hashOfConfig":"48"},{"size":650,"mtime":1617686402101,"results":"86","hashOfConfig":"48"},{"size":30,"mtime":1617686402113,"results":"87","hashOfConfig":"48"},{"size":8867,"mtime":1621315305025,"results":"88","hashOfConfig":"48"},{"size":12739,"mtime":1621315316893,"results":"89","hashOfConfig":"48"},{"size":15690,"mtime":1621315295158,"results":"90","hashOfConfig":"48"},{"size":6427,"mtime":1621238036565,"results":"91","hashOfConfig":"48"},{"size":32865,"mtime":1621315263701,"results":"92","hashOfConfig":"48"},{"size":1113,"mtime":1623118476503,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1xfhsff",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"96"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"96"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"D:\\PIKAPP\\pikapp-frontend\\src\\index.js",[],["209","210"],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Store.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\App.js",["211","212"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js",["213","214"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MerchantResto = (props) => {\r\n  const merchantID = props.match.params.mid\r\n  const [longlat, setlonglat] = useState({});\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const _isMounted = useRef(true)\r\n\r\n  useEffect(() => {\r\n    // if (navigator.geolocation) { //SHUTDOWN FOR A WHILE\r\n    //   navigator.geolocation.getCurrentPosition(showPosition)\r\n    // } else {\r\n    //   alert('Geolocation is not supported by this browser.')\r\n    // }\r\n    // return () => {\r\n    //   _isMounted.current = false\r\n    // }\r\n\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    console.log(latitude, longitude);\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    if (!props.match.params.address) {\r\n      setlonglat({ lat: latitude, lon: longitude })\r\n    }\r\n    dispatch({ type: 'ISMERCHANTQR', payload: true });\r\n  }, []);\r\n\r\n  // const showPosition = (position) => { //SHUTDOWN FOR A WHILE\r\n  //   let latitude = position.coords.latitude\r\n  //   let longitude = position.coords.longitude\r\n  //   let longlat = { lat: latitude, lon: longitude }\r\n  //   console.log(latitude, longitude);\r\n  //   localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  //   if (!props.match.params.address) {\r\n  //     setlonglat({ lat: latitude, lon: longitude })\r\n  //   }\r\n  // }\r\n\r\n  if (longlat.lat) {\r\n    history.push(\r\n      \"/store?mid=\" +\r\n      merchantID +\r\n      \"&table=\" +\r\n      props.match.params.notab\r\n    );\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default MerchantResto\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\FoodCourtQR.js",["215"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst FoodCourt = (props) => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let fcadd = props.match.params.address\r\n        // fcadd = fcadd.replace(/_/g, \" \")\r\n        localStorage.setItem('fctable', props.match.params.notab)\r\n        Cookies.set(\"fcaddress\", fcadd, { expires: 1 })\r\n        dispatch({ type: 'ISMERCHANTQR', payload: false });\r\n        history.push(\"/\");\r\n    }, []);\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default FoodCourt\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js",["216","217","218"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport \"../../Asset/scss/AuthenticationLayout.scss\";\r\nimport ResetPinDialog from '../../Component/Authentication/ResetPin/ResetPinDialog';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ResetPin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const pintoken = props.match.params.pintoken;\r\n    const [showResetDialog, setShowResetDialog] = useState(true);\r\n\r\n    console.log(pintoken);\r\n    // const setMenuDetail = () => {\r\n        // setShowResetDialog(true);\r\n    // }\r\n\r\n    const resetPin = () => {\r\n        dispatch({ type: 'PINTOKEN', payload: pintoken });\r\n        if (showResetDialog) {\r\n            return (\r\n            <ResetPinDialog\r\n                isShowResetPin={showResetDialog}\r\n                onHideResetPin={() => setShowResetDialog(true)}\r\n            />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {resetPin()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPin\r\n// class ResetPinView extends React.Component {\r\n\r\n//     state = {\r\n//         showResetDialog : true\r\n//     }\r\n\r\n//     setMenuDetail(isShow) {\r\n//         this.setState({ showResetDialog: isShow })\r\n//         document.body.style.overflowY = ''\r\n//     }\r\n\r\n//     resetPin = () => {\r\n//         if (this.state.showResetDialog === true) {\r\n//           return (\r\n//             <ResetPinDialog\r\n//                 isShowResetPin={this.state.showResetDialog}\r\n//                 onHideResetPin={() => this.setMenuDetail(true)}\r\n//             />\r\n//           );\r\n//         }\r\n//     }\r\n\r\n//     render() { \r\n//         return (\r\n//             <>\r\n//             {this.resetPin()}\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n// export default connect(null, {LoadingButton, DoneLoad })(ResetPinView)","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["219","220","221","222"],"import React from \"react\";\r\nimport { Row, Col, Nav, Card, Modal } from \"react-bootstrap\";\r\nimport unpaidIcon from \"../../Asset/Icon/unpaid_status.png\";\r\nimport unpaidActiveIcon from \"../../Asset/Icon/unpaid_active_status.png\";\r\nimport packIcon from \"../../Asset/Icon/pack_status.png\";\r\nimport packActiveIcon from \"../../Asset/Icon/pack_active_status.png\";\r\nimport sendIcon from \"../../Asset/Icon/send_status.png\";\r\nimport sendActiveIcon from \"../../Asset/Icon/send_active_status.png\";\r\nimport reviewIcon from \"../../Asset/Icon/review_status.png\";\r\nimport reviewActiveIcon from \"../../Asset/Icon/review_active_status.png\";\r\nimport placeholderIcon from \"../../Asset/Icon/placeholder_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport categoryFoodIcon from \"../../Asset/Icon/category_food_icon.png\";\r\nimport pickupStatusIcon from \"../../Asset/Icon/pickup_status_icon.png\";\r\nimport cashierStatusIcon from \"../../Asset/Icon/cashier_icon.png\"\r\nimport ovoIcon from \"../../Asset/Icon/ovo_icon.png\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\";\r\nimport RegisterDialog from '../../Component/Authentication/RegisterDialog';\r\nimport { firebaseAnalytics } from '../../firebaseConfig'\r\n\r\nexport class StatusView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    activeTab: 1,\r\n    showRegisterDialog: false,\r\n    isLogin: false,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n        biz_type: \"\",\r\n        payment: \"\",\r\n        transactionId: \"\",\r\n        transactionTime: \"\",\r\n      },\r\n    ],\r\n    currentModal: {\r\n      transactionId: \"\",\r\n      transactionTime: \"\",\r\n      storeName: \"Store\",\r\n      storeLocation: \"Location\",\r\n      storeDistance: \"Distance\",\r\n      status: \"Status\",\r\n      payment: \"Cash\",\r\n      biz_type: \"\",\r\n      food: [\r\n        {\r\n          productId: \"\",\r\n          name: \"\",\r\n          price: 0,\r\n          image: \"\",\r\n          note: \"\",\r\n          quantity: 1,\r\n          extraprice: 0\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDetail(transId) {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n      // window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v2/\" + transId + \"/txn-detail/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.results);\r\n        var results = res.data.results;\r\n        var resultModal = { ...this.currentModal }\r\n        resultModal.transactionId = results.transaction_id\r\n        resultModal.transactionTime = results.transaction_time\r\n        resultModal.storeName = results.merchant_name\r\n        resultModal.storeDistance = \"\"\r\n        resultModal.storeLocation = \"\"\r\n        resultModal.status = results.status\r\n        resultModal.biz_type = results.biz_type\r\n        resultModal.payment = results.payment_with\r\n        resultModal.food = []\r\n        results.detail_products.forEach((product) => {\r\n          resultModal.food.push({\r\n            name: product.product_name,\r\n            price: product.price,\r\n            quantity: product.qty,\r\n            image: product.image,\r\n            note: product.notes,\r\n            extraprice: product.extra_price\r\n          })\r\n        })\r\n        this.setState({\r\n          currentModal: resultModal\r\n        })\r\n      })\r\n      .catch((err) => {\r\n      });\r\n\r\n    this.setModal(true);\r\n  }\r\n\r\n  handleSelect(tabIndex) {\r\n    this.setState({ activeTab: tabIndex });\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebaseAnalytics.logEvent(\"orderlist_visited\")\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n      this.setState({ isLogin: auth.isLogged });\r\n    }\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n      this.setRegisterDialog(true);\r\n      // window.location.href = \"/login\"\r\n    } else {\r\n      this.getTransactionHistory();\r\n    }\r\n    // var state = { ...this.state };\r\n    // state.data.pop();\r\n    // state.data.push({\r\n    //   title: \"Food1\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food4\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food2\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"pick\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food3\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"send\",\r\n    // });\r\n    // this.setState({ data: state.data });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.isLogin === false) {\r\n      var auth = {\r\n        isLogged: false,\r\n        token: \"\",\r\n        new_event: true,\r\n        recommendation_status: false,\r\n        email: \"\",\r\n      };\r\n      if (Cookies.get(\"auth\") !== undefined) {\r\n        auth = JSON.parse(Cookies.get(\"auth\"))\r\n        this.getTransactionHistory();\r\n        this.setState({ isLogin: auth.isLogged });\r\n      }\r\n    }\r\n  }\r\n\r\n  getTransactionHistory() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/txn-history/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = { ...this.state }\r\n        stateData.data.pop()\r\n        results.forEach((result) => {\r\n          stateData.data.push({\r\n            title: result.merchant_name,\r\n            distance: \"\",\r\n            quantity: result.total_product,\r\n            status: result.status,\r\n            biz_type: result.biz_type,\r\n            payment: result.payment_with,\r\n            transactionId: result.transaction_id,\r\n            transactionTime: result.transaction_time,\r\n          })\r\n        })\r\n        this.setState({ data: stateData.data });\r\n      })\r\n      .catch((err) => {\r\n      });\r\n\r\n  }\r\n\r\n  setRegisterDialog(isShow) {\r\n    this.setState({ showRegisterDialog: isShow })\r\n    document.body.style.overflowY = ''\r\n  }\r\n\r\n  showRegisterDialog = () => {\r\n    if (this.state.showRegisterDialog === true) {\r\n      return (\r\n        <RegisterDialog\r\n          isShowRegister={this.state.showRegisterDialog}\r\n          onHideRegister={() => this.setRegisterDialog(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let modalList = this.state.currentModal.food;\r\n\r\n    let modalListView = modalList.map((data) => {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={placeholderIcon} class=\"statusFoodIcon\" alt=\"food icon\" />\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodname\">{data.name}</p>\r\n                <p class=\"statusFoodPrice\">\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(data.price + data.extraprice)}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodQuantity\">{data.quantity}x</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p class=\"statusFoodNote\">Catatan: {data.note}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n    let currentTotal = 0;\r\n    modalList.forEach((data) => {\r\n      currentTotal = currentTotal + (data.price + data.extraprice) * data.quantity;\r\n    });\r\n    if (this.state.showModal === true) {\r\n      let payImage;\r\n      let payLabel;\r\n      if (this.state.currentModal.payment === \"PAY_BY_CASHIER\") {\r\n        payImage = cashierStatusIcon;\r\n        payLabel = \"Cashier\"\r\n      } else if (this.state.currentModal.payment === \"WALLET\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Cash\"\r\n      } else if (this.state.currentModal.payment === \"VA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Virtual\"\r\n      } else if (this.state.currentModal.payment === \"WALLET_OVO\") {\r\n        payImage = ovoIcon;\r\n        payLabel = \"OVO\"\r\n      } else if (this.state.currentModal.payment === \"WALLET_DANA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"DANA\"\r\n      }\r\n      modal = (\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p class=\"statusNoteLabel\">No Pesanan.</p>\r\n              <p class=\"statusNoteHeader\">{this.state.currentModal.transactionId}</p>\r\n              <p class=\"statusNoteLabel\">{this.state.currentModal.transactionTime}</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={categoryFoodIcon} class=\"statusStoreIcon\" alt=\"category icon\" />\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusStoreName\">\r\n                  {this.state.currentModal.storeName}\r\n                </p>\r\n                <p class=\"statusStoreLabel\">store location</p>\r\n                <p class=\"statusStoreLocation\">\r\n                  {this.state.currentModal.storeLocation}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={pickupStatusIcon} class=\"statusStoreStatusIcon\" alt=\"pickup status\" />\r\n              </Col>\r\n              <Col>\r\n                <span class=\"statusStoreLabel\">status: </span>\r\n                <span class=\"statusStoreStatus\">\r\n                  {this.state.currentModal.status}\r\n                </span>\r\n                <span class=\"statusStoreDistance\">\r\n                  {this.state.currentModal.storeDistance}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStorePaymentLabel\">Metode Pembayaran</p>\r\n                <img src={payImage} class=\"statusFoodIcon\" alt=\"status icon\"></img>\r\n                <span class=\"statusStorePayment\">\r\n                  {payLabel}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            {modalListView}\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStoreTotal\">Total Pembayaran</p>\r\n              </Col>\r\n              <Col>\r\n                {Intl.NumberFormat(\"id-ID\", {\r\n                  style: \"currency\",\r\n                  currency: \"IDR\",\r\n                }).format(currentTotal)}\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    let notPaidImage;\r\n    let contentView;\r\n\r\n    let currentState = this.state.activeTab;\r\n    if (currentState === 1) {\r\n      notPaidImage = unpaidActiveIcon;\r\n      contentView = this.state.data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = cashierStatusIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if (value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if (value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        }\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"OPEN\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      notPaidImage = unpaidIcon;\r\n    }\r\n\r\n    let packImage;\r\n    if (currentState === 2) {\r\n      packImage = packActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if (value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if (value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        }\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"PAID\" || value.status === \"MERCHANT_CONFIRM\" || value.status === \"CUSTOMER_ACCEPTED\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      packImage = packIcon;\r\n    }\r\n\r\n    let sendImage;\r\n    if (currentState === 3) {\r\n      sendImage = sendActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if (value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if (value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if (value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if (value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if (value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        }\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if (value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"DELIVER\" || value.status === \"ON_PROCESS\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      sendImage = sendIcon;\r\n    }\r\n\r\n    let reviewImage;\r\n    if (currentState === 4) {\r\n      reviewImage = reviewActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"CLOSE\" || value.status === \"FINALIZE\") {\r\n          let bizImage;\r\n          let bizLabel;\r\n          let payImage;\r\n          let payLabel;\r\n          if (value.payment === \"PAY_BY_CASHIER\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cashier\"\r\n          } else if (value.payment === \"WALLET\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cash\"\r\n          } else if (value.payment === \"VA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Virtual\"\r\n          } else if (value.payment === \"WALLET_OVO\") {\r\n            payImage = ovoIcon;\r\n            payLabel = \"OVO\"\r\n          } else if (value.payment === \"WALLET_DANA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"DANA\"\r\n          }\r\n          if (value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if (value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          if (value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if (value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      reviewImage = reviewIcon;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav variant=\"tabs\" defaultActiveKey={\"not-paid\"}>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              eventKey={\"not-paid\"}\r\n              onClick={() => this.handleSelect(1)}\r\n            >\r\n              <Row>\r\n                <img\r\n                  src={notPaidImage}\r\n                  alt={\"unpaid\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Belum Bayar</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"pack\"} onClick={() => this.handleSelect(2)}>\r\n              <Row>\r\n                <img src={packImage} alt={\"pack\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Dikemas</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"send\"} onClick={() => this.handleSelect(3)}>\r\n              <Row>\r\n                <img src={sendImage} alt={\"send\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Siap / Dikirim</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"review\"} onClick={() => this.handleSelect(4)}>\r\n              <Row>\r\n                <img\r\n                  src={reviewImage}\r\n                  alt={\"review\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Beri Penilaian</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {contentView}\r\n        {modal}\r\n        {this.showRegisterDialog()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js",["223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React from \"react\";\r\nimport { prominent } from \"color.js\";\r\nimport rgbHex from 'rgb-hex'\r\nimport MenuDetail from \"../../Component/Menu/MenuDetail\";\r\nimport queryString from \"query-string\";\r\nimport cartIcon from \"../../Asset/Icon/cart_icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Storeimg from '../../Asset/Illustration/storeimg2.jpg'\r\nimport Productimage from '../../Asset/Illustration/storeimg.jpg'\r\nimport Logopikapp from '../../Asset/Logo/logo4x.png'\r\nimport NotifIcon from '../../Asset/Icon/bell.png'\r\nimport ProfileIcon from '../../Asset/Icon/avatar.png'\r\nimport OpenHourIcon from '../../Asset/Icon/hour.png'\r\nimport CoinIcon from '../../Asset/Icon/coin.png'\r\nimport LocationIcon from '../../Asset/Icon/location.png'\r\nimport PhoneIcon from '../../Asset/Icon/phone.png'\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport ArrowIcon from '../../Asset/Icon/arrowselect.png'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport Swal from 'sweetalert2'\r\nimport { connect } from 'react-redux'\r\nimport { ValidQty, OpenSelect } from '../../Redux/Actions'\r\nimport TourPage from '../../Component/Tour/TourPage';\r\nimport { firebaseAnalytics } from '../../firebaseConfig'\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n  foodCategory: '',\r\n  listcheckbox: [],\r\n  listradio: [],\r\n  foodTotal: 0,\r\n};\r\n\r\nvar currentTotal = 0\r\n\r\nclass ProductView extends React.Component {\r\n  state = {\r\n    page: 0, //products pagination\r\n    size: 9, //set amount of products to be shown in frontend\r\n    boolpage: false,\r\n    productPage: [], //set how many page of product merchant from backend server\r\n    idCateg: [], //set current product page of specific size of loaded products\r\n    testColor: false,\r\n    testingchange: false, //only for testing, would be remove\r\n    showModal: false, // show customization of selected menu such as qty, notes and more advance choice\r\n    showMenuDet: false, //show menu detail\r\n    isLogin: false,\r\n    data: {\r\n      mid: \"\",\r\n      title: \"\",\r\n      image: \"\",\r\n      logo: \"\",\r\n      desc: \"\",\r\n      address: \"\",\r\n      rating: \"\",\r\n      phone: \"\",\r\n      currentData: {\r\n        productId: \"\",\r\n        category: \"\",\r\n        foodName: \"\",\r\n        foodDesc: \"\",\r\n        foodPrice: 0,\r\n        foodImage: \"\",\r\n        foodExt: [\r\n          {\r\n            name: \"\",\r\n            amount: 0,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    backColor1: \"\", //merchant info background color\r\n    backColor2: \"\", //products info background color\r\n    categName: \"All Categories\", //initial for dropdown select\r\n    allProductsandCategories: [{ category_id: \"\", category_name: \"\", order: null, category_products: [] }], //mapping from API\r\n    productCategpersize: [{ category_id: \"\", category_name: \"\", order: null, category_products: [] }], //tobe shown in products area\r\n    choosenIndCateg: null, //index of category selected when load more products in selected category\r\n    counterLoad: 0,\r\n    isScrolling: false,\r\n    startTour: false,\r\n    steptour: [\r\n      {\r\n        selector: '',\r\n        content: () => (\r\n          <div>\r\n            <h2>Selamat Datang di PikApp!</h2>\r\n            <br />\r\n            <span>Yuk caritau cara memesan dengan PikApp dengan mudah.</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.product-merchant',\r\n        content: () => (\r\n          <div>\r\n            <h4>Ini adalah Menu Restoran</h4>\r\n            <br />\r\n            <span>Kamu bisa pilih makanan kesukaan kamu disini. Silakan tap untuk dipesan!</span>\r\n          </div>\r\n        )\r\n      }\r\n    ]\r\n  };\r\n\r\n  timeout = null\r\n\r\n  componentDidMount() {\r\n    firebaseAnalytics.logEvent(\"merchant_detail_visited\")\r\n    this.props.ValidQty(0)\r\n    document.body.style.backgroundColor = 'white'\r\n    Cookies.set(\"lastProduct\", window.location.href, { expires: 1 })\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"));\r\n      this.setState({ isLogin: auth.isLogged });\r\n    }\r\n\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n    }\r\n    const value = queryString.parse(window.location.search);\r\n    const mid = value.mid;\r\n    const notab = value.table || \"\"\r\n\r\n    // let longlatAddress\r\n    let addressRoute\r\n    // if (JSON.parse(localStorage.getItem('longlat'))) {\r\n    //   longlatAddress = JSON.parse(localStorage.getItem('longlat'))\r\n    //   addressRoute = address + \"home/v2/detail/merchant/\" + longlatAddress.lon + \"/\" + longlatAddress.lat + \"/\"\r\n    // }\r\n    // if (navigator.geolocation) { //SHUTDOWN FOR A WHILE\r\n    //   navigator.geolocation.getCurrentPosition(position => {\r\n    //     let latitude = position.coords.latitude\r\n    //     let longitude = position.coords.longitude\r\n    //   })\r\n    // }\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    addressRoute = address + \"home/v2/detail/merchant/\" + longitude + \"/\" + latitude + \"/\"\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n\r\n    Axios(addressRoute, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\": \"PUBLIC\",\r\n        \"mid\": mid,\r\n      },\r\n      method: \"GET\"\r\n    })\r\n      .then((res) => {\r\n        // console.log(res.data.results);\r\n        var currentMerchant = {\r\n          mid: \"\",\r\n          storeName: \"\",\r\n          storeDesc: \"\",\r\n          distance: \"\",\r\n          storeImage: \"\",\r\n          storeAdress: \"\",\r\n          storeRating: \"\",\r\n          storeLogo: \"\",\r\n          storePhone: \"\",\r\n        };\r\n        currentMerchant.mid = res.data.results.mid;\r\n        currentMerchant.storeName = res.data.results.merchant_name;\r\n        currentMerchant.storeDesc = \"Desc\";\r\n        currentMerchant.distance = res.data.results.merchant_distance;\r\n        currentMerchant.storeImage = res.data.results.merchant_pict;\r\n        currentMerchant.storeAdress = res.data.results.merchant_address;\r\n        currentMerchant.storeRating = res.data.results.merchant_rating;\r\n        currentMerchant.storeLogo = res.data.results.merchant_logo;\r\n        currentMerchant.storePhone = res.data.results.merchant_phone;\r\n\r\n        let selectedStore = []\r\n        selectedStore.push(res.data.results)\r\n        localStorage.setItem('selectedMerchant', JSON.stringify(selectedStore))\r\n        Cookies.set(\"currentMerchant\", currentMerchant, { expires: 1 })\r\n\r\n        let selectedMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n        let filtersizeMerchant = JSON.parse(localStorage.getItem('selectedMerchant'))\r\n\r\n        let stateData = { ...this.state.data };\r\n        stateData.mid = mid;\r\n        stateData.title = currentMerchant.storeName;\r\n        stateData.image = currentMerchant.storeImage;\r\n        stateData.logo = currentMerchant.storeLogo;\r\n        stateData.desc = currentMerchant.storeDistance;\r\n        stateData.address = currentMerchant.storeAdress;\r\n        stateData.rating = currentMerchant.storeRating;\r\n        stateData.phone = currentMerchant.storePhone;\r\n        stateData.notable = notab\r\n        var productCateg = []\r\n        var idCateg = []\r\n        var productPage = []\r\n        productCateg = selectedMerchant[0].categories.map((categ) => {\r\n          idCateg.push(0)\r\n          productPage.push(this.state.size)\r\n          return categ\r\n        })\r\n\r\n        productCateg.forEach((val) => {\r\n          val.category_products = []\r\n        })\r\n\r\n        productCateg.forEach((categProd) => {\r\n          selectedMerchant[0].products.forEach((allproducts) => {\r\n            if (categProd.category_id == allproducts.product_category) { //category categProd strings, allproducts number !NOTE\r\n              categProd.category_products.push({\r\n                productId: allproducts.product_id,\r\n                category: allproducts.product_category,\r\n                foodName: allproducts.product_name,\r\n                foodDesc: allproducts.product_desc,\r\n                foodPrice: allproducts.product_price,\r\n                foodRating: allproducts.rating,\r\n                foodImage: allproducts.product_picture1,\r\n                foodExt: [\r\n                  {\r\n                    name: \"\",\r\n                    amount: 0,\r\n                  },\r\n                ],\r\n              })\r\n            }\r\n          })\r\n        })\r\n\r\n        let productPerSize = filtersizeMerchant[0].categories.map((categ) => {\r\n          return categ\r\n        })\r\n\r\n        productPerSize.forEach((val) => {\r\n          val.category_products = []\r\n        })\r\n\r\n        productPerSize.forEach((categProd) => {\r\n          filtersizeMerchant[0].products.forEach((allproducts) => {\r\n            if (categProd.category_id == allproducts.product_category) { //category categProd strings, allproducts number !NOTE\r\n              categProd.category_products.push({\r\n                productId: allproducts.product_id,\r\n                category: allproducts.product_category,\r\n                foodName: allproducts.product_name,\r\n                foodDesc: allproducts.product_desc,\r\n                foodPrice: allproducts.product_price,\r\n                foodRating: allproducts.rating,\r\n                foodImage: allproducts.product_picture1,\r\n                foodExt: [\r\n                  {\r\n                    name: \"\",\r\n                    amount: 0,\r\n                  },\r\n                ],\r\n              })\r\n            }\r\n          })\r\n        })\r\n\r\n        let firstShownProduct = []\r\n        productPerSize.forEach((categProd, indexcategProd) => {\r\n          firstShownProduct.push(categProd)\r\n          let newFilter = categProd.category_products.filter((valProd, indexvalProd) => {\r\n            return indexvalProd < this.state.size\r\n          })\r\n          categProd.category_products = newFilter\r\n          firstShownProduct[indexcategProd].category_products = []\r\n          firstShownProduct[indexcategProd].category_products = newFilter\r\n        })\r\n\r\n\r\n        let newImage = Storeimg\r\n        Axios.get(currentMerchant.storeImage)\r\n          .then(() => {\r\n            newImage = currentMerchant.storeImage\r\n            prominent(newImage, { amount: 3 }).then((color) => {\r\n              // return RGB color for example [241, 221, 63]\r\n              var merchantColor = rgbHex(color[0][0], color[0][1], color[0][2])\r\n              var productColor = rgbHex(color[2][0], color[2][1], color[2][2])\r\n              this.brightenColor(merchantColor, 70, productColor, 60)\r\n              this.setState({ data: stateData, allProductsandCategories: productCateg, productCategpersize: productPerSize, idCateg, productPage });\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n              document.addEventListener('scroll', this.onScrollCart)\r\n            });\r\n\r\n            if (localStorage.getItem(\"productTour\") == 1) {\r\n              if (this.props.AuthRedu.isMerchantQR === false) {\r\n                this.state.steptour.shift();\r\n              }\r\n              this.setState({ startTour: true });\r\n            }\r\n            else if ((localStorage.getItem('merchantFlow') == 1) && (this.props.AuthRedu.isMerchantQR === true)) {\r\n              this.setState({ startTour: true });\r\n            }\r\n          }).catch(err => {\r\n            console.log(err)\r\n            newImage = Storeimg\r\n            prominent(newImage, { amount: 3 }).then((color) => {\r\n              // return RGB color for example [241, 221, 63]\r\n              var merchantColor = rgbHex(color[0][0], color[0][1], color[0][2])\r\n              var productColor = rgbHex(color[2][0], color[2][1], color[2][2])\r\n              this.brightenColor(merchantColor, 70, productColor, 60)\r\n              this.setState({ data: stateData, allProductsandCategories: productCateg, productCategpersize: productPerSize, idCateg, productPage });\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n            });\r\n\r\n            if (localStorage.getItem(\"productTour\") == 1) {\r\n              if (this.props.AuthRedu.isMerchantQR === false) {\r\n                this.state.steptour.shift();\r\n              }\r\n              this.setState({ startTour: true });\r\n            }\r\n            else if ((localStorage.getItem('merchantFlow') == 1) && (this.props.AuthRedu.isMerchantQR === true)) {\r\n              this.setState({ startTour: true });\r\n            }\r\n          })\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.idCateg[this.state.choosenIndCateg] > 0) { //load more products with selected index of category\r\n      if (this.state.boolpage === true) {\r\n        this.loadProducts(this.state.choosenIndCateg)\r\n      }\r\n    }\r\n\r\n    if (this.state.isLogin === false) {\r\n      var auth = {\r\n        isLogged: false,\r\n        token: \"\",\r\n        new_event: true,\r\n        recommendation_status: false,\r\n        email: \"\",\r\n      };\r\n      if (Cookies.get(\"auth\") !== undefined) {\r\n        auth = JSON.parse(Cookies.get(\"auth\"));\r\n        this.setState({ isLogin: auth.isLogged });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  brightenColor = (hex, percent, hex2, percent2) => {\r\n    // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`\r\n    //backColor1\r\n    if (hex.length == 3) {\r\n      hex = hex.replace(/(.)/g, '$1$1');\r\n    }\r\n\r\n    var r = parseInt(hex.substr(0, 2), 16),\r\n      g = parseInt(hex.substr(2, 2), 16),\r\n      b = parseInt(hex.substr(4, 2), 16);\r\n\r\n    let brightColor = '#' +\r\n      ((0 | (1 << 8) + r + (256 - r) * percent / 100).toString(16)).substr(1) +\r\n      ((0 | (1 << 8) + g + (256 - g) * percent / 100).toString(16)).substr(1) +\r\n      ((0 | (1 << 8) + b + (256 - b) * percent / 100).toString(16)).substr(1);\r\n\r\n    //backColor2\r\n    if (hex2.length == 3) {\r\n      hex2 = hex2.replace(/(.)/g, '$1$1');\r\n    }\r\n\r\n    var r2 = parseInt(hex2.substr(0, 2), 16),\r\n      g2 = parseInt(hex2.substr(2, 2), 16),\r\n      b2 = parseInt(hex2.substr(4, 2), 16);\r\n\r\n    let brightColor2 = '#' +\r\n      ((0 | (1 << 8) + r2 + (256 - r2) * percent2 / 100).toString(16)).substr(1) +\r\n      ((0 | (1 << 8) + g2 + (256 - g2) * percent2 / 100).toString(16)).substr(1) +\r\n      ((0 | (1 << 8) + b2 + (256 - b2) * percent2 / 100).toString(16)).substr(1);\r\n\r\n    this.setState({ backColor1: brightColor, backColor2: brightColor2, testColor: false })\r\n    document.body.style.backgroundColor = '#' + hex;\r\n  }\r\n\r\n  onScrollCart = () => {\r\n    this.setState({ isScrolling: true })\r\n    clearTimeout(this.timeout)\r\n    this.timeout = setTimeout(() => {\r\n      this.setState({ isScrolling: false })\r\n    }, 300);\r\n  }\r\n\r\n  loadProducts = (indexOfCateg) => {\r\n    let getindexProd = this.state.allProductsandCategories[indexOfCateg].category_products\r\n    let loadtheProd = getindexProd.filter((valProd, indvalProd) => {\r\n      return indvalProd >= this.state.idCateg[indexOfCateg] && indvalProd < this.state.productPage[indexOfCateg]\r\n    })\r\n\r\n    let updatedProduct = this.state.productCategpersize\r\n    updatedProduct.forEach((value, index) => {\r\n      if (index === indexOfCateg) {\r\n        loadtheProd.forEach((valLoadProd) => {\r\n          value.category_products.push(valLoadProd)\r\n        })\r\n      }\r\n    })\r\n\r\n    this.setState({ boolpage: false, productCategpersize: updatedProduct })\r\n    document.addEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n  handlePhone = (phone) => { //go to Whatsapp chat\r\n    phone.substring(1)\r\n    let waNumber = '62' + phone\r\n    window.location.href = `https://wa.me/${waNumber}`\r\n  }\r\n\r\n  handleDetail(data) {\r\n    this.setState({ currentData: data });\r\n    this.setState({ showMenuDet: true });\r\n    document.body.style.overflowY = 'hidden'\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  setMenuDetail(isShow) {\r\n    this.setState({ showMenuDet: isShow })\r\n    document.body.style.overflowY = ''\r\n  }\r\n\r\n  handleCart = (data) => {\r\n    currentExt = data;\r\n  };\r\n\r\n  handleAddCart = () => {\r\n    var currentMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    const value = queryString.parse(window.location.search);\r\n    const mid = value.mid;\r\n    this.setModal(false);\r\n    var isStorePresent = false;\r\n    let cart = JSON.parse(localStorage.getItem('cart'))\r\n    if (cart.length > 1) {\r\n      if (cart[1].mid !== currentMerchant.mid) {\r\n        let newCart = []\r\n        newCart.push(cart[0]) \r\n        cart = newCart\r\n      }\r\n    }\r\n    cart.forEach((data) => {\r\n      if (data.mid === this.state.data.mid) {\r\n        isStorePresent = true;\r\n      }\r\n    });\r\n\r\n    let duplicateProduct = []\r\n    var isDuplicate = false;\r\n    cart.forEach((data) => {\r\n      if (data.mid === this.state.data.mid) {\r\n        data.food.forEach((food) => {\r\n          if (food.productId === this.state.currentData.productId) {\r\n            isDuplicate = true;\r\n            duplicateProduct.push(food)\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    var isDuplicateSelection = false\r\n    let indexOfspesificCart = 0 //get index of spesific cart product after break loop or match condition\r\n    if (isStorePresent && isDuplicate) {\r\n      let countAllSelection = 0\r\n      let sizecartArr = 0 //size cart of spesific index\r\n      let sizecurrentArr = 0 //size current selected menu\r\n\r\n      //loop list checkbox from current menu selection\r\n      currentExt.listcheckbox.forEach((currentfirstVal) => {\r\n        currentfirstVal.forEach((currentnestedVal) => {\r\n          if (currentnestedVal.name) {\r\n            sizecurrentArr += 1\r\n          }\r\n        })\r\n      })\r\n\r\n      //loop list radio from current menu selection\r\n      currentExt.listradio.forEach((currentfirstVal) => {\r\n        currentfirstVal.forEach((currentnestedVal) => {\r\n          if (currentnestedVal.name) {\r\n            sizecurrentArr += 1\r\n          }\r\n        })\r\n      })\r\n\r\n      let boolSpesificInd = true //to break following loop\r\n      duplicateProduct.forEach((menuProd, index) => {\r\n        if (boolSpesificInd) {\r\n          //loop list checkbox from cart\r\n          menuProd.foodListCheckbox.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n              if (nestedVal.name) {\r\n                sizecartArr += 1\r\n              }\r\n            })\r\n          })\r\n\r\n          //loop list radio from cart\r\n          menuProd.foodListRadio.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n              if (nestedVal.name) {\r\n                sizecartArr += 1\r\n              }\r\n            })\r\n          })\r\n\r\n          // console.log(sizecartArr);\r\n          // console.log(sizecurrentArr);\r\n          if (sizecartArr === sizecurrentArr) {\r\n            menuProd.foodListCheckbox.forEach((firstVal) => {\r\n              firstVal.forEach((nestedVal) => {\r\n\r\n                //loop listcheckbox from current advance selection to be match with added cart\r\n                currentExt.listcheckbox.forEach((currentfirstVal) => {\r\n                  currentfirstVal.forEach((currentnestedVal) => {\r\n                    if (nestedVal.name === currentnestedVal.name) {\r\n                      countAllSelection += 1\r\n                    }\r\n                  })\r\n                })\r\n              })\r\n            })\r\n\r\n            // loop radio from added cart\r\n            menuProd.foodListRadio.forEach((firstVal) => {\r\n              firstVal.forEach((nestedVal) => {\r\n\r\n                //loop radio from current advance selection to be match with added cart\r\n                currentExt.listradio.forEach((currentfirstVal) => {\r\n                  currentfirstVal.forEach((currentnestedVal) => {\r\n                    if (nestedVal.name === currentnestedVal.name) {\r\n                      countAllSelection += 1\r\n                    }\r\n                  })\r\n                })\r\n              })\r\n            })\r\n\r\n            if (sizecartArr === countAllSelection) {\r\n              if (menuProd.foodNote === currentExt.note) {\r\n                indexOfspesificCart = index\r\n                isDuplicateSelection = true\r\n                boolSpesificInd = false\r\n              } else {\r\n                sizecartArr = 0\r\n                countAllSelection = 0\r\n              }\r\n            } else {\r\n              sizecartArr = 0\r\n              countAllSelection = 0\r\n            }\r\n          } else {\r\n            sizecartArr = 0\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    var isFound = false\r\n    if (isStorePresent === true) {\r\n      if (isDuplicate === true) {\r\n        if (isDuplicateSelection) {\r\n          // console.log('duplicate');\r\n          cart.forEach((data) => {\r\n            if (isFound === false) {\r\n              if (data.mid === this.state.data.mid) {\r\n                // console.log('same mid');\r\n                if (isFound === false) {\r\n                  if (duplicateProduct[indexOfspesificCart].foodNote === currentExt.note) {\r\n                    isFound = true\r\n                    duplicateProduct[indexOfspesificCart].foodAmount += currentExt.detailCategory[0].amount\r\n                    duplicateProduct[indexOfspesificCart].foodTotalPrice += currentTotal\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          })\r\n          if (isFound === false) {\r\n            var isAdded = false\r\n            cart.forEach((data) => {\r\n              if (data.mid === this.state.data.mid) {\r\n                data.food.forEach((food) => {\r\n                  if (isAdded === false) {\r\n                    isAdded = true\r\n                    data.food.push({\r\n                      productId: this.state.currentData.productId,\r\n                      foodName: this.state.currentData.foodName,\r\n                      foodPrice: this.state.currentData.foodPrice,\r\n                      foodImage: this.state.currentData.foodImage,\r\n                      foodCategory: currentExt.foodCategory,\r\n                      foodAmount: currentExt.detailCategory[0].amount,\r\n                      foodNote: currentExt.note,\r\n                      foodListCheckbox: currentExt.listcheckbox,\r\n                      foodListRadio: currentExt.listradio,\r\n                      foodTotalPrice: currentTotal\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            })\r\n          };\r\n        } else {\r\n          // console.log('noduplicate choice');\r\n          cart.forEach((data) => {\r\n            if (data.mid === this.state.data.mid) {\r\n              data.food.push({\r\n                productId: this.state.currentData.productId,\r\n                foodName: this.state.currentData.foodName,\r\n                foodPrice: this.state.currentData.foodPrice,\r\n                foodImage: this.state.currentData.foodImage,\r\n                foodCategory: currentExt.foodCategory,\r\n                foodAmount: currentExt.detailCategory[0].amount,\r\n                foodNote: currentExt.note,\r\n                foodListCheckbox: currentExt.listcheckbox,\r\n                foodListRadio: currentExt.listradio,\r\n                foodTotalPrice: currentTotal\r\n              });\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        // console.log('noduplicate product');\r\n        cart.forEach((data) => {\r\n          if (data.mid === this.state.data.mid) {\r\n            data.food.push({\r\n              productId: this.state.currentData.productId,\r\n              foodName: this.state.currentData.foodName,\r\n              foodPrice: this.state.currentData.foodPrice,\r\n              foodImage: this.state.currentData.foodImage,\r\n              foodCategory: currentExt.foodCategory,\r\n              foodAmount: currentExt.detailCategory[0].amount,\r\n              foodNote: currentExt.note,\r\n              foodListCheckbox: currentExt.listcheckbox,\r\n              foodListRadio: currentExt.listradio,\r\n              foodTotalPrice: currentTotal\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      cart.push({\r\n        mid: mid,\r\n        storeName: currentMerchant.storeName,\r\n        storeDesc: currentMerchant.storeDesc,\r\n        storeDistance: currentMerchant.distance,\r\n        food: [\r\n          {\r\n            productId: this.state.currentData.productId,\r\n            foodName: this.state.currentData.foodName,\r\n            foodPrice: this.state.currentData.foodPrice,\r\n            foodImage: this.state.currentData.foodImage,\r\n            foodCategory: currentExt.foodCategory,\r\n            foodAmount: currentExt.detailCategory[0].amount,\r\n            foodNote: currentExt.note,\r\n            foodListCheckbox: currentExt.listcheckbox,\r\n            foodListRadio: currentExt.listradio,\r\n            foodTotalPrice: currentTotal\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    let addedMerchants = []\r\n    if (Cookies.get(\"addedMerchants\") === undefined) {\r\n      if (!addedMerchants.includes(mid)) {\r\n        addedMerchants.push(mid)\r\n        Cookies.set(\"addedMerchants\", addedMerchants)\r\n      }\r\n    } else {\r\n      addedMerchants = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n      if (!addedMerchants.includes(mid)) {\r\n        addedMerchants.push(mid)\r\n        Cookies.set(\"addedMerchants\", addedMerchants)\r\n      }\r\n    }\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    Swal.fire({\r\n      position: 'top',\r\n      icon: 'success',\r\n      title: 'Berhasil masuk cart',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    let newNotes = ''\r\n    currentExt.listcheckbox.forEach(val => {\r\n      val.forEach(val2 => {\r\n        return newNotes += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    currentExt.listradio.forEach(val => {\r\n      val.forEach(val2 => {\r\n        return newNotes += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    if (currentExt.note) {\r\n      newNotes += currentExt.note\r\n    }\r\n\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/cart-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"POST\",\r\n      data: {\r\n        mid: this.state.data.mid,\r\n        pid: this.state.currentData.productId,\r\n        notes: newNotes,\r\n        qty: currentExt.detailCategory[0].amount,\r\n      }\r\n    })\r\n      .then(() => {\r\n        console.log('addtocart succeed');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  changeMenu = () => {\r\n    this.props.OpenSelect(!this.props.AllRedu.openSelect)\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n  changeHeader = (menu) => {\r\n    this.props.OpenSelect(false)\r\n    this.setState({ categName: menu })\r\n  }\r\n\r\n  isBottom = (el) => {\r\n    return (el.getBoundingClientRect().top + 100) <= window.innerHeight\r\n  }\r\n\r\n  stopAndLoadMore = (ind) => {\r\n    // console.log(ind);\r\n    // console.log(this.state.idCateg[ind]);\r\n    // console.log(this.state.productPage[ind]);\r\n    if (this.state.productCategpersize[ind].category_products.length < this.state.allProductsandCategories[ind].category_products.length) {\r\n      // console.log('testloadmore');\r\n      var openidCateg = [...this.state.idCateg]\r\n      openidCateg[ind] += this.state.size\r\n\r\n      var openproductPage = [...this.state.productPage]\r\n      openproductPage[ind] += this.state.size\r\n\r\n      this.setState({ idCateg: openidCateg, productPage: openproductPage, boolpage: true, choosenIndCateg: ind })\r\n    } else {\r\n      // console.log('nambah');\r\n      var num = this.state.counterLoad\r\n      num++\r\n      this.setState({ counterLoad: num, choosenIndCateg: ind })\r\n      document.addEventListener('scroll', this.loadMoreMerchant)\r\n    }\r\n  }\r\n\r\n  loadMoreMerchant = () => {\r\n    this.state.productCategpersize.forEach((val, ind) => {\r\n      var wrappedElement = document.getElementById(ind)\r\n      if (this.isBottom(wrappedElement)) {\r\n        // console.log(this.state.counterLoad, 'counterLoad');\r\n        // console.log(wrappedElement.id, 'wrap');\r\n        if (wrappedElement.id == this.state.counterLoad) {\r\n          // console.log(ind, 'selected index');\r\n          document.removeEventListener('scroll', this.loadMoreMerchant)\r\n          this.stopAndLoadMore(ind)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n    document.removeEventListener('scroll', this.onScrollCart)\r\n  }\r\n\r\n  contentView = () => {\r\n    return this.state.productCategpersize.map((categ, indcateg) => {\r\n      return (\r\n        <div key={indcateg} className='product-section'>\r\n          <h2 id={categ.category_name.toLocaleLowerCase()} className='product-categ'>{categ.category_name.toLocaleLowerCase() || <Skeleton height={50} width={200} />}</h2>\r\n\r\n          <div className='list-product'>\r\n            {\r\n              categ.category_products.map((product, indprod) => {\r\n                return (\r\n                  <div key={indprod} className='product-merchant' onClick={() => this.handleDetail(product)}>\r\n                    <div className='product-img'>\r\n                      <img src={product.foodImage} className='product-imgContent' alt='' />\r\n                    </div>\r\n\r\n                    {/* desktop view */}\r\n                    <div className='product-detail'>\r\n                      {/* <div className='product-star'>\r\n                        <img className='product-star-img' src={StarIcon} alt='' />\r\n                        <h6 className='product-star-rating'>{product.foodRating}</h6>\r\n                      </div> */}\r\n\r\n                      <div className='product-name'>\r\n                        {product.foodName}\r\n                      </div>\r\n\r\n                      <div className='product-desc'>\r\n                        {product.foodDesc}\r\n                      </div>\r\n\r\n                      <div className='product-price'>\r\n                        {Intl.NumberFormat(\"id-ID\").format(product.foodPrice)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* mobile view */}\r\n                    <div className='product-detail-mob'>\r\n                      <div className='product-detailInfo-mob'>\r\n                        {/* <div className='product-star-mob'>\r\n                          <img className='product-star-img-mob' src={StarIcon} alt='' />\r\n                          <h6 className='product-star-rating-mob'>{product.foodRating}</h6>\r\n                        </div> */}\r\n\r\n                        <div className='product-name-mob'>\r\n                          {product.foodName}\r\n                        </div>\r\n\r\n                        <div className='product-desc-mob'>\r\n                          {product.foodDesc}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='product-price-mob'>\r\n                        {Intl.NumberFormat(\"id-ID\").format(product.foodPrice)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </div>\r\n          {\r\n            this.state.productCategpersize[indcateg].category_products.length < this.state.allProductsandCategories[indcateg].category_products.length ?\r\n              <div id={indcateg}>\r\n                <Skeleton style={{ paddingTop: 100, borderRadius: 30 }} />\r\n              </div>\r\n              :\r\n              <div id={indcateg}>\r\n                {/* <Skeleton style={{paddingTop:100, borderRadius: 30}} /> */}\r\n              </div>\r\n          }\r\n        </div>\r\n      );\r\n    })\r\n  }\r\n\r\n  handleCartAmount = (price) => {\r\n    currentTotal = price\r\n  }\r\n\r\n  menuDetail = () => {\r\n    if (this.state.showMenuDet === true) {\r\n      return (\r\n        <MenuDetail\r\n          isShow={this.state.showMenuDet}\r\n          onHide={() => this.setMenuDetail(false)}\r\n          datas={this.state.currentData}\r\n          handleCateg={this.state.productCategpersize}\r\n          handleAmount={this.handleCartAmount}\r\n          handleClick={this.handleAddCart}\r\n          handleData={this.handleCart}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  tourPage = () => {\r\n    if (this.state.startTour === true) {\r\n      return (\r\n        <TourPage\r\n          stepsContent={this.state.steptour}\r\n          isShowTour={this.state.startTour}\r\n          isHideTour={() => this.showTourPage(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  showTourPage = (isShowTour) => {\r\n    this.setState({ startTour: isShowTour });\r\n    document.body.style.overflowY = 'auto';\r\n    localStorage.setItem('productTour', 0);\r\n    // if(this.props.AuthRedu.isMerchantQR === true) {\r\n    localStorage.setItem('merchantFlow', 0);\r\n    localStorage.setItem('storeTour', 0);\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    let cartButton;\r\n    const value = queryString.parse(window.location.search);\r\n    let notab = \"\"\r\n    if (localStorage.getItem('table')) {\r\n      if (!value.table) {\r\n        notab = localStorage.getItem('fctable')\r\n      } else {\r\n        notab = value.table || \"\"\r\n      }\r\n    } else {\r\n      if (localStorage.getItem('fctable')) {\r\n        notab = localStorage.getItem('fctable')\r\n      } else {\r\n        notab = value.table || \"\"\r\n      }\r\n    }\r\n    if (JSON.parse(localStorage.getItem('cart'))) {\r\n      let allCart = JSON.parse(localStorage.getItem('cart'))\r\n      let filterMerchantCart = allCart.filter(cartVal => {\r\n        return this.state.data.mid === cartVal.mid\r\n      })\r\n      if (filterMerchantCart.length) {\r\n        localStorage.setItem('table', notab)\r\n        localStorage.setItem('lastTable', notab)\r\n        let totalCartIcon = 0\r\n        filterMerchantCart[0].food.forEach(valCart => {\r\n          totalCartIcon += valCart.foodTotalPrice\r\n        })\r\n        if (filterMerchantCart[0].mid) {\r\n          if (this.state.isScrolling) {\r\n            cartButton = <></>\r\n          } else {\r\n            cartButton = (\r\n              <Link to={\"/cart\"}>\r\n                <div className='cartIcon-layout'>\r\n                  <div className='cartIcon-content'>\r\n                    <div className='cartItem-total'>Checkout {filterMerchantCart[0].food.length} Items</div>\r\n                    <div className='cartItem-price'>{Intl.NumberFormat(\"id-ID\").format(totalCartIcon)}</div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          }\r\n        } else {\r\n          cartButton = <></>;\r\n        }\r\n      } else {\r\n        cartButton = <></>;\r\n      }\r\n    }\r\n\r\n    if (this.state.categName !== \"All Categories\") {\r\n      if (this.props.AllRedu.openSelect === false) {\r\n        //scroll to selected menu\r\n        document.addEventListener('scroll', this.loadMoreMerchant)\r\n        document.getElementById(this.state.categName).scrollIntoView({ behavior: \"smooth\" })\r\n        this.setState({ categName: 'All Categories' })\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='storeBanner'>\r\n          {\r\n            this.state.data.image ?\r\n              <img src={this.state.data.image} style={{ objectFit: 'cover' }} width='100%' height='100%' alt='' />\r\n              :\r\n              <Skeleton style={{ paddingTop: 10, width: \"100%\", height: \"100%\" }} />\r\n          }\r\n\r\n          {\r\n            this.state.isLogin ?\r\n              <div className='iconBanner'>\r\n                <Link to={\"/profile\"}>\r\n                  <div className='profileIcon-sec'>\r\n                    <div className='profileIcon'>\r\n                      <span className='reactProfIcons'>\r\n                        <img className='profileicon-img' src={ProfileIcon} alt='' />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n\r\n                <Link to={\"/status\"}>\r\n                  <div className='notifIcon-sec'>\r\n                    <div className='notifIcon'>\r\n                      <span className='reactNotifIcons'>\r\n                        <img className='notificon-img' src={NotifIcon} alt='' />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n              :\r\n              <div></div>\r\n          }\r\n        </div>\r\n        <div className='merchant-section' style={{ backgroundColor: this.state.backColor1 }}>\r\n          <div className='inside-merchantSection'>\r\n            <div className='merchant-info'>\r\n              <div className='top-merchantInfo'>\r\n                <div className='inside-topMerchantInfo'>\r\n                  <div className='merchant-title'>\r\n                    <div className='merchant-logo'>\r\n                      {\r\n                        this.state.data.logo ?\r\n                          <img src={this.state.data.logo} style={{ objectFit: 'cover' }} width='100%' height='100%' alt='' />\r\n                          :\r\n                          <Skeleton style={{ paddingTop: 10, width: \"100%\", height: \"100%\" }} />\r\n                      }\r\n                    </div>\r\n\r\n                    <div className='merchant-name'>\r\n                      <div className='merchant-mainName'>\r\n                        {this.state.data.title || <Skeleton style={{ paddingTop: 30, width: 200 }} />}\r\n                      </div>\r\n\r\n                      <div className='merchant-categName'>\r\n                        <div className='merchant-allcateg'>Merchant Category</div>\r\n                        <div className='merchant-starInfo'>\r\n                          {\r\n                            // this.state.data.rating ?\r\n                            //   <>\r\n                            //     <img className='star-img' src={StarIcon} alt='' />\r\n                            //     <div className='merchant-star'>{this.state.data.rating}</div>\r\n                            //   </>\r\n                            //   :\r\n                            //   null\r\n                            // <Skeleton width={50} />\r\n                          }\r\n                          {/* <div className='star-votes'>(50+ Upvotes)</div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='merchant-call-sec' onClick={() => this.handlePhone(this.state.data.phone)}>\r\n                    <div className='merchant-call'>\r\n                      <span className='merchantCall-icon'>\r\n                        <img className='merchantCall-img' src={PhoneIcon} alt='' />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='bottom-merchantInfo'>\r\n                <div className='inside-bottomMerchantInfo'>\r\n                  {/* <div className='merchantdetail-section'>\r\n                    <div className='icon-based'>\r\n                      <img className='openhouricon' src={OpenHourIcon} alt='' />\r\n                    </div>\r\n\r\n                    <div className='detail-info'>\r\n                      <div className='top-detail-info'>Open</div>\r\n                      <div className='bottom-detail-info'>Jum (08.00 - 20.00)</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='merchantdetail-section'>\r\n                    <div className='icon-based'>\r\n                      <img className='coinicon' src={CoinIcon} alt='' />\r\n                    </div>\r\n\r\n                    <div className='detail-info'>\r\n                      <div className='top-detail-info'>$$$</div>\r\n                      <div className='bottom-detail-info'>50 K - 100 K</div>\r\n                    </div>\r\n                  </div> */}\r\n                  <div className='merchantdetail-section'>\r\n                    <div className='icon-based'>\r\n                      <img className='locationicon' src={LocationIcon} alt='' />\r\n                    </div>\r\n\r\n                    <div className='detail-info'>\r\n                      <div className='top-detail-info'>Store Address</div>\r\n                      <div className='bottom-detail-info'>{this.state.data.address || <Skeleton style={{ paddingTop: 30, width: 100 }} />}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='merchant-category'>\r\n              <div className='select-category'>\r\n                <div className='listCategory'>\r\n                  <h2 className='categoryName'>{this.state.categName}</h2>\r\n\r\n                  <div className='arrow-based' onClick={() => this.changeMenu()} >\r\n                    <img className='arrowicon' src={ArrowIcon} alt='' />\r\n                  </div>\r\n                </div>\r\n\r\n                {\r\n                  this.props.AllRedu.openSelect ?\r\n                    <div className='custom-options'>\r\n                      <span className='custom-optionCloser' defaultValue='Rice Box'>Closer</span>\r\n                      {\r\n                        this.state.productCategpersize.map((menuCategory, index) => (\r\n                          <span key={index} className='custom-option' onClick={() => this.changeHeader(menuCategory.category_name.toLocaleLowerCase())}>{menuCategory.category_name.toLocaleLowerCase()}</span>\r\n                        ))\r\n                      }\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='product-layout' style={{ backgroundColor: this.state.backColor2 }}>\r\n          <div className='mainproduct-sec'>\r\n            {this.contentView()}\r\n\r\n            <div className='pikapp-info'>\r\n              <h3 className='pikappInfo'>Digital Menu By</h3>\r\n              <img className='Logopikapp' src={Logopikapp} alt='' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {cartButton}\r\n        {this.menuDetail()}\r\n        {this.tourPage()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    AllRedu: state.AllRedu,\r\n    AuthRedu: state.AuthRedu\r\n  }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { ValidQty, OpenSelect })(ProductView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["237","238","239","240","241","242"],"import React from \"react\";\r\nimport ArrowDownColor from \"../../Asset/Icon/ArrowDownColor.png\";\r\nimport ArrowRightWhite from \"../../Asset/Icon/ArrowRightWhite.png\";\r\nimport diningTableColor from \"../../Asset/Icon/diningTableColor.png\";\r\nimport takeawayColor from \"../../Asset/Icon/takeawayColor.png\";\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport checklistLogo from \"../../Asset/Icon/checklist.png\";\r\nimport ArrowBack from \"../../Asset/Icon/arrow-left.png\";\r\nimport CartModal from \"../../Component/Modal/CartModal\";\r\nimport { cart } from \"../../App\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport MenuDetail from '../../Component/Menu/MenuDetail'\r\nimport NotifModal from '../../Component/Modal/NotifModal'\r\nimport { connect } from \"react-redux\";\r\nimport { EditMenuCart, IsMerchantQR, DataOrder } from '../../Redux/Actions'\r\nimport Loader from 'react-loader-spinner'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LoadingButton, DoneLoad } from '../../Redux/Actions'\r\nimport Swal from 'sweetalert2';\r\nimport TourPage from '../../Component/Tour/TourPage';\r\nimport { firebaseAnalytics } from '../../firebaseConfig'\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n  foodCategory: '',\r\n  listcheckbox: [],\r\n  listradio: []\r\n};\r\n\r\nvar currentTotal = 0\r\n\r\nvar finalProduct = [\r\n  {\r\n    totalPrice: 20000,\r\n    discountPrice: 0,\r\n  },\r\n]\r\n\r\nclass CartView extends React.Component {\r\n  state = {\r\n    changeUI: true,\r\n    showModal: false,\r\n    currentModalTitle: \"\",\r\n    paymentOption: \"Pembayaran Di Kasir\",\r\n    paymentType: \"PAY_BY_CASHIER\",\r\n    biz_type: this.props.noTable !== undefined ? this.props.noTable > 0 ? \"DINE_IN\" : \"TAKE_AWAY\" : \"DINE_IN\",\r\n    eat_type: this.props.noTable !== undefined ? this.props.noTable > 0 ? \"Makan Di Tempat\" : \"Bungkus / Takeaway\" : \"Makan Di Tempat\",\r\n    indexOptionEat: this.props.noTable !== undefined ? this.props.noTable > 0 ? 0 : 1 : 0,\r\n    indexOptionPay: 0,\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n    loadButton: false,\r\n    showMenuDet: false,\r\n    filteredCart: [],\r\n    currentData: {},\r\n    themid: '',\r\n    indexEdit: 0,\r\n    updateData: '',\r\n    successMessage: '',\r\n    isEmailVerified : false,\r\n    isShowCounterTime : false,\r\n    countHit : 0,\r\n    counterTime : 120,\r\n    startTour : false,\r\n    steptour:[\r\n      {\r\n        selector: '.cart-foodService',\r\n        content : () => (\r\n          <div>\r\n            <h4>Mau makan dimana?</h4>\r\n            <br />\r\n            <span>Kamu bisa ubah pilihan makan kamu antara Makan di Tempat atau Takeaway</span>\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        selector: '.cart-paymentService',\r\n        content : () => (\r\n          <div>\r\n            <h4>Bayar pakai apa?</h4>\r\n            <br />\r\n            <span>Kami menyediakan 2 tipe pembayaran, secara OVO ataupun bayar di kasir</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.cart-OrderButton',\r\n        content : () => (\r\n          <div>\r\n            <h4>Sudah siap makan?</h4>\r\n            <br />\r\n            <span>Silakan tekan tombol Order untuk melakukan pembayaran (psstt, untuk pembayaran di kasir, jangan lupa ke kasir ya!)</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.cart-OrderButton-mob',\r\n        content : () => (\r\n          <div>\r\n            <h4>Sudah siap makan?</h4>\r\n            <br />\r\n            <span>Silakan tekan tombol Order untuk melakukan pembayaran (psstt, untuk pembayaran di kasir, jangan lupa ke kasir ya!)</span>\r\n          </div>\r\n        )\r\n      }\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebaseAnalytics.logEvent(\"cart_visited\")\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n      is_email_verified: true\r\n    };\r\n\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    if(window.innerWidth < 700) {\r\n      this.state.steptour.splice(2,1);\r\n    } else {\r\n      this.state.steptour.pop();\r\n    }\r\n\r\n    if (localStorage.getItem(\"cartTour\") == 1) {\r\n      this.setState({ startTour : true});\r\n    } else if ((localStorage.getItem('cartMerchant') == 1) && (this.props.AuthRedu.isMerchantQR === true)) {\r\n      this.setState({ startTour : true});\r\n    }\r\n\r\n    this.setState({ isEmailVerified: auth.is_email_verified });\r\n\r\n    if (this.state.isEmailVerified === false) {\r\n      this.handleReloadEmail();\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.counterTime === 0) {\r\n      clearInterval(this.interval);\r\n      console.log(\"clear\");\r\n    }\r\n  }\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Pilih Cara Makan Anda\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan Di Tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Takeaway / Bungkus\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar Pakai Apa\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cashier\",\r\n            option: \"Pembayaran Di Kasir\",\r\n          },\r\n          {\r\n            image: \"ovo\",\r\n            option: \"Pembayaran Ovo\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"payment-detail\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Rincian Pembayaran\" });\r\n      this.setState({\r\n        currentModal: finalProduct\r\n      });\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e, ind, mid) {\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    if (e.foodAmount > 1) {\r\n      let filteredStore = []\r\n      allCart.forEach((store) => {\r\n        if (store.mid === mid) {\r\n          filteredStore = store.food.filter((data, index) => {\r\n            return index === ind\r\n          })\r\n\r\n          let { foodAmount, foodTotalPrice } = filteredStore[0]\r\n\r\n          let countAmount = foodTotalPrice - (foodTotalPrice / foodAmount)\r\n\r\n          filteredStore[0].foodTotalPrice = countAmount\r\n          filteredStore[0].foodAmount = foodAmount - 1\r\n          store.food[ind] = filteredStore[0]\r\n        }\r\n      });\r\n\r\n      localStorage.setItem('cart', JSON.stringify(allCart))\r\n      this.setState({ updateData: 'updated' })\r\n    } else {\r\n      let filteredCart;\r\n      let addedMerchants = []\r\n      let newAllCart = []\r\n      allCart.forEach((store) => {\r\n        if (store.mid === mid) {\r\n          let filteredStore = store.food.filter((data, index) => {\r\n            return index !== ind\r\n          })\r\n\r\n          if (filteredStore.length === 0) {\r\n            filteredCart = cart.filter((filterStore) => {\r\n              return filterStore.mid !== store.mid;\r\n            });\r\n            localStorage.setItem(\"cart\", JSON.stringify(filteredCart))\r\n            filteredCart.forEach((cart) => {\r\n              addedMerchants.push(cart.mid)\r\n              Cookies.set(\"addedMerchants\", addedMerchants)\r\n            })\r\n          } else {\r\n            let newFilter = store.food\r\n            newFilter = []\r\n            filteredStore.forEach((val) => {\r\n              newFilter.push(val)\r\n            })\r\n            store.food = newFilter\r\n            newAllCart.push(store)\r\n          }\r\n        } else {\r\n          newAllCart.push(store)\r\n        }\r\n      });\r\n\r\n      if (newAllCart.length < 2) {\r\n        cart.splice(1)\r\n        localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n        window.history.back()\r\n      } else {\r\n        let filterMerchantCart = newAllCart.filter(valueCart => {\r\n          return valueCart.mid === mid\r\n        })\r\n        localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n        if (filterMerchantCart.length) {\r\n          this.setState({ updateData: 'updated' })\r\n        } else {\r\n          window.history.back()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleIncrease(e, ind, mid) {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === mid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === ind\r\n        })\r\n\r\n        let { foodAmount, foodTotalPrice } = filteredStore[0]\r\n\r\n        let countAmount = foodTotalPrice + (foodTotalPrice / foodAmount)\r\n\r\n        filteredStore[0].foodTotalPrice = countAmount\r\n        filteredStore[0].foodAmount = foodAmount + 1\r\n        store.food[ind] = filteredStore[0]\r\n      }\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(allCart))\r\n    this.setState({ updateData: 'updated' })\r\n  }\r\n\r\n  handleOption = (data) => {\r\n    let valueTab\r\n    if (this.props.noTable !== undefined) {\r\n      if (this.state.currentModalTitle === \"Pilih Cara Makan Anda\") {\r\n        if (data == 1) {\r\n          valueTab = 0\r\n          valueTab.toString()\r\n          localStorage.setItem('table', valueTab)\r\n        } else {\r\n          valueTab = localStorage.getItem('lastTable')\r\n          valueTab.toString()\r\n          localStorage.setItem('table', valueTab)\r\n        }\r\n      }\r\n    }\r\n    if (this.state.currentModalTitle === \"Pilih Cara Makan Anda\") {\r\n      if (data == 0) {\r\n        this.setState({ biz_type: \"DINE_IN\", eat_type: \"Makan Di Tempat\", indexOptionEat: 0 })\r\n      } else {\r\n        this.setState({ biz_type: \"TAKE_AWAY\", eat_type: \"Bungkus / Takeaway\", indexOptionEat: data })\r\n      }\r\n    } else if (this.state.currentModalTitle === \"Bayar Pakai Apa\") {\r\n      if (data === 0) {\r\n        this.setState({ paymentType: \"PAY_BY_CASHIER\", paymentOption: \"Pembayaran Di Kasir\", indexOptionPay: 0 })\r\n      } else {\r\n        this.setState({ paymentType: \"WALLET_OVO\", paymentOption: \"Pembayaran Ovo\", indexOptionPay: data })\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePayment = () => {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if (auth.isLogged === false) {\r\n      window.history.back()\r\n    }\r\n    this.props.LoadingButton()\r\n\r\n    const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    let storageData = JSON.parse(localStorage.getItem('cart'))\r\n    let noTab = this.props.noTable ? this.props.noTable : 0\r\n    let allMenu = storageData.filter(filterCart => {\r\n      return filterCart.mid === currentCartMerchant.mid\r\n    })\r\n    let selectedProd = []\r\n\r\n    allMenu[0].food.forEach(selectMenu => {\r\n      let newlistArr = ''\r\n      let extraprice = 0\r\n      selectMenu.foodListCheckbox.forEach((val) => {\r\n        val.forEach((val2) => {\r\n          newlistArr += `${val2.name}, `\r\n          extraprice += val2.price\r\n        })\r\n      })\r\n\r\n      selectMenu.foodListRadio.forEach((val) => {\r\n        val.forEach((val2) => {\r\n          newlistArr += `${val2.name}, `\r\n          extraprice += val2.price\r\n        })\r\n      })\r\n\r\n      newlistArr += selectMenu.foodNote\r\n      extraprice = extraprice.toString()\r\n\r\n      selectedProd.push({\r\n        product_id: selectMenu.productId,\r\n        notes: newlistArr,\r\n        qty: selectMenu.foodAmount,\r\n        extra_price: extraprice\r\n      })\r\n    })\r\n\r\n    var requestData = {\r\n      products: selectedProd,\r\n      payment_with: this.state.paymentType,\r\n      mid: currentCartMerchant.mid,\r\n      prices: finalProduct[0].totalPrice.toString(),\r\n      biz_type: this.state.biz_type,\r\n      table_no: noTab.toString()\r\n    }\r\n\r\n    // console.log(requestData);\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    \r\n    Axios(address + \"/txn/v2/txn-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"POST\",\r\n      data: requestData,\r\n    })\r\n      .then((res) => {\r\n        if (this.state.paymentType === 'PAY_BY_CASHIER') {\r\n          this.setState({ successMessage: 'Silahkan Bayar ke Kasir/Penjual' })\r\n          setTimeout(() => {\r\n            let filterOtherCart = storageData.filter(valFilter => {\r\n              return valFilter.mid !== currentCartMerchant.mid\r\n            })\r\n            var dataOrder = {\r\n              transactionId : res.data.results[0].transaction_id,\r\n              totalPayment : requestData.prices,\r\n              paymentType : this.state.paymentType\r\n            };\r\n            this.props.DataOrder(dataOrder);\r\n            localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n            localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n            localStorage.removeItem(\"table\")\r\n            localStorage.removeItem(\"lastTable\")\r\n            localStorage.removeItem(\"fctable\")\r\n            localStorage.removeItem(\"counterPayment\");\r\n            this.setState({ loadButton: true })\r\n            this.props.DoneLoad()\r\n          }, 1000);\r\n        } else {\r\n          this.setState({ successMessage: 'Silahkan Bayar melalui OVO' })\r\n          setTimeout(() => {\r\n            let filterOtherCart = storageData.filter(valFilter => {\r\n              return valFilter.mid !== currentCartMerchant.mid\r\n            })\r\n            var dataOrder = {\r\n              transactionId : res.data.results[0].transaction_id,\r\n              totalPayment : requestData.prices,\r\n              paymentType : this.state.paymentType\r\n            };\r\n            this.props.DataOrder(dataOrder);\r\n            localStorage.setItem(\"payment\", JSON.stringify(dataOrder));\r\n            localStorage.setItem(\"cart\", JSON.stringify(filterOtherCart))\r\n            localStorage.removeItem(\"table\")\r\n            localStorage.removeItem(\"lastTable\")\r\n            localStorage.removeItem(\"fctable\")\r\n            localStorage.removeItem(\"counterPayment\");\r\n            this.setState({ loadButton: true })\r\n            this.props.DoneLoad()\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n          this.props.DoneLoad()\r\n        }\r\n      });\r\n  };\r\n\r\n  notifModal = () => {\r\n    if (this.props.AllRedu.buttonLoad === false) {\r\n      return <NotifModal isShowNotif={this.props.AllRedu.buttonLoad} responseMessage={this.state.successMessage} />\r\n    }\r\n  }\r\n\r\n  newListAllChoices = (food) => {\r\n    let newlistArr = ''\r\n    food.foodListCheckbox.forEach((val) => {\r\n      val.forEach((val2) => {\r\n        return newlistArr += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    food.foodListRadio.forEach((val) => {\r\n      val.forEach((val2) => {\r\n        return newlistArr += `${val2.name}, `\r\n      })\r\n    })\r\n    return <h5 className='cartList-content-choice'>{newlistArr}</h5>\r\n  }\r\n\r\n  onEditCart = (ind, mid) => {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === mid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === ind\r\n        })\r\n      }\r\n    });\r\n\r\n    var objFilteredCart = {\r\n      productId: filteredStore[0].productId,\r\n      foodName: filteredStore[0].foodName,\r\n      foodDesc: \"\",\r\n      foodCategory: filteredStore[0].foodCategory,\r\n      foodPrice: filteredStore[0].foodPrice,\r\n      foodImage: filteredStore[0].foodImage,\r\n      foodNote: filteredStore[0].foodNote,\r\n      foodListCheckbox: filteredStore[0].foodListCheckbox,\r\n      foodListRadio: filteredStore[0].foodListRadio,\r\n      foodTotalPrice: filteredStore[0].foodTotalPrice,\r\n      foodExt: [\r\n        {\r\n          name: \"\",\r\n          amount: filteredStore[0].foodAmount,\r\n        },\r\n      ],\r\n    }\r\n\r\n    this.setState({ showMenuDet: true, filteredCart: filteredStore, currentData: objFilteredCart, indexEdit: ind, themid: mid })\r\n    this.props.EditMenuCart(true)\r\n    document.body.style.overflowY = 'hidden'\r\n  }\r\n\r\n  setMenuDetail(isShow) {\r\n    this.setState({ showMenuDet: isShow })\r\n    document.body.style.overflowY = ''\r\n  }\r\n\r\n  handleCartAmount = (price) => {\r\n    currentTotal = price\r\n  }\r\n\r\n  menuDetail = () => {\r\n    if (this.state.showMenuDet === true) {\r\n      return (\r\n        <MenuDetail\r\n          isShow={this.state.showMenuDet}\r\n          onHide={() => this.setMenuDetail(false)}\r\n          datas={this.state.currentData}\r\n          handleAmount={this.handleCartAmount}\r\n          handleClick={this.handleSaveCart}\r\n          handleData={this.handleCart}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCart = (data) => {\r\n    currentExt = data\r\n  }\r\n\r\n  handleSaveCart = () => {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    let getProductId\r\n    allCart.forEach((store) => {\r\n      if (store.mid === this.state.themid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === this.state.indexEdit\r\n        })\r\n\r\n        getProductId = filteredStore[0].productId\r\n\r\n        filteredStore[0].foodAmount = currentExt.detailCategory[0].amount\r\n        filteredStore[0].foodListCheckbox = currentExt.listcheckbox\r\n        filteredStore[0].foodListRadio = currentExt.listradio\r\n        filteredStore[0].foodNote = currentExt.note\r\n        filteredStore[0].foodTotalPrice = currentTotal\r\n\r\n        store.food[this.state.indexEdit] = filteredStore[0]\r\n      }\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(allCart))\r\n    this.setState({ updateData: 'updated' })\r\n\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    let newNotes = ''\r\n    currentExt.listcheckbox.forEach(val => {\r\n      val.forEach(val2 => {\r\n        return newNotes += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    currentExt.listradio.forEach(val => {\r\n      val.forEach(val2 => {\r\n        return newNotes += `${val2.name}, `\r\n      })\r\n    })\r\n\r\n    if (currentExt.note) {\r\n      newNotes += currentExt.note\r\n    }\r\n\r\n    console.log(newNotes);\r\n\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/cart-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"POST\",\r\n      data: {\r\n        mid: this.state.themid,\r\n        pid: getProductId,\r\n        notes: newNotes,\r\n        qty: currentExt.detailCategory[0].amount,\r\n      }\r\n    })\r\n      .then(() => {\r\n        console.log('savetocart succeed');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleReloadEmail = () => {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n      is_email_verified: true\r\n    };\r\n\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    if (auth.is_email_verified === false) {\r\n      console.log(auth)\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n      Axios(address + \"home/v2/customer-info\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"x-signature\": signature,\r\n          \"token\": auth.token,\r\n        },\r\n        method: \"GET\",\r\n      })\r\n        .then((res) => {\r\n          let data = res.data.results\r\n          auth.is_email_verified = data.is_email_verified;\r\n          Cookies.set(\"auth\", auth, { expires: 1 });\r\n          this.setState({ isEmailVerified: auth.is_email_verified });\r\n        })\r\n        .catch((err) => {\r\n        });\r\n    }\r\n  }\r\n\r\n  handleResendEmail = () => {\r\n    this.setState({ countHit: this.state.countHit + 1 });\r\n\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n      is_email_verified : true\r\n    };\r\n\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replace(/-/g, \"\");\r\n    const date = new Date().toISOString();\r\n    Axios(address + \"auth/resend-email/\" + auth.email + \"/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        Swal.fire({\r\n            position: 'top',\r\n            icon: 'success',\r\n            title: 'Email telah terkirim. Silahkan periksa email Anda.',\r\n            showConfirmButton: true,\r\n            confirmButtonColor: \"#4bb7ac\",\r\n            confirmButtonText: \"OK\",\r\n            closeOnConfirm: false,\r\n            // timer: 3000\r\n        }).then(() => {\r\n            if(this.state.countHit > 1) {\r\n              this.setState({ counterTime : 300});\r\n            } else {\r\n              this.setState({ counterTime : 120});\r\n            }\r\n            \r\n            this.setState({ isShowCounterTime : true });\r\n            this.countDownTime();\r\n        })\r\n      })\r\n      .catch((err) => {\r\n      });\r\n\r\n  }\r\n\r\n  countDownTime = () => {\r\n    this.interval = setInterval(\r\n      () => this.setState((state)=> ({ counterTime: this.state.counterTime - 1 })),\r\n      1000\r\n    );\r\n  }\r\n\r\n  tourPage = () => {\r\n    if (this.state.startTour === true) {\r\n      return (\r\n        <TourPage \r\n          stepsContent={this.state.steptour}\r\n          isShowTour={this.state.startTour}\r\n          isHideTour={() =>this.showTourPage(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  showTourPage = (isShowTour) => {\r\n    this.setState({ startTour: isShowTour });\r\n    document.body.style.overflowY = 'auto';\r\n    this.props.IsMerchantQR(false);\r\n    localStorage.setItem('cartTour', 0);\r\n    localStorage.setItem('storeTour',0);\r\n    localStorage.setItem('cartMerchant', 0);\r\n    localStorage.setItem('merchantFlow', 0);\r\n    localStorage.setItem('productTour', 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loadButton) {\r\n      // return <Redirect to='/status' />\r\n      return <Redirect to='/orderconfirmation' />\r\n    }\r\n\r\n    const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    let filterCart = allCart.filter(valCart => {\r\n      return valCart.mid === currentCartMerchant.mid\r\n    })\r\n    if (filterCart.length === 0) {\r\n      window.history.go(-1)\r\n    } else {\r\n      if (this.state.changeUI) {\r\n        this.setState({ changeUI: false })\r\n      }\r\n    }\r\n\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n      is_email_verified: true\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n      // window.location.href = \"/login\"\r\n    }\r\n\r\n    let modal;\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={this.state.showModal}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n          handleData={this.handleOption}\r\n          indexOptionEat={this.state.indexOptionEat}\r\n          indexOptionPay={this.state.indexOptionPay}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>\r\n    }\r\n\r\n    let storageData = JSON.parse(localStorage.getItem('cart'))\r\n    let data = storageData;\r\n    let storeList = data.filter((store) => {\r\n      if (store.mid !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    let contentView = storeList.map((store) => {\r\n      let storeFood\r\n      if (store.mid === currentCartMerchant.mid) {\r\n        storeFood = store.food.map((food, index) => {\r\n          return (\r\n            <div key={index} className='cartList-content'>\r\n              <div className='cartList-content-frame'>\r\n                <img className='cartList-content-image' src={food.foodImage} alt='' />\r\n              </div>\r\n\r\n              <div className='cartList-content-detail'>\r\n                <div className='cartList-content-detail-left'>\r\n                  <h2 className='cartList-content-title'>{food.foodName}</h2>\r\n                  {this.newListAllChoices(food)}\r\n                  <h5 className='cartList-content-notes'>{food.foodNote}</h5>\r\n                  <h3 className='cartList-content-price'>{Intl.NumberFormat(\"id-ID\").format(food.foodTotalPrice)}</h3>\r\n                </div>\r\n\r\n                <div className='cartList-content-detail-right'>\r\n                  <div className='cartList-editButton' onClick={() => this.onEditCart(index, store.mid)}>\r\n                    <div className='cartList-editWord'>EDIT</div>\r\n                  </div>\r\n\r\n                  <div className='cartList-amountBox'>\r\n                    <div className='cartList-amountBox-inside'>\r\n                      <div className='cartList-minusBox' onClick={() => this.handleDecrease(food, index, store.mid)}>\r\n                        <div className='cartList-minusSym'>\r\n                          -\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className='cartList-numberArea'>\r\n                        {food.foodAmount}\r\n                      </div>\r\n\r\n                      <div className='cartList-plusBox' onClick={() => this.handleIncrease(food, index, store.mid)}>\r\n                        <div className='cartList-plusSym'>\r\n                          +\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      return storeFood\r\n    });\r\n\r\n    let detailView = storeList.map((store, index) => {\r\n      if (store.mid === currentCartMerchant.mid) {\r\n        return (\r\n          <div key={index} className='cart-storeBox'>\r\n            <div className='cart-storeBox-header'>\r\n              <div className='cart-storeBox-title'>\r\n                {store.storeName}\r\n              </div>\r\n\r\n              <div className='cart-storeBox-distance'>\r\n                {store.storeDistance}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='cart-storeBox-content'>\r\n              <h4 className='cart-storeBox-descArea'>\r\n                {store.storeDesc}\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n\r\n    let totalPaymentShow = 0\r\n    let selectedMerch = storeList.filter(store => {\r\n      return store.mid === currentCartMerchant.mid\r\n    });\r\n\r\n    selectedMerch[0].food.forEach(thefood => {\r\n      totalPaymentShow += thefood.foodTotalPrice\r\n    })\r\n\r\n    finalProduct = [\r\n      {\r\n        totalPrice: totalPaymentShow,\r\n        discountPrice: 0,\r\n      },\r\n    ]\r\n\r\n    let paymentImage;\r\n    let eatImage;\r\n    if (this.state.biz_type === \"DINE_IN\") {\r\n      eatImage = diningTableColor;\r\n    } else if (this.state.biz_type === \"TAKE_AWAY\") {\r\n      eatImage = takeawayColor;\r\n    }\r\n    if (this.state.paymentType === \"PAY_BY_CASHIER\") {\r\n      paymentImage = CashierPayment\r\n    } else if (this.state.paymentType === \"WALLET_OVO\") {\r\n      paymentImage = OvoPayment\r\n    }\r\n\r\n    // this.setState({ dataOrder : { totalPayment : totalPaymentShow, paymentType : this.state.paymentType }});\r\n\r\n    if (this.state.changeUI) {\r\n      return (\r\n        <div style={{ display: 'flex', position: 'absolute', height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#4bb7ac\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='cartLayout'>\r\n          {\r\n          !this.state.isEmailVerified ?\r\n          <div className='verificationMsg'>\r\n            <div className='message'>Verifikasi Email Anda</div>\r\n            <div className='messageSend'>\r\n              <span>Email Verifikasi Telah Dirim ke Alamat Email Teregistrasi: <span className=\"txtBold\"> {auth.email} </span> </span>. Belum Masuk ? \r\n              { this.state.counterTime !== 0 && this.state.countHit > 0 ? <span className=\"txtIndent\" disabled={true}>Kirim Ulang</span> : <span className=\"txtUnderline\" onClick={() => this.handleResendEmail()}>Kirim Ulang</span> }\r\n              { this.state.isShowCounterTime ? <span className=\"txtIndent\"> {this.state.counterTime} sec </span> : <span> </span>}\r\n            </div>\r\n          </div>\r\n          :\r\n          <div></div>\r\n          }\r\n          <div className='cartTitle'>\r\n            <span className='logopikappCenter' onClick={() => window.history.back()} >\r\n              <img className='LogoPikappCart' src={ArrowBack} alt='' />\r\n            </span>\r\n\r\n            <h2 className='confirmationOrder'>Konfirmasi Pesanan Anda</h2>\r\n          </div>\r\n\r\n          <div className='cartContent'>\r\n            <div className='cart-LeftSide'>\r\n              <div className='cartList'>\r\n                <div className='cartList-header'>\r\n                  <h4 className='cartList-title'>\r\n                    Item Yang Dibeli\r\n                  </h4>\r\n                </div>\r\n\r\n                {contentView}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='cart-RightSide'>\r\n              <div className='flex-RightSide'>\r\n                {detailView}\r\n\r\n                <div className='cart-foodService' onClick={() => this.handleDetail(\"eat-method\")}>\r\n                  <div className='cart-foodService-header'>\r\n                    <div className='cart-foodService-title'>\r\n                      Pilih Cara Makan Anda\r\n                    </div>\r\n\r\n                    <div className='cart-foodService-selectButton' >\r\n                      <img className='cart-foodService-selectIcon' src={ArrowDownColor} alt='' />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='cart-foodService-content'>\r\n                    <div className='cart-foodService-descArea'>\r\n                      <span>\r\n                        <img className='cart-foodService-logo' src={eatImage} alt='' />\r\n                      </span>\r\n\r\n                      <h3 className='cart-foodService-words'>\r\n                        {this.state.eat_type}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='cart-paymentService' onClick={() => this.handleDetail(\"pay-method\")}>\r\n                  <div className='cart-paymentService-header'>\r\n                    <div className='cart-paymentService-title'>\r\n                      Bayar Pakai Apa?\r\n                    </div>\r\n\r\n                    <div className='cart-paymentService-selectButton'>\r\n                      <img className='cart-paymentService-selectIcon' src={ArrowDownColor} alt='' />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='cart-paymentService-content'>\r\n                    <div className='cart-paymentService-descArea'>\r\n                      <span>\r\n                        <img className='cart-paymentService-logo' src={paymentImage} alt='' />\r\n                      </span>\r\n\r\n                      <h3 className='cart-paymentService-words'>\r\n                        {this.state.paymentOption}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='cart-checkoutArea'>\r\n                  <div className='cart-TotalAmount' onClick={() => this.handleDetail(\"payment-detail\")}>\r\n                    <h3 className='cart-TotalAmount-title'>Total Bayar</h3>\r\n\r\n                    <div className='cart-TotalAmount-bottom'>\r\n                      <h2 className='cart-TotalAmount-price'>Rp. {Intl.NumberFormat(\"id-ID\").format(totalPaymentShow)}</h2>\r\n\r\n                      <img className='cart-TotalAmount-detailArrow' src={ArrowDownColor} alt='' />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='cart-OrderButton buttonorder' onClick={() => this.handlePayment()}>\r\n                    <div className='cart-OrderButton-content'>\r\n                      <span className='cart-OrderButton-Frame'>\r\n                        <img className='cart-OrderButton-checklist' src={checklistLogo} alt='' />\r\n                      </span>\r\n\r\n                      <h1 className='cart-OrderButton-word'>PESAN</h1>\r\n                    </div>\r\n\r\n                    <span>\r\n                      <img className='cart-OrderButton-orderArrow' src={ArrowRightWhite} alt='' />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='cartLayout-mob'>\r\n          <div className='cart-checkoutArea-mob'>\r\n\r\n            <div className='cart-TotalAmount-mob' onClick={() => this.handleDetail(\"payment-detail\")}>\r\n              <h3 className='cart-TotalAmount-title-mob'>Total Bayar</h3>\r\n\r\n              <div className='cart-TotalAmount-bottom-mob'>\r\n                <h2 className='cart-TotalAmount-price-mob'>Rp. {Intl.NumberFormat(\"id-ID\").format(totalPaymentShow)}</h2>\r\n\r\n                <span className='cart-TotalAmount-detailArrowCenter-mob'>\r\n                  <img className='cart-TotalAmount-detailArrow-mob' src={ArrowDownColor} alt='' />\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='cart-OrderButton-mob buttonorder' onClick={() => this.handlePayment()}>\r\n              <div className='cart-OrderButton-content-mob'>\r\n                <span className='cart-OrderButton-Frame-mob'>\r\n                  <img className='cart-OrderButton-checklist-mob' src={checklistLogo} alt='' />\r\n                </span>\r\n\r\n                <h1 className='cart-OrderButton-word-mob'>PESAN</h1>\r\n              </div>\r\n\r\n              <span className='cart-OrderButton-orderArrowCenter-mob'>\r\n                <img className='cart-OrderButton-orderArrow-mob' src={ArrowRightWhite} alt='' />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {modal}\r\n        {this.menuDetail()}\r\n        {this.notifModal()}\r\n        {this.tourPage()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    AllRedu: state.AllRedu,\r\n    AuthRedu: state.AuthRedu\r\n  }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { EditMenuCart, LoadingButton, DoneLoad, IsMerchantQR, DataOrder })(CartView)","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["243"],"import React from \"react\";\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport LocaIcon from '../../Asset/Icon/location.png'\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, clientId, googleKey } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Geocode from \"react-geocode\"\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport { connect } from 'react-redux'\r\nimport { DoneLoad, IsMerchantQR } from '../../Redux/Actions'\r\nimport TourPage from '../../Component/Tour/TourPage';\r\nimport { firebaseAnalytics } from '../../firebaseConfig'\r\n\r\nclass StoreView extends React.Component {\r\n  state = {\r\n    page: 0,\r\n    size: 6,\r\n    location: \"\",\r\n    data: {\r\n      title: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      data: [\r\n        {\r\n          address: \"\",\r\n          rating: \"\",\r\n          logo: \"\",\r\n          distance: \"\",\r\n          storeId: \"\",\r\n          storeName: \"\",\r\n          storeDesc: \"\",\r\n          storeImage: \"\",\r\n        },\r\n      ],\r\n    },\r\n    idCol: 0,\r\n    totalPage: 0,\r\n    boolpage: false,\r\n    loadView: true,\r\n    allMerchantAPI: [],\r\n    lat: \"\",\r\n    lon: \"\",\r\n    startTour: false,\r\n    steptour: [\r\n      {\r\n        selector: '',\r\n        content: () => (\r\n          <div>\r\n            <h2>Selamat Datang di PikApp!</h2>\r\n            <br />\r\n            <span>Yuk caritau cara memesan dengan PikApp dengan mudah.</span>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        selector: '.merchantList-layout',\r\n        content: () => (\r\n          <div>\r\n            <h4>Ini adalah Daftar Restoran</h4>\r\n            <br />\r\n            <span>Kamu bisa cek restoran apa saja yang ada di dalam foodcourt ini. Anda bisa tap salah satu restoran untuk ke halaman berikutnya.</span>\r\n          </div>\r\n        )\r\n      }\r\n    ]\r\n  };\r\n\r\n  async componentDidMount() {\r\n    firebaseAnalytics.logEvent(\"merchant_list_visited\")\r\n    this.props.DoneLoad()\r\n    this.props.IsMerchantQR(false);\r\n    Cookies.set(\"homePage\", window.location.search)\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n\r\n    if (localStorage.getItem(\"storeTour\") == 1) {\r\n      this.setState({ startTour: true });\r\n    }\r\n\r\n    // else {\r\n    const value = queryString.parse(window.location.search);\r\n    var merchant = \"\";\r\n\r\n    // if (navigator.geolocation) { //SHUTDOWN FOR A WHILE\r\n    //   navigator.geolocation.getCurrentPosition(position => {\r\n    //     let latitude = 0;\r\n    //     let longitude = 0;\r\n\r\n    //     if(position) {\r\n    //       let latitude = position.coords.latitude\r\n    //       let longitude = position.coords.longitude\r\n    //       let longlat = { lat: latitude, lon: longitude }\r\n    //       console.log(latitude, longitude);\r\n    //       this.setState({ lat: latitude, lon: longitude })\r\n    //       localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    //     } else {\r\n    //       let latitude = 1;\r\n    //       let longitude = 1;\r\n    //       let longlat = { lat: latitude, lon: longitude }\r\n    //       console.log(latitude, longitude);\r\n    //       this.setState({ lat: latitude, lon: longitude })\r\n    //       localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    //     }\r\n    //   });\r\n    // }\r\n\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    console.log(latitude, longitude);\r\n    this.setState({ lat: latitude, lon: longitude })\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n\r\n    // Show a map centered at latitude / longitude.\r\n\r\n    if (localStorage.getItem(\"longlat\")) {\r\n      var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n      latitude = getLocation.lat\r\n      longitude = getLocation.lon\r\n    } else {\r\n      // window.location.href = \"/login\"\r\n    }\r\n\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n      // window.location.href = \"/login\"\r\n    }\r\n    else {\r\n      longitude = value.longitude || longitude\r\n      latitude = value.latitude || latitude\r\n      if (window.location.href.includes('?latitude') || window.location.href.includes('store?')) {\r\n\r\n      } else {\r\n        window.location.href = window.location.href + `?latitude=${latitude}&longitude=${longitude}`\r\n      }\r\n    }\r\n    longitude = value.longitude || longitude\r\n    latitude = value.latitude || latitude\r\n    merchant = value.merchant;\r\n\r\n    // GOOGLE GEOCODE\r\n    if (localStorage.getItem(\"address\")) {\r\n      var getAdress = JSON.parse(localStorage.getItem(\"address\"))\r\n      this.setState({ location: getAdress })\r\n    } else {\r\n      Geocode.setApiKey(googleKey)\r\n      Geocode.fromLatLng(latitude, longitude)\r\n        .then((res) => {\r\n          console.log(res.results[0].formatted_address);\r\n          this.setState({ location: res.results[0].formatted_address })\r\n          localStorage.setItem(\"address\", JSON.stringify(res.results[0].formatted_address));\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ location: \"Tidak tersedia\" })\r\n        })\r\n    }\r\n\r\n    //regular route or foodcourt route condition\r\n    if (Cookies.get(\"fcaddress\") !== undefined) {\r\n      let foodcourtadd = Cookies.get(\"fcaddress\")\r\n\r\n      let addressRoute = address + \"/home/v1/fc/mch/\" + foodcourtadd + \"/\";\r\n      var stateDataFC;\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      return await Axios(addressRoute, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"category\": \"1\",\r\n        },\r\n        method: \"GET\",\r\n        params: {\r\n          page: this.state.page,\r\n          size: this.state.size\r\n        }\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.results);\r\n          stateDataFC = { ...this.state.data };\r\n          let responseDatas = res.data;\r\n          stateDataFC.data.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            stateDataFC.data.push({\r\n              address: data.merchant_address,\r\n              rating: data.merchant_rating,\r\n              logo: data.merchant_logo,\r\n              distance: data.merchant_distance,\r\n              storeId: data.mid,\r\n              storeName: data.merchant_name,\r\n              storeDesc: \"\",\r\n              storeImage: data.merchant_pict,\r\n            })\r\n          })\r\n\r\n          this.setState({ data: stateDataFC, loadView: false, totalPage: responseDatas.total_pages, allMerchantAPI: res.data.results });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n          if (res.data.results.length < 6) {\r\n            document.removeEventListener('scroll', this.loadMoreMerchant)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n        });\r\n\r\n    } else {\r\n      let addressRoute;\r\n      if (merchant === undefined) {\r\n        addressRoute =\r\n          address + \"home/v2/merchant/\" + longitude + \"/\" + latitude + \"/ALL/\";\r\n      } else {\r\n        addressRoute =\r\n          address +\r\n          \"home/v1/merchant/\" +\r\n          longitude +\r\n          \"/\" +\r\n          latitude +\r\n          \"/\" +\r\n          merchant\r\n          + \"/\"\r\n      }\r\n      var stateData;\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replace(/-/g, \"\");\r\n      const date = new Date().toISOString();\r\n      return await Axios(addressRoute, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"token\": \"PUBLIC\",\r\n          \"category\": \"1\",\r\n        },\r\n        method: \"GET\",\r\n        params: {\r\n          page: this.state.page,\r\n          size: this.state.size\r\n        }\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.results);\r\n          stateData = { ...this.state.data };\r\n          let responseDatas = res.data;\r\n          stateData.data.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            stateData.data.push({\r\n              address: data.merchant_address,\r\n              rating: data.merchant_rating,\r\n              logo: data.merchant_logo,\r\n              distance: data.merchant_distance,\r\n              storeId: data.mid,\r\n              storeName: data.merchant_name,\r\n              storeDesc: \"\",\r\n              storeImage: data.merchant_pict,\r\n            })\r\n          })\r\n          // if (Cookies.get(\"fcaddress\") !== undefined) {\r\n          //   let foodcourtadd = Cookies.get(\"fcaddress\")\r\n          //   let filterMerchantDetail = stateData.data.filter(fcVal => {\r\n          //     return fcVal.address.toLocaleLowerCase().includes(foodcourtadd.toLocaleLowerCase())\r\n          //   })\r\n          //   stateData.data = filterMerchantDetail\r\n          //   let filterMerchantMain = res.data.results.filter(fcVal => {\r\n          //     return fcVal.merchant_address.toLocaleLowerCase().includes(foodcourtadd.toLocaleLowerCase())\r\n          //   })\r\n          //   this.setState({ data: stateData, loadView: false, totalPage: responseDatas.total_pages, allMerchantAPI: filterMerchantMain });\r\n          // } else {\r\n          //   this.setState({ data: stateData, loadView: false, totalPage: responseDatas.total_pages, allMerchantAPI: res.data.results });\r\n          // }\r\n\r\n          this.setState({ data: stateData, loadView: false, totalPage: responseDatas.total_pages, allMerchantAPI: res.data.results });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n          if (res.data.results.length < 6) {\r\n            document.removeEventListener('scroll', this.loadMoreMerchant)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          throw new Error(err)\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.idCol > 0) {\r\n      if (this.state.boolpage === true) {\r\n\r\n        if (Cookies.get(\"fcaddress\") !== undefined) {\r\n          let foodcourtadd = Cookies.get(\"fcaddress\")\r\n          let addressRoute = address + \"/home/v1/fc/mch/\" + foodcourtadd + \"/\";\r\n          var stateDataFC;\r\n          let uuid = uuidV4();\r\n          uuid = uuid.replace(/-/g, \"\");\r\n          const date = new Date().toISOString();\r\n          Axios(addressRoute, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-request-id\": uuid,\r\n              \"x-request-timestamp\": date,\r\n              \"x-client-id\": clientId,\r\n              \"token\": \"PUBLIC\",\r\n              \"category\": \"1\",\r\n            },\r\n            method: \"GET\",\r\n            params: {\r\n              page: this.state.page,\r\n              size: this.state.size\r\n            }\r\n          })\r\n            .then((res) => {\r\n              stateDataFC = { ...this.state.data };\r\n              let responseDatas = res.data;\r\n              responseDatas.results.forEach((data) => {\r\n                stateDataFC.data.push({\r\n                  address: data.merchant_address,\r\n                  rating: data.merchant_rating,\r\n                  logo: data.merchant_logo,\r\n                  distance: data.merchant_distance,\r\n                  storeId: data.mid,\r\n                  storeName: data.merchant_name,\r\n                  storeDesc: \"\",\r\n                  storeImage: data.merchant_pict,\r\n                })\r\n              })\r\n              let updateMerchant = [...this.state.allMerchantAPI]\r\n              responseDatas.results.forEach((data) => {\r\n                updateMerchant.push(data)\r\n              })\r\n              this.setState({ boolpage: false, allMerchantAPI: updateMerchant })\r\n\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n              if (this.state.page === this.state.totalPage - 1) {\r\n                this.setState({ idCol: this.state.idCol + 1 })\r\n              }\r\n            })\r\n            .catch((err) => {\r\n            });\r\n        } else {\r\n          let addressRoute = address + \"home/v2/merchant/\" + this.state.lon + \"/\" + this.state.lat + \"/ALL/\";\r\n          var stateData;\r\n          let uuid = uuidV4();\r\n          uuid = uuid.replace(/-/g, \"\");\r\n          const date = new Date().toISOString();\r\n          Axios(addressRoute, {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-request-id\": uuid,\r\n              \"x-request-timestamp\": date,\r\n              \"x-client-id\": clientId,\r\n              \"token\": \"PUBLIC\",\r\n              \"category\": \"1\",\r\n            },\r\n            method: \"GET\",\r\n            params: {\r\n              page: this.state.page,\r\n              size: this.state.size\r\n            }\r\n          })\r\n            .then((res) => {\r\n              stateData = { ...this.state.data };\r\n              let responseDatas = res.data;\r\n              // if (Cookies.get(\"fcaddress\") !== undefined) {\r\n              //   let foodcourtadd = Cookies.get(\"fcaddress\")\r\n              //   let filterMerchantMain = res.data.results.filter(fcVal => {\r\n              //     return fcVal.merchant_address.toLocaleLowerCase().includes(foodcourtadd.toLocaleLowerCase())\r\n              //   })\r\n\r\n              //   filterMerchantMain.forEach((data) => {\r\n              //     stateData.data.push({\r\n              //       address: data.merchant_address,\r\n              //       rating: data.merchant_rating,\r\n              //       logo: data.merchant_logo,\r\n              //       distance: data.merchant_distance,\r\n              //       storeId: data.mid,\r\n              //       storeName: data.merchant_name,\r\n              //       storeDesc: \"\",\r\n              //       storeImage: data.merchant_pict,\r\n              //     })\r\n              //   })\r\n\r\n              //   let updateMerchant = [...this.state.allMerchantAPI]\r\n              //   filterMerchantMain.forEach((data) => {\r\n              //     updateMerchant.push(data)\r\n              //   })\r\n              //   this.setState({ boolpage: false, allMerchantAPI: updateMerchant })\r\n              // } else {\r\n              //   responseDatas.results.forEach((data) => {\r\n              //     stateData.data.push({\r\n              //       address: data.merchant_address,\r\n              //       rating: data.merchant_rating,\r\n              //       logo: data.merchant_logo,\r\n              //       distance: data.merchant_distance,\r\n              //       storeId: data.mid,\r\n              //       storeName: data.merchant_name,\r\n              //       storeDesc: \"\",\r\n              //       storeImage: data.merchant_pict,\r\n              //     })\r\n              //   })\r\n              //   let updateMerchant = [...this.state.allMerchantAPI]\r\n              //   responseDatas.results.forEach((data) => {\r\n              //     updateMerchant.push(data)\r\n              //   })\r\n              //   this.setState({ boolpage: false, allMerchantAPI: updateMerchant })\r\n              // }\r\n\r\n              responseDatas.results.forEach((data) => {\r\n                stateData.data.push({\r\n                  address: data.merchant_address,\r\n                  rating: data.merchant_rating,\r\n                  logo: data.merchant_logo,\r\n                  distance: data.merchant_distance,\r\n                  storeId: data.mid,\r\n                  storeName: data.merchant_name,\r\n                  storeDesc: \"\",\r\n                  storeImage: data.merchant_pict,\r\n                })\r\n              })\r\n              let updateMerchant = [...this.state.allMerchantAPI]\r\n              responseDatas.results.forEach((data) => {\r\n                updateMerchant.push(data)\r\n              })\r\n              this.setState({ boolpage: false, allMerchantAPI: updateMerchant })\r\n\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n              if (this.state.page === this.state.totalPage - 1) {\r\n                this.setState({ idCol: this.state.idCol + 1 })\r\n              }\r\n            })\r\n            .catch((err) => {\r\n            });\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  storeClick = (e) => {\r\n    localStorage.setItem('page', JSON.stringify(1))\r\n  }\r\n  handleDetail(data) {\r\n    return <Link to={\"/status\"}></Link>;\r\n  }\r\n\r\n  isBottom = (el) => {\r\n    return (el.getBoundingClientRect().top + 50) <= window.innerHeight\r\n  }\r\n\r\n  loadMoreMerchant = () => {\r\n    const wrappedElement = document.getElementById(\"idCol\")\r\n    if (this.state.idCol <= this.state.page) {\r\n      if (this.isBottom(wrappedElement)) {\r\n        // console.log('testloadmore');\r\n        this.setState({ idCol: this.state.idCol + 1, page: this.state.page + 1, boolpage: true })\r\n        document.removeEventListener('scroll', this.loadMoreMerchant)\r\n      }\r\n    } else {\r\n      document.removeEventListener('scroll', this.loadMoreMerchant)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n  merchantLoading = () => (\r\n    <div className='merchantList-layout' >\r\n      <Skeleton style={{ paddingTop: 100, width: \"100%\", height: \"100%\" }} />\r\n    </div>\r\n  )\r\n\r\n  tourPage = () => {\r\n    if (this.state.startTour === true) {\r\n      return (\r\n        <TourPage\r\n          stepsContent={this.state.steptour}\r\n          isShowTour={this.state.startTour}\r\n          isHideTour={() => this.showTourPage(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  showTourPage = (isShowTour) => {\r\n    this.setState({ startTour: isShowTour });\r\n    document.body.style.overflowY = 'auto';\r\n    localStorage.setItem('storeTour', 0);\r\n  }\r\n\r\n  render() {\r\n    if (localStorage.getItem('page')) {\r\n      let currentPage = JSON.parse(localStorage.getItem('page'))\r\n      if (currentPage === 1) {\r\n        localStorage.setItem('page', JSON.stringify(0))\r\n        window.location.reload()\r\n      }\r\n    }\r\n    // console.log(this.state.data.data);\r\n    const storeDatas = this.state.data.data.map((data) => {\r\n      return data;\r\n    });\r\n    var allCards = storeDatas.map((cardData, indexCard) => {\r\n      return (\r\n        <Link to={\"/store?mid=\" + cardData.storeId} style={{ textDecoration: \"none\" }} onClick={() => this.storeClick(cardData)} >\r\n          <div key={indexCard} className='merchantList-layout' data-testid=\"merchantlist-item\">\r\n            <div className='merchantList-banner'>\r\n              {\r\n                cardData.storeImage ?\r\n                  <img src={cardData.storeImage} className='merchantList-image' alt='' />\r\n                  :\r\n                  <Skeleton style={{ paddingTop: 100, width: \"100%\", height: \"100%\" }} />\r\n              }\r\n            </div>\r\n\r\n            <div className='merchantList-content'>\r\n              <div className='merchantList-contentLocStar'>\r\n                <div className='merchantList-ratingArea'>\r\n                  <img src={StarIcon} className='merchantList-ratingIcon' alt='' />\r\n                  <div className='merchantList-ratingScore'>{cardData.rating ? cardData.rating : \"5.0\"}</div>\r\n                </div>\r\n\r\n                <div className='merchantList-locArea'>\r\n                  <img src={LocaIcon} className='merchantList-locIcon' alt='' />\r\n                  {\r\n                    cardData.distance ?\r\n                      <div className='merchantList-location'>{cardData.distance} <span className='merchantList-distance'>{'(' + Math.round((parseInt(cardData.distance) / 22) * 60) + ' min)'}</span></div>\r\n                      :\r\n                      <Skeleton style={{ paddingTop: 10, width: \"100%\", height: \"100%\" }} />\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              {\r\n                cardData.storeName ?\r\n                  <div className='merchantList-storeName'>{cardData.storeName}</div>\r\n                  :\r\n                  <Skeleton style={{ paddingTop: 10, width: \"100%\", height: \"100%\" }} />\r\n              }\r\n\r\n              {/* <div className='merchantList-storeCategory'>Merchant Categories</div> */}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className='merchantList-background'>\r\n        {/* <div className=\"storeColumn\">\r\n          <h6 className=\"\" style={{ textAlign: \"left\" }}>\r\n            Lokasi:\r\n            </h6>\r\n          <p className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n            {this.state.location || <Skeleton height={20} />}\r\n          </p>\r\n        </div> */}\r\n        <div>\r\n          <div className='merchantList-grid'>\r\n            {allCards}\r\n          </div>\r\n          {\r\n            !this.state.loadView ?\r\n              this.state.idCol <= this.state.page ?\r\n                this.state.totalPage - 1 === this.state.page ?\r\n                  null\r\n                  :\r\n                  <div id={\"idCol\"}>\r\n                    {this.merchantLoading()}\r\n                  </div>\r\n                :\r\n                null\r\n              :\r\n              null\r\n          }\r\n          {this.tourPage()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { DoneLoad, IsMerchantQR })(StoreView)\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js",["244","245","246","247","248","249","250","251","252","253","254"],"import React from \"react\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from 'react-loader-spinner'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LoadingButton, DoneLoad } from '../../Redux/Actions'\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from \"react-router-dom\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport NotifIcon from '../../Asset/Icon/bell.png';\r\nimport ProfileIcon from '../../Asset/Icon/avatar.png';\r\nimport CashierPayment from \"../../Asset/Icon/CashierPayment.png\";\r\nimport OvoPayment from \"../../Asset/Icon/ovo_icon.png\";\r\nimport PaymentModal from '../../Component/Modal/PaymentModal'\r\n\r\nclass OrderConfirmationView extends React.Component {\r\n    state = {\r\n        isMobile : false,\r\n        dataOrder : {\r\n            transactionId : \"\",\r\n            totalPayment : \"\",\r\n            paymentType : \"\",\r\n        },\r\n        paymentOption: \"Pembayaran Di Kasir\",\r\n        paymentType: \"PAY_BY_CASHIER\",\r\n        paymentImage: \"\",\r\n        counterTime: 59,\r\n        showPayment : false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(window.innerWidth < 700) {\r\n            this.setState({ isMobile : true });\r\n        } else {\r\n            this.setState({ isMobile : false });\r\n        }\r\n\r\n        let counter = localStorage.getItem(\"counterPayment\");\r\n\r\n        if(localStorage.getItem(\"counterPayment\")){\r\n            if(counter != 0) {\r\n                this.setState({ counterTime : counter});\r\n                this.countDownTime();\r\n            } else {\r\n                this.setState({ counterTime : counter});\r\n            }\r\n        } else {\r\n            this.countDownTime()\r\n        }\r\n\r\n        if(Object.keys(this.props.AllRedu.dataOrder).length !== 0) {\r\n            if (this.props.AllRedu.dataOrder.paymentType === \"PAY_BY_CASHIER\") {\r\n                this.setState({ paymentType : \"PAY_BY_CASHIER\" });\r\n                this.setState({ paymentOption : \"Pembayaran Di Kasir\" });\r\n                this.setState({ paymentImage : CashierPayment });\r\n            } else if (this.props.AllRedu.dataOrder.paymentType === \"WALLET_OVO\") {\r\n                this.setState({ paymentType : \"WALLET_OVO\" });\r\n                this.setState({ paymentOption : \"Pembayaran Ovo\" });\r\n                this.setState({ paymentImage : OvoPayment });\r\n            }\r\n            this.setState({ dataOrder : this.props.AllRedu.dataOrder});\r\n        } else if(localStorage.getItem(\"payment\")){\r\n            var dataPayment = JSON.parse(localStorage.getItem(\"payment\"));\r\n\r\n            if (dataPayment.paymentType === \"PAY_BY_CASHIER\") {\r\n                this.setState({ paymentType : \"PAY_BY_CASHIER\" });\r\n                this.setState({ paymentOption : \"Pembayaran Di Kasir\" });\r\n                this.setState({ paymentImage : CashierPayment });\r\n            } else if (dataPayment.paymentType === \"WALLET_OVO\") {\r\n                this.setState({ paymentType : \"WALLET_OVO\" });\r\n                this.setState({ paymentOption : \"Pembayaran Ovo\" });\r\n                this.setState({ paymentImage : OvoPayment });\r\n            }\r\n\r\n            this.setState({ dataOrder : dataPayment});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.state.counterTime === 0) {\r\n            clearInterval(this.interval);\r\n            console.log(\"clear\");\r\n            localStorage.setItem(\"counterPayment\", this.state.counterTime);\r\n        } else {\r\n            localStorage.setItem(\"counterPayment\", this.state.counterTime);\r\n        }\r\n    }\r\n\r\n    backToHome = () => {\r\n        let selectedMerchant = JSON.parse(localStorage.getItem(\"selectedMerchant\"));\r\n        window.location.href = '/store?mid=' + selectedMerchant[0].mid;\r\n    }\r\n\r\n    goToStatus = () => {\r\n        // localStorage.setItem(\"counterPayment\", this.state.counterTime);\r\n        window.location.href = '/status';\r\n    }\r\n\r\n\r\n    countDownTime = () => {\r\n        this.interval = setInterval(\r\n          () => this.setState((state)=> ({ counterTime: this.state.counterTime - 1 })),\r\n          1000\r\n        );\r\n    }\r\n\r\n    setPaymentModal(isShow) {\r\n        this.setState({ showPayment: isShow })\r\n        document.body.style.overflowY = ''\r\n    }\r\n\r\n    showDialogPayment = () => {\r\n        if(this.state.showPayment === true) {\r\n            return (\r\n                <PaymentModal\r\n                  isShowPaymentModal={this.state.showPayment}\r\n                  onHidePaymentModal={() => this.setPaymentModal(false)}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='orderLayout'>\r\n                <div className='orderTitle'>\r\n                    <span className='logoCenter'>\r\n                    <img className='LogoPikappOrder' src={pikappLogo} alt='' />\r\n                    </span>\r\n\r\n                    <div className='iconOrder'>\r\n                        <Link to={\"/profile\"}>\r\n                        <div className='profileOrder-sec'>\r\n                            <div className='profileOrder'>\r\n                            <span className='reactProfOrder'>\r\n                                <img className='profileOrder-img' src={ProfileIcon} alt='' />\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n\r\n                        <Link to={\"/status\"}>\r\n                        <div className='notifOrder-sec'>\r\n                            <div className='notifOrder'>\r\n                            <span className='reactNotifOrder'>\r\n                                <img className='notifOrder-img' src={NotifIcon} alt='' />\r\n                            </span>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='modalOrder'>\r\n                    {\r\n                        !this.state.isMobile ?\r\n                        <div className='modal-content-order'>\r\n                            <div className='modal-header-order'>\r\n                                <div className='menu-name-order'>\r\n                                    Menunggu Pembayaran \r\n                                </div>\r\n                                <div className='menu-counter-order'>\r\n                                { this.state.paymentType === \"WALLET_OVO\" ?\r\n                                    this.state.counterTime < 10 ? \r\n                                        <span className=\"txtIndent\"> 00 : 0{this.state.counterTime} </span>\r\n                                        :\r\n                                        <span className=\"txtIndent\"> 00 : {this.state.counterTime} </span>\r\n                                    :\r\n                                    <div></div>\r\n                                }\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='order-transaction'>\r\n                                    <div className='order-transaction-header'>\r\n                                        <div className='order-transaction-title'>\r\n                                            ID Transaksi\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='order-transaction-content'>\r\n                                        <div className='order-transaction-descArea'>\r\n                                            <h3 className='order-transaction-words'>\r\n                                                {this.state.dataOrder.transactionId}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='order-payment'>\r\n                                    <div className='order-transaction-header'>\r\n                                        <div className='order-transaction-title'>\r\n                                            Total Pembayaran\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='order-transaction-content'>\r\n                                        <div className='order-transaction-descArea'>\r\n                                            <h3 className='order-transaction-words'>\r\n                                                Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.dataOrder.totalPayment)}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='order-payment'>\r\n                                    <div className='order-transaction-header'>\r\n                                        <div className='order-transaction-title'>\r\n                                            Metode Pembayaran\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='order-transaction-content'>\r\n                                        <div className='order-transaction-descArea'>\r\n                                            <span>\r\n                                                <img className='order-transaction-logo' src={this.state.paymentImage} alt='' />\r\n                                            </span>\r\n\r\n                                            <h3 className='order-transaction-words'>\r\n                                                {this.state.paymentOption}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='buttonPayment-order'>\r\n                                    <div className=\"submitPayment-order\" onClick={() => this.setPaymentModal(true)}>\r\n                                        <div className=\"wordsButton-order\">\r\n                                            CARA PEMBAYARAN\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='buttonSide-order'>\r\n                                    <p className=\"linkWords-order\" onClick={() => this.backToHome()}>KEMBALI KE HOME</p>\r\n                                    <div className=\"submitButton-order\" onClick={() => this.goToStatus()}>\r\n                                        <div className=\"wordsButton-order\">\r\n                                            LIHAT PESANAN\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className='modal-content-order-mob'>\r\n                            <div className='modal-header-order'>\r\n                                <div className='menu-name-order'>\r\n                                    Menunggu Pembayaran \r\n                                </div>\r\n                                <div className='menu-counter-order'>\r\n                                    { this.state.paymentType === \"WALLET_OVO\" ?\r\n                                        this.state.counterTime < 10 ? \r\n                                            <span className=\"txtIndent\"> 00 : 0{this.state.counterTime} </span>\r\n                                            :\r\n                                            <span className=\"txtIndent\"> 00 : {this.state.counterTime} </span>\r\n                                        :\r\n                                        <div></div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='order-transaction'>\r\n                                    <div className='order-transaction-header'>\r\n                                        <div className='order-transaction-title'>\r\n                                            ID Transaksi\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='order-transaction-content'>\r\n                                        <div className='order-transaction-descArea'>\r\n                                            <h3 className='order-transaction-words'>\r\n                                                {this.state.dataOrder.transactionId}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='order-payment'>\r\n                                    <div className='order-transaction-header'>\r\n                                        <div className='order-transaction-title'>\r\n                                            Total Pembayaran\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='order-transaction-content'>\r\n                                        <div className='order-transaction-descArea'>\r\n                                            <h3 className='order-transaction-words'>\r\n                                                Rp. {Intl.NumberFormat(\"id-ID\").format(this.state.dataOrder.totalPayment)}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='order-payment'>\r\n                                    <div className='order-transaction-header'>\r\n                                        <div className='order-transaction-title'>\r\n                                            Metode Pembayaran\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='order-transaction-content'>\r\n                                        <div className='order-transaction-descArea'>\r\n                                            <span>\r\n                                                <img className='order-transaction-logo' src={this.state.paymentImage} alt='' />\r\n                                            </span>\r\n\r\n                                            <h3 className='order-transaction-words'>\r\n                                                {this.state.paymentOption}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='buttonPayment-order'>\r\n                                    <div className=\"submitPayment-order\" onClick={() => this.setPaymentModal(true)}>\r\n                                        <div className=\"wordsButton-order\">\r\n                                            CARA PEMBAYARAN\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='orderContent'>\r\n                                <div className='buttonSide-order'>\r\n                                    <p className=\"linkWords-order\" onClick={() => this.backToHome()}>KEMBALI KE HOME</p>\r\n                                    <div className=\"submitButton-order\" onClick={() => this.goToStatus()}>\r\n                                        <div className=\"wordsButton-order\">\r\n                                            LIHAT PESANAN\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {this.showDialogPayment()}\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Mapstatetoprops = (state) => {\r\n    return {\r\n      AllRedu: state.AllRedu,\r\n      AuthRedu: state.AuthRedu\r\n    }\r\n  }\r\n  \r\n  export default connect(Mapstatetoprops, { LoadingButton, DoneLoad })(OrderConfirmationView)","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js",["255","256","257","258","259"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Button/PikaButton\";\r\nimport ConfirmResetPinDialog from \"../ResetPin/ConfirmResetPinDialog\";\r\n\r\nconst ResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPinDialog, setConfirmResetPin] = useState(false);\r\n    const [resetPin, setResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleResetPin = (e) => {\r\n        setResetPin(e);\r\n    }\r\n\r\n    const checkResetPin = () => {\r\n        if (resetPin.length < 6) {\r\n          setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n    };\r\n\r\n    const openConfirmPinDialog = (e) => {\r\n        if (checkResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            currentPin : resetPin\r\n        };\r\n\r\n        dispatch({ type: 'RESETPIN', payload: data });\r\n\r\n        setConfirmResetPin(true);\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if(confirmResetPinDialog) {\r\n            return (\r\n                <ConfirmResetPinDialog \r\n                    isShowConfirmResetPin={confirmResetPinDialog}\r\n                    onHideConfirmResetPin={() =>setConfirmResetPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {showConfirmPinDialog()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js",["260"],"const INITIAL_STATE = {\r\n    dataRegister : {},\r\n    dataLogin : {},\r\n    isLoginStep : false,\r\n    dataResetPin : {},\r\n    dataPin : '',\r\n    dataPinToken: '',\r\n    isMerchantQR: false,\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"REGISTER\" :\r\n            return {...state, dataRegister: action.payload}\r\n        case \"LOGIN\" :\r\n            return {...state, dataLogin: action.payload}\r\n        case \"LOGINSTEP\" :\r\n            return {...state, isLoginStep: action.payload}\r\n        case \"RESETPIN\" :\r\n            return {...state, dataResetPin: action.payload}\r\n        case \"PIN\" :\r\n            return {...state, dataPin: action.payload}\r\n        case \"PINTOKEN\" :\r\n            return {...state, dataPinToken: action.payload}\r\n        case \"ISMERCHANTQR\":\r\n            return { ...state, isMerchantQR: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["261"],"const INITIAL_STATE = {\r\n    buttonLoad: true,\r\n    validQTY: 0,\r\n    openSelect: false,\r\n    foodCateg: '',\r\n    checkboxes: [],\r\n    checkboxesTotal: [],\r\n    mandatCheckCond: false,\r\n    mandatCheck: false,\r\n    radiobutton: [],\r\n    mandatRadioCond: false,\r\n    mandatRadio: false,\r\n    totalAmountProd: 0,\r\n    openMenuCart: false,\r\n    dataOrder : {},\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return { ...state, buttonLoad: false }\r\n        case \"DONELOAD\":\r\n            return { ...state, buttonLoad: true }\r\n        case \"VALIDATIONQTY\":\r\n            return { ...state, validQTY: action.payload }\r\n        case \"OPENSELECT\":\r\n            return { ...state, openSelect: action.payload }\r\n        case \"FOODCATEG\":\r\n            return { ...state, foodCateg: action.payload }\r\n        case \"CHECKBOXES\":\r\n            return { ...state, checkboxes: action.payload }\r\n        case \"MANDATCHECKCOND\":\r\n            return { ...state, mandatCheckCond: action.payload }\r\n        case \"MANDATCHECK\":\r\n            return { ...state, mandatCheck: action.payload }\r\n        case \"COUNTCHECKBOX\":\r\n            return { ...state, checkboxesTotal: action.payload }\r\n        case \"RADIOBUTTON\":\r\n            return { ...state, radiobutton: action.payload }\r\n        case \"MANDATRADIOCOND\":\r\n            return { ...state, mandatRadioCond: action.payload }\r\n        case \"MANDATRADIO\":\r\n            return { ...state, mandatRadio: action.payload }\r\n        case \"COUNTTOTAL\":\r\n            return { ...state, totalAmountProd: action.payload }\r\n        case \"EDITCART\":\r\n            return { ...state, openMenuCart: action.payload }\r\n        case \"DATAORDER\":\r\n            return { ...state, dataOrder: action.payload }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["262","263","264"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js",["265","266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport PinDialog from \"./PinDialog\";\r\nimport ConfirmPinDialog from \"./ConfirmPinDialog\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\n\r\nconst RegisterDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false);\r\n    const [pinDialog, setPin] = useState(false);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [lat, setLat] = useState('');\r\n    const [lon, setLon] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    // if(AuthRedu.dataRegister) {\r\n    //     setName(AuthRedu.dataRegister.full_name);\r\n    //     setEmail(AuthRedu.dataRegister.email);\r\n    //     setPhone(AuthRedu.dataRegister.phone_number);\r\n    // }\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideRegister()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideRegister()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openLoginDialog = () => {\r\n        setLogin(true);\r\n    }\r\n\r\n    const showLoginDialog = () => {\r\n        if (loginDialog) {\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = (e) => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkName() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkPhone() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        // this.props.LoadingButton()\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: name,\r\n            phone_number: phone,\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: false });\r\n\r\n        setPin(true);\r\n        // setConfirmPin(true);\r\n        // setForgotPin(true);\r\n        // props.onHideRegister();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const checkName = () => {\r\n        if (name.length > 0) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Name cannot be empty.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const checkPhone = () => {\r\n        if (phone.startsWith(\"08\")) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Phone not valid.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onChange = (value) => {\r\n        console.log(value);\r\n    }\r\n\r\n    const closeRegisterFlowDialog = () => {\r\n        setConfirmPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeLoginFlowDialog = () => {\r\n        setPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeForgotFlowDialog = () => {\r\n        setForgotPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const showDialog = (value) => {\r\n        if(pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                    onShowConfirm={() => setConfirmPin(true)}\r\n                    onShowForgotPin={() => setForgotPin(true)}\r\n                    onHideLoginFlow={closeLoginFlowDialog}\r\n                />\r\n            )\r\n        } else if(loginDialog){\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                    onShowPin={() => setPin(true)}\r\n                />\r\n            )\r\n        } \r\n        else if(confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                    onHideRegisterFlow={closeRegisterFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                    onHideForgotFlow={closeForgotFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='text' className='textfieldinput-auth' placeholder=\"Nama Lengkap\" onChange={handleName} />\r\n                        <input type='tel' className='textfieldinput-auth' placeholder=\"Nomor Handphone (Whatsapp)\" onChange={handlePhone} />\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {!isCaptcha || (\r\n                                        <ReCAPTCHA sitekey=\"asd\" onChange={onChange} />\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={6}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                        \r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={openLoginDialog}>LOGIN SAJA</p>\r\n                                <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                    <div className=\"wordsButton-auth\">\r\n                                        NEXT\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js",["278","279"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/MenuDetail.scss'\r\n// import prodPhoto from '../../Asset/Illustration/samplefood.jpg'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport backLogo from '../../Asset/Icon/arrow-left.png'\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport MenuSelection from './MenuSelection'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport RegisterDialog from '../Authentication/RegisterDialog';\r\nimport Cookies from \"js-cookie\"\r\nimport PinDialog from \"../Authentication/PinDialog\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MenuDetail = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const menuCateg = props.handleCateg\r\n    const [menuSelect, setmenuSelect] = useState(false)\r\n    const [menuCondition, setmenuCondition] = useState(false)\r\n    const [registerDialog, setRegister] = useState(false)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [loadingButton, setloadingButton] = useState(true)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHide()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHide()\r\n        } else {\r\n            setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const addtoCart = () => {\r\n        if (!loadingButton) {\r\n            console.log('waitbro');\r\n        } else {\r\n            if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'error',\r\n                    text: 'Pilih terlebih dahulu pilihan yang wajib',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"Close\",\r\n                    closeOnConfirm: false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const countTotalPrice = () => {\r\n        let totalCheckPrice = 0\r\n        let totalRadioPrice = 0\r\n        let totalPrice = 0\r\n        let sumCheckPrice = AllRedu.checkboxes\r\n        sumCheckPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalCheckPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        let sumRadioPrice = AllRedu.radiobutton\r\n        sumRadioPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalRadioPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n        totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n        totalPrice += totalCheckPrice + totalRadioPrice\r\n        totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n        return totalPrice\r\n    }\r\n\r\n    let auth;\r\n\r\n    const openMenuSelect = () => {\r\n\r\n        if (Cookies.get(\"auth\") === undefined) {\r\n            // props.onHide();\r\n            setRegister(true);\r\n            // showRegisterDialog();\r\n        } else {\r\n            auth = JSON.parse(Cookies.get(\"auth\"));\r\n            if (auth.isLogged === false) {\r\n                openPinDialog();\r\n            } else {\r\n                setloadingButton(false)\r\n                dispatch({ type: 'LOADING' })\r\n                setmenuSelect(true)\r\n                dispatch({ type: 'FOODCATEG', payload: findCateg })\r\n            }\r\n            // openPinDialog();\r\n\r\n        }\r\n    }\r\n\r\n    let findCateg\r\n    if (AllRedu.openMenuCart) {\r\n        findCateg = props.datas.foodCategory\r\n        if (!menuCondition) {\r\n            setmenuSelect(true)\r\n            setmenuCondition(true)\r\n        }\r\n    } else {\r\n        findCateg = menuCateg.filter((val) => {\r\n            return props.datas.category === parseInt(val.category_id)\r\n        })\r\n        findCateg = findCateg[0].category_name.toLowerCase()\r\n    }\r\n\r\n    let totalCheckPrice = 0\r\n    let totalRadioPrice = 0\r\n    let totalPrice = 0\r\n    let sumCheckPrice = AllRedu.checkboxes\r\n    sumCheckPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalCheckPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    let sumRadioPrice = AllRedu.radiobutton\r\n    sumRadioPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalRadioPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n    totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n    totalPrice += totalCheckPrice + totalRadioPrice\r\n    totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n    props.handleAmount(totalPrice)\r\n\r\n    const showRegisterDialog = () => {\r\n        if (registerDialog) {\r\n            return (\r\n                <RegisterDialog\r\n                    isShowRegister={registerDialog}\r\n                    onHideRegister={() => setRegister(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        setEmail(auth.email);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        setPin(true);\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    // onHidePin={closeAuthDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const closeAuthDialog = () => {\r\n        setPin(false);\r\n        setRegister(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                    <div className='modalMenuDetail' style={{\r\n                        display: props.isShow ? 'block' : 'none'\r\n                    }} onClick={closeModal}\r\n                    >\r\n                        <div className='modal-content-menudetail' onClick={e => e.stopPropagation()}>\r\n                            {\r\n                                menuSelect ?\r\n                                    <span className='iconBack' onClick={backModal}>\r\n                                        <img src={backLogo} className='backLogo' alt='' />\r\n                                    </span>\r\n                                    :\r\n                                    <span className='iconClose' onClick={closeModal}>\r\n                                        <img src={closeLogo} className='closeLogo' alt='' />\r\n                                    </span>\r\n                            }\r\n\r\n                            <div className='menuDetail-layout'>\r\n                                <div className='menuContain-left'>\r\n                                    <div className='menuBanner'>\r\n                                        <img className='menuimg' src={props.datas.foodImage} alt='' />\r\n                                    </div>\r\n\r\n                                    <div className='menu-detail'>\r\n                                        {/* <div className='menu-star'>\r\n                                            <img className='menu-star-img' src={StarIcon} alt='' />\r\n                                            <h6 className='menu-star-rating'>5.0</h6>\r\n                                        </div> */}\r\n\r\n                                        <div className='menu-name'>\r\n                                            {props.datas.foodName}\r\n                                        </div>\r\n\r\n                                        <div className='menu-category'>\r\n                                            {findCateg}\r\n                                        </div>\r\n\r\n                                        <div className='menu-price'>\r\n                                            {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='menuContain-right'>\r\n                                    {\r\n                                        menuSelect ?\r\n                                            <Scrollbars style={{ height: \"calc(100% - 133px)\" }}>\r\n                                                <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                                            </Scrollbars>\r\n                                            :\r\n                                            <div className='menuDesc'>\r\n                                                <div className='menuDesc-title'>\r\n                                                    Description\r\n                                                </div>\r\n                                                <div className='menuDesc-content'>\r\n                                                    {props.datas.foodDesc}\r\n                                                </div>\r\n                                            </div>\r\n                                    }\r\n\r\n                                    <div className='menuButton'>\r\n                                        {\r\n                                            menuSelect ?\r\n                                                <div className='openMenuSelection' style={{\r\n                                                    backgroundColor:\r\n                                                        AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                            '#4bb7ac'\r\n                                                            :\r\n                                                            !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                '#4bb7ac'\r\n                                                                :\r\n                                                                AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                    '#4bb7ac'\r\n                                                                    :\r\n                                                                    !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                                        '#4bb7ac'\r\n                                                                        :\r\n                                                                        '#aaaaaa'\r\n                                                }} onClick={addtoCart}>\r\n                                                    {\r\n                                                        !loadingButton ?\r\n                                                            <Loader\r\n                                                                type=\"ThreeDots\"\r\n                                                                color=\"#ffffff\"\r\n                                                                height={70}\r\n                                                                width={70}\r\n                                                            />\r\n                                                            :\r\n                                                            <h2 className='add-words'>\r\n                                                                {\r\n                                                                    AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                                                                        `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                                                                        :\r\n                                                                        `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                                                                }\r\n                                                            </h2>\r\n                                                    }\r\n                                                </div>\r\n                                                :\r\n                                                <div onClick={openMenuSelect} className='openMenuSelection'>\r\n                                                    <h2 className='add-words'>\r\n                                                        PESAN\r\n                                                    </h2>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className='mob-modalMenuDetail' style={{\r\n                        display: props.isShow ? 'block' : 'none'\r\n                    }} onClick={closeModal}\r\n                    >\r\n                        <div className='mob-modal-content-menudetail' onClick={e => e.stopPropagation()} style={{ height: menuSelect ? '88vh' : 'auto' }}>\r\n                            <div className='mob-menuBanner'>\r\n                                <img className='mob-menuimg' src={props.datas.foodImage} alt='' />\r\n                                {\r\n                                    menuSelect ?\r\n                                        <span className='mob-iconClose' onClick={backModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                        :\r\n                                        <span className='mob-iconClose' onClick={closeModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='mob-menuContain'>\r\n                                <div className='mob-inside-menuContain' style={{ boxShadow: menuSelect ? \"0px 5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n                                    <div className='mob-menu-detail'>\r\n                                        {/* <div className='mob-menu-star'>\r\n                                            <img className='mob-menu-star-img' src={StarIcon} alt='' />\r\n                                            <h6 className='mob-menu-star-rating'>{props.datas.foodRating}</h6>\r\n                                        </div> */}\r\n\r\n                                        <div className='mob-menu-name'>\r\n                                            {props.datas.foodName}\r\n                                        </div>\r\n\r\n                                        <div className='mob-menu-category'>\r\n                                            {findCateg}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-price'>\r\n                                        {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    menuSelect ?\r\n                                        <Scrollbars style={{ height: \"calc(88vh - 375px)\" }}>\r\n                                            <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                                        </Scrollbars>\r\n                                        :\r\n                                        <div className='mob-menuDesc'>\r\n                                            <div className='mob-menu-desc'>\r\n                                                {props.datas.foodDesc}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                <div className='mob-menuButton' style={{ boxShadow: menuSelect ? \"0px -5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n\r\n                                    {\r\n                                        menuSelect ?\r\n                                            <div className='mob-openMenuSelection' style={{\r\n                                                backgroundColor:\r\n                                                    AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                        '#4bb7ac'\r\n                                                        :\r\n                                                        !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                            '#4bb7ac'\r\n                                                            :\r\n                                                            AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                '#4bb7ac'\r\n                                                                :\r\n                                                                !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                                    '#4bb7ac'\r\n                                                                    :\r\n                                                                    '#aaaaaa'\r\n                                            }} onClick={addtoCart}>\r\n                                                {\r\n                                                    !loadingButton ?\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            color=\"#ffffff\"\r\n                                                            height={70}\r\n                                                            width={70}\r\n                                                        />\r\n                                                        :\r\n                                                        <h2 className='mob-add-words'>\r\n                                                            {\r\n                                                                AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                                                                    :\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                                                            }\r\n                                                        </h2>\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            <div onClick={openMenuSelect} className='mob-openMenuSelection' style={{ backgroundColor: '#4bb7ac' }}>\r\n                                                <h2 className='mob-add-words'>\r\n                                                    PESAN\r\n                                                </h2>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n            {showRegisterDialog()}\r\n            {showPinDialog()}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MenuDetail","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js",["280"],"import React, {useState} from \"react\";\r\nimport Tour from 'reactour';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../../Asset/scss/TourPage.scss';\r\n\r\n// const tour_steps = [\r\n//     {\r\n//         selector: '.merchantList-layout',\r\n//         content: 'This is my first Step'\r\n//     }\r\n// ];\r\n\r\nconst TourPage = (props) => {\r\n    // const [isTourOpen, setIsTourOpen] = useState(false);\r\n    const tour_steps = props.stepsContent;\r\n    const isTourOpen = props.isShowTour;\r\n    const isTourClose = props.isHideTour;\r\n\r\n    return (\r\n        <>\r\n            <Tour\r\n                steps={tour_steps}\r\n                isOpen={isTourOpen}\r\n                onRequestClose={isTourClose}\r\n                showNumber={false}\r\n                rounded={10}\r\n                nextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selanjutnya</Button>}\r\n                prevButton={<Button style={{ backgroundColor: \"#4056C6\" }} onClick={isTourClose}>Lewati</Button>}\r\n                lastStepNextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selesai</Button>}\r\n                onAfterOpen={target => (document.body.style.overflowY = 'hidden')}\r\n                onBeforeClose={target => (document.body.style.overflowY = 'auto')}\r\n                className={\"tourpage\"}\r\n            />\r\n        </>\r\n      );\r\n    };\r\n    \r\nexport default TourPage;\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\firebaseConfig.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js",["281","282","283","284"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport Cookies from \"js-cookie\";\r\nimport PikaButton from \"../../../Component/Button/PikaButton\";\r\n\r\nconst ConfirmResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPin, setConfirmResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [successStatus, setSuccessStatus] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const backToHome = (e) => {\r\n        window.location.href = '/'\r\n    }\r\n\r\n    const handleConfirmResetPin = (e) => {\r\n        setConfirmResetPin(e);\r\n    }\r\n\r\n    const checkConfirmResetPin = () => {\r\n        if (AuthRedu.dataResetPin.currentPin === confirmResetPin) {\r\n            return true;\r\n          } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n          }\r\n    };\r\n\r\n    const handleResetPin = (e) => {\r\n        if (checkConfirmResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            // email: email\r\n            pin : confirmResetPin\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/reset-pin/\" + AuthRedu.dataPinToken + \"/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                setSuccessStatus(true);\r\n                var lastLink = { value: window.location.origin}\r\n                Cookies.set(\"lastLink\", lastLink,{ expires: 1});\r\n                localStorage.clear();\r\n                Cookies.remove(\"auth\");\r\n                dispatch({ type: 'DONELOAD' });\r\n                // props.DoneLoad();\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message);\r\n                    // setSuccessStatus(true);\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className=\"blankSpace\">\r\n\r\n                                            </div>\r\n\r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className='buttonSide-auth top270'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmResetPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",["285"],"import React, { useState } from 'react'\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png'\r\nimport diningTableColor from '../../Asset/Icon/diningTableColor.png'\r\nimport takeawayColor from '../../Asset/Icon/takeawayColor.png'\r\nimport CashierPayment from '../../Asset/Icon/CashierPayment.png'\r\nimport OvoPayment from '../../Asset/Icon/ovo_icon.png'\r\nimport '../../Asset/scss/CartModal.scss'\r\n\r\nconst CartModal = (props) => {\r\n    const [radioNumEat, setradioNumEat] = useState(props.indexOptionEat)\r\n    const [radioNumPay, setradioNumPay] = useState(props.indexOptionPay)\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHide()\r\n    }\r\n\r\n    const onChangeRadio = (num, title) => {\r\n        if (title === 'Pilih Cara Makan Anda') {\r\n            setradioNumEat(num)\r\n            props.handleData(num)\r\n            props.onHide()\r\n        } else if(title === 'Bayar Pakai Apa') {\r\n            setradioNumPay(num)\r\n            props.handleData(num)\r\n            props.onHide()\r\n        }\r\n    }\r\n\r\n    const choicesCartModal = () => {\r\n        let optionList = props.detailOptions\r\n        let choicesModal = optionList.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"dineIn\") {\r\n                imageOption = diningTableColor;\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                imageOption = takeawayColor;\r\n            } else if (optionVal.image === \"cashier\") {\r\n                imageOption = CashierPayment;\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            }\r\n\r\n            if (props.title === 'Pilih Cara Makan Anda') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'EATMETHOD'} defaultChecked={radioNumEat === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Bayar Pakai Apa') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'PAYMETHOD'} defaultChecked={radioNumPay === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Rincian Pembayaran') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailTotalPrice'>\r\n                        <div className='modalCart-totalPrice'>\r\n                            <h2 className='modalCart-totalPrice-left'>Total Harga Barang</h2>\r\n                            <h2 className='modalCart-totalPrice-right'>{Intl.NumberFormat(\"id-ID\").format(optionVal.totalPrice)}</h2>\r\n                        </div>\r\n\r\n                        <div className='modalCart-discount'>\r\n                            <h2 className='modalCart-discount-left'>Diskon</h2>\r\n                            <h2 className='modalCart-discount-right'>{optionVal.discountPrice}</h2>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return choicesModal\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modalCartPage' style={{\r\n                display: props.isShow ? 'block' : 'none'\r\n            }} onClick={closeModal}>\r\n                <div className='modalCartContent' onClick={e => e.stopPropagation()}>\r\n                    <span className='iconCloseNarrow' onClick={closeModal}>\r\n                        <img src={closeNarrow} className='closeLogoNarrow' alt='' />\r\n                    </span>\r\n\r\n                    <div className='modalCart-detail'>\r\n                        <h1 className='modalCart-title'>{props.title}</h1>\r\n\r\n                        {choicesCartModal()}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartModal","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js",["286","287","288","289","290"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\n\r\nconst ForgotPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideForgotPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideForgotPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/forget-pin\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    text: 'Link verifikasi telah dikirim ke alamat email Anda. Segera lakukan reset PIN untuk melanjutkan proses ini.',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    closeOnConfirm: false,\r\n                    // timer: 3000\r\n                }).then(() => {\r\n                    props.onHideForgotFlow();\r\n                    dispatch({ type: 'DONELOAD' });\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                            \r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ForgotPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js",["291","292","293","294","295","296","297","298","299","300"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst ConfirmPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false)\r\n    const [confirmPin, setConfirmPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleConfirmPin = (e) => {\r\n        setConfirmPin(e);\r\n    }\r\n\r\n    const checkConfirmPin = () => {\r\n        if (AuthRedu.dataRegister.pin === confirmPin) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        if (checkConfirmPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            password: confirmPin,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            gender: \"MALE\",\r\n            birth_day: \"01011970\",\r\n            token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/register\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Register Berhasil.',\r\n                    // showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    // closeOnConfirm: false,\r\n                    timer: 3000\r\n                }).then(() => {\r\n                    handleLogin();\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n                setCaptchaCounter(captchaCounter + 1);\r\n            });\r\n\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        const data = {\r\n            username: AuthRedu.dataRegister.email,\r\n            pin: confirmPin,\r\n            fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            auth.isLogged = true;\r\n            auth.token = res.data.token;\r\n            auth.new_event = res.data.new_event;\r\n            auth.recommendation_status = res.data.recommendation_status;\r\n            auth.is_email_verified = res.data.is_email_verified;\r\n            auth.email = AuthRedu.dataRegister.email;\r\n            Cookies.set(\"auth\", auth, { expires: 1 });\r\n            var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n            var latitude = getLocation.lat\r\n            var longitude = getLocation.lon\r\n            // props.onHideConfirmPin()\r\n            props.onHideRegisterFlow();\r\n            dispatch({ type: 'DONELOAD' });\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value;\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            //     window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        }) \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js",["301","302","303","304","305","306","307","308","309","310","311"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport ConfirmPinDialog from './ConfirmPinDialog';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NotifModal from '../Modal/NotifModal';\r\n\r\nconst PinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [pin, setPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isLoginStep, setIsLoginStep] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHidePin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHidePin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openConfirmPinDialog = () => {\r\n\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            pin: pin\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        setIsLoginStep(false);\r\n        // setConfirmPin(true);\r\n        props.onHidePin();\r\n        props.onShowConfirm();\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            username: AuthRedu.dataLogin.email,\r\n            pin: pin,\r\n            fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            setSuccessMessage(\"Login Berhasil.\");\r\n            setTimeout(() => {\r\n                auth.isLogged = true;\r\n                auth.token = res.data.token;\r\n                auth.new_event = res.data.new_event;\r\n                auth.recommendation_status = res.data.recommendation_status;\r\n                auth.is_email_verified = res.data.is_email_verified;\r\n                auth.email = AuthRedu.dataLogin.email;\r\n                Cookies.set(\"auth\", auth, { expires: 1 });\r\n                var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n                var latitude = getLocation.lat\r\n                var longitude = getLocation.lon\r\n                // props.onHidePin()\r\n                props.onHideLoginFlow()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }, 1000);\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            // window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        })  \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if (confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openForgotPinDialog = () => {\r\n        props.onHidePin();\r\n        props.onShowForgotPin();\r\n        // setForgotPin(true);\r\n    }\r\n\r\n    const showForgotPinDialog = () => {\r\n        if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handlePin = (e) => {\r\n        setPin(e);\r\n    }\r\n\r\n    const checkPin = () => {\r\n        if (pin.length < 6) {\r\n            setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const showNotifModal = () => {\r\n        if (AllRedu.buttonLoad === false) {\r\n            return <NotifModal isShowNotif={AllRedu.buttonLoad} responseMessage={successMessage} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n            }\r\n            {showNotifModal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js",["312","313","314","315","316","317","318","319"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport PinDialog from \"./PinDialog\";\r\n\r\nconst LoginDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideLogin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideLogin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        // setPin(true);\r\n        props.onHideLogin();\r\n        props.onShowPin();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js",["320","321","322"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../Asset/scss/MenuSelection.scss'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Autosize from 'autosize'\r\nimport { ValidQty } from '../../Redux/Actions'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\n// const checkboxDummyData = [\r\n//     { additionname: 'topping', maxchoice: 3, isMandat: true, listaddition: [{ name: 'coklat', price: 5000, isChecked: false }, { name: 'keju', price: 6000, isChecked: false }, { name: 'pisang', price: 7000, isChecked: false }, { name: 'wijen', price: 8000, isChecked: false }] },\r\n//     { additionname: 'boba', maxchoice: 2, isMandat: false, listaddition: [{ name: 'rainbow', price: 1000, isChecked: false }, { name: 'jelly', price: 2000, isChecked: false }, { name: 'pudding', price: 3000, isChecked: false }, { name: 'pearl', price: 4000, isChecked: false }] },\r\n// ]\r\n\r\n// const radioDummyData = [\r\n//     { additionname: 'level pedas', isMandat: true, listaddition: [{ name: 'tidak pedas', isChecked: false }, { name: 'pedas', isChecked: false }, { name: 'pedas mampus', isChecked: false }] },\r\n//     { additionname: 'level dingin', isMandat: false, listaddition: [{ name: 'tidak dingin', isChecked: false }, { name: 'dingin', isChecked: false }, { name: 'dingin mampus', isChecked: false }] },\r\n// ]\r\n\r\nconst MenuSelection = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [detailCategory, setdetailCategory] = useState([\r\n        {\r\n            name: \"\",\r\n            amount: 1,\r\n        },\r\n    ])\r\n    const [note, setnote] = useState('')\r\n    const [checkboxVal, setcheckboxVal] = useState([])\r\n    const [checkboxData, setcheckboxData] = useState([])\r\n    const [checkboxMatch, setcheckboxMatch] = useState([])\r\n    const [totalCheckMandat, settotalCheckMandat] = useState(0)\r\n    const [indexCheckMandat, setindexCheckMandat] = useState(null)\r\n\r\n    const [radioVal, setradioVal] = useState([])\r\n    const [radioData, setradioData] = useState([])\r\n    const [radioMatch, setradioMatch] = useState([])\r\n    const [totalRadioMandat, settotalRadioMandat] = useState(0)\r\n    // const [indexGroupRadioMandat, setindexGroupRadioMandat] = useState(null)\r\n    // const [indexEachRadioMandat, setindexEachRadioMandat] = useState(null)\r\n\r\n    const [updateDataEdit, setupdateDataEdit] = useState(false)\r\n    const [updateEditChoice, setupdateEditChoice] = useState(false)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    useEffect(() => {\r\n        Autosize(document.getElementById('note'))\r\n\r\n        //hit API in order to get response of product detail v2\r\n        let uuid = uuidV4()\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(`${address}/home/v2/detail/product/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\": \"PUBLIC\",\r\n                \"pid\": props.datas.productId,\r\n            },\r\n            method: 'GET'\r\n        }).then(productRes => {\r\n            let productDet = productRes.data.results.extra_menus.extra_menu\r\n            let radioResponse = []\r\n            let checkboxResponse = []\r\n            productDet.forEach(valProduct => {\r\n                if (valProduct.menu_type === 'RADIO') {\r\n                    radioResponse.push(valProduct)\r\n                } else {\r\n                    checkboxResponse.push(valProduct)\r\n                }\r\n            })\r\n\r\n            let radioData = []\r\n            let radioValData = []\r\n            radioResponse.forEach(valRadRes => {\r\n                let listadditionradio = []\r\n                valRadRes.menu_extra_item.forEach(valList => {\r\n                    listadditionradio.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                radioData.push({\r\n                    additionname: valRadRes.menu_name,\r\n                    isMandat: valRadRes.is_mandatory,\r\n                    listaddition: listadditionradio\r\n                })\r\n                radioValData.push([])\r\n            })\r\n\r\n            let checkboxData = []\r\n            let checkValData = []\r\n            checkboxResponse.forEach(valCheckRes => {\r\n                let listadditioncheckbox = []\r\n                valCheckRes.menu_extra_item.forEach(valList => {\r\n                    listadditioncheckbox.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                checkboxData.push({\r\n                    additionname: valCheckRes.menu_name,\r\n                    maxchoice: valCheckRes.max_choice,\r\n                    isMandat: valCheckRes.is_mandatory,\r\n                    listaddition: listadditioncheckbox\r\n                })\r\n                checkValData.push([])\r\n            })\r\n\r\n            //set mandatory for checkboxes\r\n            let mandatCheckAvailability = checkboxData.length\r\n            let mandatCheckLength = checkboxData.length\r\n            let checkboxMandat = []\r\n            let totalMandatforCheck = 0\r\n            checkboxData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    checkboxMandat.push(false)\r\n                    totalMandatforCheck++\r\n                    mandatCheckAvailability = mandatCheckAvailability - 1\r\n                } else {\r\n                    checkboxMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatCheckLength === mandatCheckAvailability) {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: true })\r\n            }\r\n            setcheckboxMatch(checkboxMandat)\r\n            settotalCheckMandat(totalMandatforCheck)\r\n\r\n            //set mandatory for radio\r\n            let mandatRadioAvailability = radioData.length\r\n            let mandatRadioLength = radioData.length\r\n            let radioMandat = []\r\n            let totalMandatforRadio = 0\r\n            radioData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    radioMandat.push(false)\r\n                    totalMandatforRadio++\r\n                    mandatRadioAvailability = mandatRadioAvailability - 1\r\n                } else {\r\n                    radioMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatRadioLength === mandatRadioAvailability) {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: true })\r\n            }\r\n            setradioMatch(radioMandat)\r\n            settotalRadioMandat(totalMandatforRadio)\r\n\r\n            if (!AllRedu.openMenuCart) {\r\n                var datas = props.datas\r\n                var list = []\r\n                if (datas.foodExt !== undefined) {\r\n                    datas.foodExt.map((data) => {\r\n                        return list.push({\r\n                            name: data.name,\r\n                            amount: data.amount + 1,\r\n                        });\r\n                    });\r\n                    props.ValidQty(1)\r\n                    setdetailCategory(list);\r\n                    setradioData(radioData)\r\n                    setcheckboxData(checkboxData)\r\n                    setradioVal(radioValData)\r\n                    setcheckboxVal(checkValData)\r\n                }\r\n            } else {\r\n                let amountofProd = props.datas.foodExt\r\n                amountofProd.forEach((val) => {\r\n                    props.ValidQty(val.amount)\r\n                })\r\n                setdetailCategory(props.datas.foodExt)\r\n                setnote(props.datas.foodNote)\r\n                setradioData(radioData)\r\n                setcheckboxData(checkboxData)\r\n                dispatch({ type: 'CHECKBOXES', payload: props.datas.foodListCheckbox })\r\n                dispatch({ type: 'RADIOBUTTON', payload: props.datas.foodListRadio })\r\n                setupdateDataEdit(true)\r\n                setradioVal(props.datas.foodListRadio)\r\n                setcheckboxVal(props.datas.foodListCheckbox)\r\n            }\r\n            dispatch({ type: 'DONELOAD' })\r\n            props.loadingButton()\r\n        }).catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (AllRedu.openMenuCart && updateDataEdit) {\r\n            //this function is used for replace api data with edit data (CHECKBOX)\r\n            let editCheckbox = []\r\n            let newlistcheckboxAddition = []\r\n            let foodListCheckbox = props.datas.foodListCheckbox\r\n\r\n            checkboxData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListCheckbox.forEach((foodfirstVal, indfoodFirst) => {\r\n                        let countNoMatch = 1\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistcheckboxAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    if (countNoMatch === foodfirstVal.length) {\r\n                                        newlistcheckboxAddition.push({\r\n                                            name: secondVal.name,\r\n                                            price: secondVal.price,\r\n                                            isChecked: false\r\n                                        })\r\n                                        countNoMatch = 1\r\n                                    } else {\r\n                                        countNoMatch++\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListCheckbox[indfirstVal].length === 0) {\r\n                        newlistcheckboxAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editCheckbox.push({\r\n                    additionname: firstVal.additionname,\r\n                    maxchoice: firstVal.maxchoice,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistcheckboxAddition\r\n                })\r\n                newlistcheckboxAddition = []\r\n            })\r\n            let editTotalcheckMandat = 0\r\n            let editArraycheckMandat = []\r\n            editCheckbox.forEach(valEdit => {\r\n                editArraycheckMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalcheckMandat++\r\n                }\r\n            })\r\n            if (editTotalcheckMandat === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(editArraycheckMandat)\r\n\r\n            //this function is used for replace api data with edit data (RADIO)\r\n            let editRadio = []\r\n            let newlistradioAddition = []\r\n            let foodListRadio = props.datas.foodListRadio\r\n\r\n            radioData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListRadio.forEach((foodfirstVal, indfoodFirst) => {\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: false\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListRadio[indfirstVal].length === 0) {\r\n                        newlistradioAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editRadio.push({\r\n                    additionname: firstVal.additionname,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistradioAddition\r\n                })\r\n                newlistradioAddition = []\r\n            })\r\n            let editTotalradioMandat = 0\r\n            let editArrayradioMandat = []\r\n            editRadio.forEach(valEdit => {\r\n                editArrayradioMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalradioMandat++\r\n                }\r\n            })\r\n            if (editTotalradioMandat === totalRadioMandat) {\r\n                if (totalRadioMandat === 0) {\r\n                    dispatch({ type: 'MANDATRADIO', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATRADIO', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            }\r\n            setradioMatch(editArrayradioMandat)\r\n\r\n            setcheckboxData(editCheckbox)\r\n            setradioData(editRadio)\r\n            setupdateDataEdit(false)\r\n            setupdateEditChoice(true)\r\n        }\r\n    }, [radioVal, checkboxVal])\r\n\r\n    const checkboxArrData = () => {\r\n        return checkboxData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='checkbox-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname.toUpperCase().toLowerCase()}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Max {listname.maxchoice} items</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='box-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='checkBox-side'>\r\n                                                        <div className='check-box' />\r\n                                                        <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='box-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='checkBox-side'>\r\n                                                    <div className='check-box' />\r\n                                                    <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const radioArrData = () => {\r\n        return radioData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='radio-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Pilih Salah Satu</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='radiobox-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='radio-side'>\r\n                                                        <div className='radio-circle' />\r\n                                                        <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='radiobox-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='radio-side'>\r\n                                                    <div className='radio-circle' />\r\n                                                    <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const onCheckboxChange = (e, indexlistname, listprice, name, max, mandat) => {\r\n        var checkedChecks = document.querySelectorAll(`.${name}:checked`)\r\n        if (checkedChecks.length > max) {\r\n            e.target.checked = false\r\n        } else {\r\n            let checkMandat = [...checkboxMatch]\r\n            if (mandat) {\r\n                checkMandat[indexlistname] = mandat\r\n                setindexCheckMandat(indexlistname)\r\n            }\r\n\r\n            let checkboxArr = [...checkboxVal]\r\n            if (e.target.checked) {\r\n                checkboxArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n                setcheckboxVal(checkboxArr)\r\n                dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n            } else {\r\n                checkboxArr[indexlistname] = checkboxArr[indexlistname].filter(val => val.name !== e.target.value)\r\n                setcheckboxVal(checkboxArr)\r\n                let sizeArr = 0\r\n                checkboxArr.forEach((firstVal) => {\r\n                    firstVal.forEach((nestedVal) => {\r\n                        if (nestedVal.name) {\r\n                            sizeArr += 1\r\n                        }\r\n                    })\r\n                })\r\n                if (sizeArr > 0) {\r\n                    dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n                    if (checkboxArr[indexlistname].length === 0) {\r\n                        checkMandat[indexlistname] = false\r\n                        // dispatch({ type: 'MANDATCHECK', payload: false })\r\n\r\n                    }\r\n                } else {\r\n                    checkMandat[indexlistname] = false\r\n                    dispatch({ type: 'CHECKBOXES', payload: [] })\r\n                    // dispatch({ type: 'MANDATCHECK', payload: false })\r\n                }\r\n            }\r\n\r\n            // console.log(checkMandat);\r\n            let totalMandatCheck = 0\r\n            checkMandat.forEach(valMandat => {\r\n                if (valMandat) {\r\n                    totalMandatCheck++\r\n                }\r\n            })\r\n            if (totalMandatCheck === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(checkMandat)\r\n        }\r\n    }\r\n\r\n    const onRadioChange = (e, indexlistname, mandat, listprice, indexlistadd) => {\r\n        let radioMandat = [...radioMatch]\r\n        if (mandat) {\r\n            radioMandat[indexlistname] = mandat\r\n        }\r\n        // console.log(indexlistname, indexGroupRadioMandat, 'selectGroupRadio');\r\n        // console.log(indexlistadd, indexEachRadioMandat, 'selectEachRadio');\r\n        // if (indexlistname === indexGroupRadioMandat) {\r\n        //     if (indexlistadd === indexEachRadioMandat) {\r\n        //         console.log('yoo');\r\n        //         if (e.target.checked) {\r\n        //             e.target.checked = false\r\n        //         }\r\n        //     }\r\n        // }\r\n        let radiobuttonArr = [...radioVal]\r\n        radiobuttonArr[indexlistname].pop()\r\n        radiobuttonArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n        setradioVal(radiobuttonArr)\r\n        dispatch({ type: 'RADIOBUTTON', payload: radiobuttonArr })\r\n\r\n        // console.log(radioMandat);\r\n        let totalMandatRadio = 0\r\n        radioMandat.forEach(valMandat => {\r\n            if (valMandat) {\r\n                totalMandatRadio++\r\n            }\r\n        })\r\n        if (totalMandatRadio === totalRadioMandat) {\r\n            if (totalRadioMandat === 0) {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: true })\r\n            }\r\n        } else {\r\n            dispatch({ type: 'MANDATRADIO', payload: false })\r\n        }\r\n        setradioMatch(radioMandat)\r\n        // setindexGroupRadioMandat(indexlistname)\r\n        // setindexEachRadioMandat(indexlistadd)\r\n    }\r\n\r\n    const handleDecrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e && food.amount > 1) {\r\n                food.amount = food.amount - 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleIncrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e) {\r\n                food.amount = food.amount + 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        return detailCategory.map((food, ind) => {\r\n            return (\r\n                <div key={ind} className='amount-box-inside'>\r\n                    <div className='minus-box' style={{ backgroundColor: AllRedu.validQTY > 1 ? '#4bb7ac' : '#767676' }} onClick={() => handleDecrease(food)}>\r\n                        <div className='minus-sym'>\r\n                            -\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='number-area'>\r\n                        {food.amount}\r\n                    </div>\r\n\r\n                    <div className='plus-box' onClick={() => handleIncrease(food)}>\r\n                        <div className='plus-sym'>\r\n                            +\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        setnote(e.target.value)\r\n    }\r\n\r\n    var thedata = {\r\n        detailCategory: detailCategory,\r\n        note: note ? note : '',\r\n        foodCategory: AllRedu.openMenuCart ? props.datas.foodCategory : AllRedu.foodCateg,\r\n        listcheckbox: checkboxVal,\r\n        listradio: radioVal\r\n    }\r\n    props.handleData(thedata)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isMobile ?\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { ValidQty })(MenuSelection)","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":26},{"ruleId":"327","severity":1,"message":"331","line":1,"column":28,"nodeType":"329","messageId":"330","endLine":1,"endColumn":36},{"ruleId":"327","severity":1,"message":"332","line":1,"column":28,"nodeType":"329","messageId":"330","endLine":1,"endColumn":34},{"ruleId":"333","severity":1,"message":"334","line":31,"column":6,"nodeType":"335","endLine":31,"endColumn":8,"suggestions":"336"},{"ruleId":"333","severity":1,"message":"337","line":17,"column":8,"nodeType":"335","endLine":17,"endColumn":10,"suggestions":"338"},{"ruleId":"327","severity":1,"message":"328","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":26},{"ruleId":"327","severity":1,"message":"332","line":1,"column":28,"nodeType":"329","messageId":"330","endLine":1,"endColumn":34},{"ruleId":"327","severity":1,"message":"339","line":5,"column":10,"nodeType":"329","messageId":"330","endLine":5,"endColumn":19},{"ruleId":"340","severity":1,"message":"341","line":406,"column":49,"nodeType":"342","messageId":"343","endLine":406,"endColumn":51},{"ruleId":"340","severity":1,"message":"341","line":484,"column":38,"nodeType":"342","messageId":"343","endLine":484,"endColumn":40},{"ruleId":"340","severity":1,"message":"341","line":569,"column":38,"nodeType":"342","messageId":"343","endLine":569,"endColumn":40},{"ruleId":"340","severity":1,"message":"341","line":654,"column":38,"nodeType":"342","messageId":"343","endLine":654,"endColumn":40},{"ruleId":"327","severity":1,"message":"344","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":16},{"ruleId":"327","severity":1,"message":"345","line":14,"column":8,"nodeType":"329","messageId":"330","endLine":14,"endColumn":20},{"ruleId":"327","severity":1,"message":"346","line":18,"column":8,"nodeType":"329","messageId":"330","endLine":18,"endColumn":20},{"ruleId":"327","severity":1,"message":"347","line":19,"column":8,"nodeType":"329","messageId":"330","endLine":19,"endColumn":16},{"ruleId":"327","severity":1,"message":"348","line":22,"column":8,"nodeType":"329","messageId":"330","endLine":22,"endColumn":16},{"ruleId":"349","severity":1,"message":"350","line":232,"column":39,"nodeType":"351","messageId":"352","endLine":232,"endColumn":41},{"ruleId":"349","severity":1,"message":"350","line":262,"column":39,"nodeType":"351","messageId":"352","endLine":262,"endColumn":41},{"ruleId":"349","severity":1,"message":"350","line":308,"column":53,"nodeType":"351","messageId":"352","endLine":308,"endColumn":55},{"ruleId":"349","severity":1,"message":"350","line":314,"column":60,"nodeType":"351","messageId":"352","endLine":314,"endColumn":62},{"ruleId":"349","severity":1,"message":"350","line":329,"column":53,"nodeType":"351","messageId":"352","endLine":329,"endColumn":55},{"ruleId":"349","severity":1,"message":"350","line":335,"column":60,"nodeType":"351","messageId":"352","endLine":335,"endColumn":62},{"ruleId":"349","severity":1,"message":"350","line":369,"column":20,"nodeType":"351","messageId":"352","endLine":369,"endColumn":22},{"ruleId":"349","severity":1,"message":"350","line":383,"column":21,"nodeType":"351","messageId":"352","endLine":383,"endColumn":23},{"ruleId":"349","severity":1,"message":"350","line":806,"column":31,"nodeType":"351","messageId":"352","endLine":806,"endColumn":33},{"ruleId":"349","severity":1,"message":"350","line":145,"column":42,"nodeType":"351","messageId":"352","endLine":145,"endColumn":44},{"ruleId":"349","severity":1,"message":"350","line":147,"column":54,"nodeType":"351","messageId":"352","endLine":147,"endColumn":56},{"ruleId":"349","severity":1,"message":"350","line":310,"column":18,"nodeType":"351","messageId":"352","endLine":310,"endColumn":20},{"ruleId":"349","severity":1,"message":"350","line":322,"column":16,"nodeType":"351","messageId":"352","endLine":322,"endColumn":18},{"ruleId":"340","severity":1,"message":"353","line":818,"column":41,"nodeType":"342","messageId":"343","endLine":818,"endColumn":43},{"ruleId":"340","severity":1,"message":"341","line":875,"column":51,"nodeType":"342","messageId":"343","endLine":875,"endColumn":53},{"ruleId":"349","severity":1,"message":"350","line":87,"column":43,"nodeType":"351","messageId":"352","endLine":87,"endColumn":45},{"ruleId":"327","severity":1,"message":"354","line":2,"column":10,"nodeType":"329","messageId":"330","endLine":2,"endColumn":17},{"ruleId":"327","severity":1,"message":"355","line":2,"column":19,"nodeType":"329","messageId":"330","endLine":2,"endColumn":25},{"ruleId":"327","severity":1,"message":"356","line":2,"column":27,"nodeType":"329","messageId":"330","endLine":2,"endColumn":35},{"ruleId":"327","severity":1,"message":"357","line":3,"column":16,"nodeType":"329","messageId":"330","endLine":3,"endColumn":22},{"ruleId":"327","severity":1,"message":"358","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":14},{"ruleId":"327","severity":1,"message":"359","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":13},{"ruleId":"327","severity":1,"message":"360","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":15},{"ruleId":"327","severity":1,"message":"361","line":8,"column":8,"nodeType":"329","messageId":"330","endLine":8,"endColumn":14},{"ruleId":"327","severity":1,"message":"362","line":9,"column":10,"nodeType":"329","messageId":"330","endLine":9,"endColumn":18},{"ruleId":"327","severity":1,"message":"363","line":11,"column":8,"nodeType":"329","messageId":"330","endLine":11,"endColumn":12},{"ruleId":"349","severity":1,"message":"364","line":45,"column":24,"nodeType":"351","messageId":"352","endLine":45,"endColumn":26},{"ruleId":"327","severity":1,"message":"365","line":9,"column":8,"nodeType":"329","messageId":"330","endLine":9,"endColumn":18},{"ruleId":"327","severity":1,"message":"366","line":15,"column":11,"nodeType":"329","messageId":"330","endLine":15,"endColumn":19},{"ruleId":"327","severity":1,"message":"367","line":19,"column":12,"nodeType":"329","messageId":"330","endLine":19,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":19,"column":23,"nodeType":"329","messageId":"330","endLine":19,"endColumn":35},{"ruleId":"327","severity":1,"message":"369","line":30,"column":11,"nodeType":"329","messageId":"330","endLine":30,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":11,"column":1,"nodeType":"372","endLine":30,"endColumn":2},{"ruleId":"370","severity":1,"message":"371","line":18,"column":1,"nodeType":"372","endLine":55,"endColumn":2},{"ruleId":"327","severity":1,"message":"373","line":5,"column":5,"nodeType":"329","messageId":"330","endLine":5,"endColumn":15},{"ruleId":"327","severity":1,"message":"374","line":9,"column":5,"nodeType":"329","messageId":"330","endLine":9,"endColumn":17},{"ruleId":"327","severity":1,"message":"375","line":12,"column":5,"nodeType":"329","messageId":"330","endLine":12,"endColumn":18},{"ruleId":"327","severity":1,"message":"365","line":8,"column":8,"nodeType":"329","messageId":"330","endLine":8,"endColumn":18},{"ruleId":"327","severity":1,"message":"376","line":9,"column":8,"nodeType":"329","messageId":"330","endLine":9,"endColumn":21},{"ruleId":"327","severity":1,"message":"366","line":19,"column":11,"nodeType":"329","messageId":"330","endLine":19,"endColumn":19},{"ruleId":"327","severity":1,"message":"368","line":28,"column":23,"nodeType":"329","messageId":"330","endLine":28,"endColumn":35},{"ruleId":"327","severity":1,"message":"377","line":29,"column":12,"nodeType":"329","messageId":"330","endLine":29,"endColumn":26},{"ruleId":"327","severity":1,"message":"378","line":29,"column":28,"nodeType":"329","messageId":"330","endLine":29,"endColumn":45},{"ruleId":"327","severity":1,"message":"379","line":31,"column":12,"nodeType":"329","messageId":"330","endLine":31,"endColumn":15},{"ruleId":"327","severity":1,"message":"380","line":31,"column":17,"nodeType":"329","messageId":"330","endLine":31,"endColumn":23},{"ruleId":"327","severity":1,"message":"381","line":32,"column":12,"nodeType":"329","messageId":"330","endLine":32,"endColumn":15},{"ruleId":"327","severity":1,"message":"382","line":32,"column":17,"nodeType":"329","messageId":"330","endLine":32,"endColumn":23},{"ruleId":"327","severity":1,"message":"369","line":48,"column":11,"nodeType":"329","messageId":"330","endLine":48,"endColumn":20},{"ruleId":"327","severity":1,"message":"383","line":64,"column":11,"nodeType":"329","messageId":"330","endLine":64,"endColumn":26},{"ruleId":"327","severity":1,"message":"384","line":107,"column":11,"nodeType":"329","messageId":"330","endLine":107,"endColumn":24},{"ruleId":"327","severity":1,"message":"348","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":16},{"ruleId":"327","severity":1,"message":"385","line":203,"column":11,"nodeType":"329","messageId":"330","endLine":203,"endColumn":26},{"ruleId":"327","severity":1,"message":"331","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":24},{"ruleId":"327","severity":1,"message":"363","line":12,"column":8,"nodeType":"329","messageId":"330","endLine":12,"endColumn":12},{"ruleId":"327","severity":1,"message":"367","line":22,"column":12,"nodeType":"329","messageId":"330","endLine":22,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":22,"column":23,"nodeType":"329","messageId":"330","endLine":22,"endColumn":35},{"ruleId":"327","severity":1,"message":"369","line":34,"column":11,"nodeType":"329","messageId":"330","endLine":34,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":32,"column":66,"nodeType":"342","messageId":"343","endLine":32,"endColumn":68},{"ruleId":"327","severity":1,"message":"386","line":3,"column":8,"nodeType":"329","messageId":"330","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"387","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":18},{"ruleId":"327","severity":1,"message":"367","line":20,"column":12,"nodeType":"329","messageId":"330","endLine":20,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":20,"column":23,"nodeType":"329","messageId":"330","endLine":20,"endColumn":35},{"ruleId":"327","severity":1,"message":"369","line":30,"column":11,"nodeType":"329","messageId":"330","endLine":30,"endColumn":20},{"ruleId":"327","severity":1,"message":"386","line":3,"column":8,"nodeType":"329","messageId":"330","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"387","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":18},{"ruleId":"327","severity":1,"message":"388","line":11,"column":8,"nodeType":"329","messageId":"330","endLine":11,"endColumn":19},{"ruleId":"327","severity":1,"message":"389","line":21,"column":12,"nodeType":"329","messageId":"330","endLine":21,"endColumn":23},{"ruleId":"327","severity":1,"message":"390","line":21,"column":25,"nodeType":"329","messageId":"330","endLine":21,"endColumn":33},{"ruleId":"327","severity":1,"message":"367","line":24,"column":12,"nodeType":"329","messageId":"330","endLine":24,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":24,"column":23,"nodeType":"329","messageId":"330","endLine":24,"endColumn":35},{"ruleId":"327","severity":1,"message":"369","line":36,"column":11,"nodeType":"329","messageId":"330","endLine":36,"endColumn":20},{"ruleId":"327","severity":1,"message":"391","line":157,"column":17,"nodeType":"329","messageId":"330","endLine":157,"endColumn":25},{"ruleId":"327","severity":1,"message":"392","line":158,"column":17,"nodeType":"329","messageId":"330","endLine":158,"endColumn":26},{"ruleId":"327","severity":1,"message":"386","line":3,"column":8,"nodeType":"329","messageId":"330","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"387","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":18},{"ruleId":"327","severity":1,"message":"393","line":16,"column":8,"nodeType":"329","messageId":"330","endLine":16,"endColumn":14},{"ruleId":"327","severity":1,"message":"367","line":27,"column":12,"nodeType":"329","messageId":"330","endLine":27,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":27,"column":23,"nodeType":"329","messageId":"330","endLine":27,"endColumn":35},{"ruleId":"327","severity":1,"message":"394","line":29,"column":12,"nodeType":"329","messageId":"330","endLine":29,"endColumn":23},{"ruleId":"327","severity":1,"message":"369","line":41,"column":11,"nodeType":"329","messageId":"330","endLine":41,"endColumn":20},{"ruleId":"327","severity":1,"message":"391","line":124,"column":21,"nodeType":"329","messageId":"330","endLine":124,"endColumn":29},{"ruleId":"327","severity":1,"message":"392","line":125,"column":21,"nodeType":"329","messageId":"330","endLine":125,"endColumn":30},{"ruleId":"327","severity":1,"message":"395","line":153,"column":11,"nodeType":"329","messageId":"330","endLine":153,"endColumn":31},{"ruleId":"327","severity":1,"message":"396","line":170,"column":11,"nodeType":"329","messageId":"330","endLine":170,"endColumn":30},{"ruleId":"327","severity":1,"message":"386","line":3,"column":8,"nodeType":"329","messageId":"330","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"387","line":6,"column":8,"nodeType":"329","messageId":"330","endLine":6,"endColumn":18},{"ruleId":"327","severity":1,"message":"365","line":8,"column":8,"nodeType":"329","messageId":"330","endLine":8,"endColumn":18},{"ruleId":"327","severity":1,"message":"376","line":9,"column":8,"nodeType":"329","messageId":"330","endLine":9,"endColumn":21},{"ruleId":"327","severity":1,"message":"367","line":19,"column":12,"nodeType":"329","messageId":"330","endLine":19,"endColumn":21},{"ruleId":"327","severity":1,"message":"368","line":19,"column":23,"nodeType":"329","messageId":"330","endLine":19,"endColumn":35},{"ruleId":"327","severity":1,"message":"369","line":29,"column":11,"nodeType":"329","messageId":"330","endLine":29,"endColumn":20},{"ruleId":"327","severity":1,"message":"384","line":61,"column":11,"nodeType":"329","messageId":"330","endLine":61,"endColumn":24},{"ruleId":"327","severity":1,"message":"397","line":37,"column":12,"nodeType":"329","messageId":"330","endLine":37,"endColumn":28},{"ruleId":"333","severity":1,"message":"398","line":199,"column":8,"nodeType":"335","endLine":199,"endColumn":10,"suggestions":"399"},{"ruleId":"333","severity":1,"message":"400","line":339,"column":8,"nodeType":"335","endLine":339,"endColumn":31,"suggestions":"401"},"no-native-reassign",["402"],"no-negated-in-lhs",["403"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.address'. Either include them or remove the dependency array.","ArrayExpression",["404"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'props.match.params.address', and 'props.match.params.notab'. Either include them or remove the dependency array.",["405"],"'useParams' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'cartIcon' is defined but never used.","'Productimage' is defined but never used.","'OpenHourIcon' is defined but never used.","'CoinIcon' is defined but never used.","'StarIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'address' is defined but never used.","'secret' is defined but never used.","'clientId' is defined but never used.","'uuidV4' is defined but never used.","'sha256' is defined but never used.","'Axios' is defined but never used.","'Cookies' is defined but never used.","'Loader' is defined but never used.","'Redirect' is defined but never used.","'Swal' is defined but never used.","Expected '!==' and instead saw '!='.","'PikaButton' is defined but never used.","'AuthRedu' is assigned a value but never used.","'isCaptcha' is assigned a value but never used.","'setIsCaptcha' is assigned a value but never used.","'backModal' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'PikaTextField' is defined but never used.","'captchaCounter' is assigned a value but never used.","'setCaptchaCounter' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lon' is assigned a value but never used.","'setLon' is assigned a value but never used.","'showLoginDialog' is assigned a value but never used.","'showPinDialog' is assigned a value but never used.","'closeAuthDialog' is assigned a value but never used.","'closeLogo' is defined but never used.","'pikappLogo' is defined but never used.","'LoginDialog' is defined but never used.","'loginDialog' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'Button' is defined but never used.","'isLoginStep' is assigned a value but never used.","'showConfirmPinDialog' is assigned a value but never used.","'showForgotPinDialog' is assigned a value but never used.","'indexCheckMandat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["406"],"React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'checkboxData', 'dispatch', 'props.datas.foodListCheckbox', 'props.datas.foodListRadio', 'radioData', 'totalCheckMandat', 'totalRadioMandat', and 'updateDataEdit'. Either include them or remove the dependency array.",["407"],"no-global-assign","no-unsafe-negation",{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},"Update the dependencies array to be: [dispatch, props.match.params.address]",{"range":"416","text":"417"},"Update the dependencies array to be: [dispatch, history, props.match.params.address, props.match.params.notab]",{"range":"418","text":"419"},"Update the dependencies array to be: [AllRedu.openMenuCart, dispatch, props]",{"range":"420","text":"421"},"Update the dependencies array to be: [radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]",{"range":"422","text":"423"},[1074,1076],"[dispatch, props.match.params.address]",[610,612],"[dispatch, history, props.match.params.address, props.match.params.notab]",[8852,8854],"[AllRedu.openMenuCart, dispatch, props]",[15058,15081],"[radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]"]