[{"D:\\PIKAPP\\pikapp-web\\src\\index.js":"1","D:\\PIKAPP\\pikapp-web\\src\\Master\\StoreLayout.js":"2","D:\\PIKAPP\\pikapp-web\\src\\Master\\StatusLayout.js":"3","D:\\PIKAPP\\pikapp-web\\src\\Master\\AuthLayout.js":"4","D:\\PIKAPP\\pikapp-web\\src\\Master\\CartLayout.js":"5","D:\\PIKAPP\\pikapp-web\\src\\Master\\ProductLayout.js":"6","D:\\PIKAPP\\pikapp-web\\src\\Master\\ProfileLayout.js":"7","D:\\PIKAPP\\pikapp-web\\src\\Master\\MainNavigation.js":"8","D:\\PIKAPP\\pikapp-web\\src\\Master\\DetailNavigation.js":"9","D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js":"10","D:\\PIKAPP\\pikapp-web\\src\\View\\Status\\StatusView.js":"11","D:\\PIKAPP\\pikapp-web\\src\\View\\Cart\\CartView.js":"12","D:\\PIKAPP\\pikapp-web\\src\\View\\Store\\StoreView.js":"13","D:\\PIKAPP\\pikapp-web\\src\\View\\Auth\\FormView.js":"14","D:\\PIKAPP\\pikapp-web\\src\\View\\Main\\JumbotronView.js":"15","D:\\PIKAPP\\pikapp-web\\src\\View\\Product\\ProductView.js":"16","D:\\PIKAPP\\pikapp-web\\src\\View\\Profile\\ProfileView.js":"17","D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js":"18","D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\PikaModal.js":"19","D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\CartModal.js":"20","D:\\PIKAPP\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js":"21","D:\\PIKAPP\\pikapp-web\\src\\Component\\Button\\PikaButton.js":"22","D:\\PIKAPP\\pikapp-web\\src\\Master\\MerchantQR.js":"23"},{"size":1773,"mtime":1613191313322,"results":"24","hashOfConfig":"25"},{"size":650,"mtime":1612948278707,"results":"26","hashOfConfig":"25"},{"size":865,"mtime":1612764764407,"results":"27","hashOfConfig":"25"},{"size":1283,"mtime":1613110403125,"results":"28","hashOfConfig":"25"},{"size":1002,"mtime":1613016028722,"results":"29","hashOfConfig":"25"},{"size":657,"mtime":1612974647029,"results":"30","hashOfConfig":"25"},{"size":660,"mtime":1612764764406,"results":"31","hashOfConfig":"25"},{"size":1089,"mtime":1612764764403,"results":"32","hashOfConfig":"25"},{"size":803,"mtime":1612764764402,"results":"33","hashOfConfig":"25"},{"size":80,"mtime":1612764764298,"results":"34","hashOfConfig":"25"},{"size":25071,"mtime":1612764764423,"results":"35","hashOfConfig":"25"},{"size":16857,"mtime":1613470887643,"results":"36","hashOfConfig":"25"},{"size":7174,"mtime":1613470459727,"results":"37","hashOfConfig":"25"},{"size":13978,"mtime":1613459079309,"results":"38","hashOfConfig":"25"},{"size":831,"mtime":1612767468534,"results":"39","hashOfConfig":"25"},{"size":15313,"mtime":1613017864447,"results":"40","hashOfConfig":"25"},{"size":5909,"mtime":1613471866221,"results":"41","hashOfConfig":"25"},{"size":785,"mtime":1612932988048,"results":"42","hashOfConfig":"25"},{"size":4960,"mtime":1612764764394,"results":"43","hashOfConfig":"25"},{"size":2200,"mtime":1613017207414,"results":"44","hashOfConfig":"25"},{"size":415,"mtime":1612764764396,"results":"45","hashOfConfig":"25"},{"size":298,"mtime":1612764764390,"results":"46","hashOfConfig":"25"},{"size":4516,"mtime":1613459078760,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"gu5h4g",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},"D:\\PIKAPP\\pikapp-web\\src\\index.js",[],["99","100"],"D:\\PIKAPP\\pikapp-web\\src\\Master\\StoreLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\ProductLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\MainNavigation.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\DetailNavigation.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Status\\StatusView.js",["101","102","103","104"],"import React from \"react\";\r\nimport { Row, Col, Nav, Card, Modal } from \"react-bootstrap\";\r\nimport unpaidIcon from \"../../Asset/Icon/unpaid_status.png\";\r\nimport unpaidActiveIcon from \"../../Asset/Icon/unpaid_active_status.png\";\r\nimport packIcon from \"../../Asset/Icon/pack_status.png\";\r\nimport packActiveIcon from \"../../Asset/Icon/pack_active_status.png\";\r\nimport sendIcon from \"../../Asset/Icon/send_status.png\";\r\nimport sendActiveIcon from \"../../Asset/Icon/send_active_status.png\";\r\nimport reviewIcon from \"../../Asset/Icon/review_status.png\";\r\nimport reviewActiveIcon from \"../../Asset/Icon/review_active_status.png\";\r\nimport placeholderIcon from \"../../Asset/Icon/placeholder_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport categoryFoodIcon from \"../../Asset/Icon/category_food_icon.png\";\r\nimport pickupStatusIcon from \"../../Asset/Icon/pickup_status_icon.png\";\r\nimport cashierStatusIcon from \"../../Asset/Icon/cashier_icon.png\"\r\nimport ovoIcon from \"../../Asset/Icon/ovo_icon.png\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport class StatusView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    activeTab: 1,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n        biz_type: \"\",\r\n        payment: \"\",\r\n        transactionId: \"\",\r\n        transactionTime: \"\",\r\n      },\r\n    ],\r\n    currentModal: {\r\n      transactionId: \"\",\r\n      transactionTime:\"\",\r\n      storeName: \"Store\",\r\n      storeLocation: \"Location\",\r\n      storeDistance: \"Distance\",\r\n      status: \"Status\",\r\n      payment: \"Cash\",\r\n      biz_type: \"\",\r\n      food: [\r\n        {\r\n          productId: \"\",\r\n          name: \"\",\r\n          price: 0,\r\n          image: \"\",\r\n          note: \"\",\r\n          quantity: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n  handleDetail(transId) {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/\" + transId + \"/txn-detail/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var resultModal = {...this.currentModal}\r\n        resultModal.transactionId = results.transaction_id\r\n        resultModal.transactionTime = results.transaction_time\r\n        resultModal.storeName = results.merchant_name\r\n        resultModal.storeDistance = \"\"\r\n        resultModal.storeLocation = \"\"\r\n        resultModal.status = results.status\r\n        resultModal.biz_type = results.biz_type\r\n        resultModal.payment = results.payment_with\r\n        resultModal.food = []\r\n        results.detail_products.forEach((product) => {\r\n          resultModal.food.push({\r\n            name: product.product_name,\r\n            price: product.price,\r\n            quantity: product.qty,\r\n            image: product.image,\r\n            note: product.notes\r\n          })\r\n        })\r\n        this.setState({\r\n          currentModal: resultModal\r\n        })\r\n      })\r\n      .catch((err) => {\r\n      });\r\n      \r\n    this.setModal(true);\r\n  }\r\n\r\n  handleSelect(tabIndex) {\r\n    this.setState({ activeTab: tabIndex });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/txn-history/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = {...this.state}\r\n        stateData.data.pop()\r\n        results.forEach((result) => {\r\n          stateData.data.push({\r\n            title: result.merchant_name,\r\n            distance: \"\",\r\n            quantity: result.total_product,\r\n            status: result.status,\r\n            biz_type: result.biz_type,\r\n            payment: result.payment_with,\r\n            transactionId: result.transaction_id,\r\n            transactionTime: result.transaction_time,\r\n          })\r\n        })\r\n        this.setState({data: stateData.data});\r\n      })\r\n      .catch((err) => {\r\n      });\r\n    // var state = { ...this.state };\r\n    // state.data.pop();\r\n    // state.data.push({\r\n    //   title: \"Food1\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food4\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food2\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"pick\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food3\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"send\",\r\n    // });\r\n    // this.setState({ data: state.data });\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let modalList = this.state.currentModal.food;\r\n\r\n    let modalListView = modalList.map((data) => {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={placeholderIcon} class=\"statusFoodIcon\" alt=\"food icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodname\">{data.name}</p>\r\n                <p class=\"statusFoodPrice\">\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(data.price)}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodQuantity\">{data.quantity}x</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p class=\"statusFoodNote\">Catatan: {data.note}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n    let currentTotal = 0;\r\n    modalList.forEach((data) => {\r\n      currentTotal = currentTotal + data.price * data.quantity;\r\n    });\r\n    if (this.state.showModal === true) {\r\n      let payImage;\r\n      let payLabel;\r\n      if(this.state.currentModal.payment === \"PAY_BY_CASHIER\") {\r\n        payImage = cashierStatusIcon;\r\n        payLabel = \"Cashier\"\r\n      } else if(this.state.currentModal.payment === \"WALLET\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Cash\"\r\n      } else if(this.state.currentModal.payment === \"VA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Virtual\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_OVO\") {\r\n        payImage = ovoIcon;\r\n        payLabel = \"OVO\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_DANA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"DANA\"\r\n      } \r\n      modal = (\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p class=\"statusNoteLabel\">No Pesanan.</p>\r\n              <p class=\"statusNoteHeader\">{this.state.currentModal.transactionId}</p>\r\n              <p class=\"statusNoteLabel\">{this.state.currentModal.transactionTime}</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={categoryFoodIcon} class=\"statusStoreIcon\" alt=\"category icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusStoreName\">\r\n                  {this.state.currentModal.storeName}\r\n                </p>\r\n                <p class=\"statusStoreLabel\">store location</p>\r\n                <p class=\"statusStoreLocation\">\r\n                  {this.state.currentModal.storeLocation}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={pickupStatusIcon} class=\"statusStoreStatusIcon\"  alt=\"pickup status\"/>\r\n              </Col>\r\n              <Col>\r\n                <span class=\"statusStoreLabel\">status: </span>\r\n                <span class=\"statusStoreStatus\">\r\n                  {this.state.currentModal.status}\r\n                </span>\r\n                <span class=\"statusStoreDistance\">\r\n                  {this.state.currentModal.storeDistance}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStorePaymentLabel\">Metode Pembayaran</p>\r\n                <img src={payImage} class=\"statusFoodIcon\" alt=\"status icon\"></img>\r\n                <span class=\"statusStorePayment\">\r\n                      {payLabel}\r\n                    </span>\r\n              </Col>\r\n            </Row>\r\n            {modalListView}\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStoreTotal\">Total Pembayaran</p>\r\n              </Col>\r\n              <Col>\r\n                {Intl.NumberFormat(\"id-ID\", {\r\n                  style: \"currency\",\r\n                  currency: \"IDR\",\r\n                }).format(currentTotal)}\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    let notPaidImage;\r\n    let contentView;\r\n\r\n    let currentState = this.state.activeTab;\r\n    if (currentState === 1) {\r\n      notPaidImage = unpaidActiveIcon;\r\n      contentView = this.state.data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = cashierStatusIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"OPEN\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      notPaidImage = unpaidIcon;\r\n    }\r\n\r\n    let packImage;\r\n    if (currentState === 2) {\r\n      packImage = packActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"PAID\" || value.status === \"MERCHANT_CONFIRM\" || value.status === \"CUSTOMER_ACCEPTED\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      packImage = packIcon;\r\n    }\r\n\r\n    let sendImage;\r\n    if (currentState === 3) {\r\n      sendImage = sendActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"DELIVER\" || value.status === \"ON_PROCESS\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt =\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      sendImage = sendIcon;\r\n    }\r\n\r\n    let reviewImage;\r\n    if (currentState === 4) {\r\n      reviewImage = reviewActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"CLOSE\" || value.status === \"FINALIZE\") {\r\n          let bizImage;\r\n          let bizLabel;\r\n          let payImage;\r\n          let payLabel;\r\n          if(value.payment === \"PAY_BY_CASHIER\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cashier\"\r\n          } else if(value.payment === \"WALLET\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cash\"\r\n          } else if(value.payment === \"VA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Virtual\"\r\n          } else if(value.payment === \"WALLET_OVO\") {\r\n            payImage = ovoIcon;\r\n            payLabel = \"OVO\"\r\n          } else if(value.payment === \"WALLET_DANA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"DANA\"\r\n          } \r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt =\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt = \"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      reviewImage = reviewIcon;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav variant=\"tabs\" defaultActiveKey={\"not-paid\"}>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              eventKey={\"not-paid\"}\r\n              onClick={() => this.handleSelect(1)}\r\n            >\r\n              <Row>\r\n                <img\r\n                  src={notPaidImage}\r\n                  alt={\"unpaid\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Belum Bayar</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"pack\"} onClick={() => this.handleSelect(2)}>\r\n              <Row>\r\n                <img src={packImage} alt={\"pack\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Dikemas</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"send\"} onClick={() => this.handleSelect(3)}>\r\n              <Row>\r\n                <img src={sendImage} alt={\"send\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Siap / Dikirim</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"review\"} onClick={() => this.handleSelect(4)}>\r\n              <Row>\r\n                <img\r\n                  src={reviewImage}\r\n                  alt={\"review\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Beri Penilaian</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {contentView}\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-web\\src\\View\\Cart\\CartView.js",["105","106","107","108"],"D:\\PIKAPP\\pikapp-web\\src\\View\\Store\\StoreView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Auth\\FormView.js",["109","110"],"import React from \"react\";\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport { PikaTextField } from \"../../Component/TextField/PikaTextField\";\r\nimport axios from \"axios\";\r\nimport { address, clientId, googleKey } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport {geolocated} from 'react-geolocated'\r\n\r\nconst DEFAULT_LNG = -123\r\nconst DEFAULT_LAT = 48\r\n\r\nclass FormView extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    isValid: true,\r\n    isCaptcha: false,\r\n    captchaCounter: 0,\r\n    errorMsg: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n  };\r\n\r\n  getUserLocation = () => {\r\n    axios.post(`https://www.googleapis.com/geolocation/v1/geolocate?key=${googleKey}`)\r\n    .then((res)=> {\r\n      let latitude = res.data.location.lat\r\n      let longitude = res.data.location.lng\r\n      let longlat = {lat: latitude, lon: longitude}\r\n      console.log(latitude, longitude);\r\n      this.setState({lat: latitude, lon: longitude})\r\n      localStorage.setItem(\"googlonglat\", JSON.stringify(longlat))\r\n    })\r\n    .catch((err)=> console.log(err))\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.geoLocation()\r\n    \r\n    if(this.props.coords) {\r\n      let latitude = this.props.coords.latitude\r\n      let longitude = this.props.coords.longitude\r\n      let longlat = {lat: latitude, lon: longitude}\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    } else {\r\n      this.getUserLocation()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.props.coords) {\r\n      let latitude = this.props.coords.latitude\r\n      let longitude = this.props.coords.longitude\r\n      let longlat = {lat: latitude, lon: longitude}\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    }\r\n  }\r\n\r\n  handleEmail = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  handlePassword = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  handleName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handlePhone = (e) => {\r\n    this.setState({ phone: e.target.value });\r\n  };\r\n\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  checkEmail = () => {\r\n    let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRegex.test(this.state.email)) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Email is not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkName = () => {\r\n    if (this.state.name.length > 0) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Name cannot be empty.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPassword = () => {\r\n    let passwordRegex = /^(?=.*[A-Z])(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\r\n    if (!passwordRegex.test(this.state.password)) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.password.length < 8 || this.state.password.length > 16) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  checkConfirmPassword = () => {\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Password does not match.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPhone = () => {\r\n    if (this.state.phone.startsWith(\"08\")) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Phone not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //show current location start\r\n  // showPosition = (position) => {\r\n  //   let latitude = position.coords.latitude\r\n  //   let longitude = position.coords.longitude\r\n  //   let longlat = {lat: latitude, lon: longitude}\r\n  //   console.log(latitude, longitude);\r\n  //   this.setState({lat: latitude, lon: longitude})\r\n  //   localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  // }\r\n\r\n  // geoLocation = () => {\r\n  //   if(navigator.geolocation) {\r\n  //     navigator.geolocation.getCurrentPosition(this.showPosition)\r\n  //   } else {\r\n  //     alert('Geolocation is not supported by this browser.')\r\n  //   }\r\n  // }\r\n  //show current location end\r\n\r\n  handleLogin = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    // if (this.checkPassword() === false) {\r\n    //   this.setState({ isValid: false });\r\n    //   return;\r\n    // }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      username: this.state.email,\r\n      password: this.state.password,\r\n      fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        auth.isLogged = true;\r\n        auth.token = res.data.token;\r\n        auth.new_event = res.data.new_event;\r\n        auth.recommendation_status = res.data.recommendation_status;\r\n        auth.email = this.state.email;\r\n        Cookies.set(\"auth\", auth, { expires: 1});\r\n        if(Cookies.get(\"lastLink\") !== undefined) {\r\n          var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value\r\n\r\n          var latitude = \"\"\r\n          var longitude = \"\"\r\n          if(localStorage.getItem(\"longlat\")) {\r\n            var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n            latitude = getLocation.lat\r\n            longitude = getLocation.lon\r\n          } else {\r\n            var googLocation = JSON.parse(localStorage.getItem(\"googlonglat\"))\r\n            latitude = googLocation.lat\r\n            longitude = googLocation.lon\r\n          }\r\n          if(lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n          } else {\r\n            window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n          }\r\n        }\r\n        alert(\"Login berhasil.\")\r\n      })\r\n      .catch((err) => {\r\n        if(err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n        }\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkName() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPhone() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkConfirmPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      full_name: this.state.name,\r\n      password: this.state.password,\r\n      phone_number: this.state.phone,\r\n      email: this.state.email,\r\n      gender: \"MALE\",\r\n      birth_day: \"01011970\",\r\n      token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/register\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        alert(\"Register berhasil.\")\r\n        this.handleLogin()\r\n      })\r\n      .catch((err) => {\r\n        if(err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n        }\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  onChange(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  render() {\r\n    // const longitude = this.props.coords? this.props.coords.longitude : DEFAULT_LNG\r\n    // const latitude = this.props.coords? this.props.coords.latitude : DEFAULT_LAT\r\n    // console.log(longitude);\r\n    // console.log(latitude);\r\n    const isLogIn = this.props.isLogIn;\r\n    let form;\r\n    if (isLogIn) {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Email Anda\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password Anda\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Login\"\r\n                buttonStyle=\"secondaryPika\"\r\n                handleClick={this.handleLogin}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Belum punya akun?\r\n                <Link to=\"/register\">register sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    } else {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Daftarkan Email\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nama Lengkap\"\r\n                type=\"text\"\r\n                placeholder=\"Masukkan Namamu..\"\r\n                handleChange={this.handleName}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nomor HP\"\r\n                type=\"tel\"\r\n                placeholder=\"08000000\"\r\n                handleChange={this.handlePhone}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handleConfirmPassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {!this.state.isCaptcha || (\r\n                <ReCAPTCHA sitekey=\"asd\" onChange={this.onChange} />\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Daftar\"\r\n                buttonStyle=\"primaryPika\"\r\n                handleClick={this.handleRegister}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Sudah punya akun?\r\n                <Link to=\"/login\">login sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    }\r\n    return <div>{form}</div>;\r\n  }\r\n}\r\n\r\nexport default geolocated({\r\n  positionOptions:{\r\n    enableHighAccuracy: false\r\n  },\r\n  userDecisionTimeout: 5000\r\n})(FormView)\r\n\r\n// export default FormView","D:\\PIKAPP\\pikapp-web\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Product\\ProductView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js",["111","112","113"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\PikaModal.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\CartModal.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\MerchantQR.js",["114","115","116","117"],"import React, { useEffect, useState } from \"react\";\r\nimport { geolocated } from \"react-geolocated\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { address, clientId, googleKey } from \"../Asset/Constant/APIConstant\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MerchantResto = (props) => {\r\n  const [merchant, setmerchant] = useState([\r\n    {\r\n      address: \"\",\r\n      rating: \"\",\r\n      logo: \"\",\r\n      distance: \"\",\r\n      storeId: \"\",\r\n      storeName: \"\",\r\n      storeDesc: \"\",\r\n      storeImage: \"\",\r\n    },\r\n  ]);\r\n  const [latitude, setlatitude] = useState(\"\");\r\n  const [longitude, setlongitude] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const getUserLocation = () => {\r\n    Axios.post(`https://www.googleapis.com/geolocation/v1/geolocate?key=${googleKey}`)\r\n    .then((res)=> {\r\n      let latitude = res.data.location.lat\r\n      let longitude = res.data.location.lng\r\n      let longlat = {lat: latitude, lon: longitude}\r\n      console.log(latitude, longitude);\r\n      setlatitude(latitude)\r\n      setlongitude(longitude)\r\n      localStorage.setItem(\"googlonglat\", JSON.stringify(longlat))\r\n    })\r\n    .catch((err)=> console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.coords) {\r\n      let latitude = props.coords.latitude;\r\n      let longitude = props.coords.longitude;\r\n      let longlat = { lat: latitude, lon: longitude };\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat));\r\n    } else {\r\n      getUserLocation()\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.coords) {\r\n      let latitude = props.coords.latitude;\r\n      let longitude = props.coords.longitude;\r\n      let longlat = { lat: latitude, lon: longitude };\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat));\r\n      getMerchantData(latitude, longitude)\r\n    } else {\r\n      getMerchantData(latitude, longitude)\r\n    }\r\n  });\r\n\r\n  const getMerchantData = (lat, lon) => {\r\n    if (merchant[0].storeId == \"\") {\r\n      let addressRoute =\r\n        address + \"home/v1/merchant/\" + lon + \"/\" + lat + \"/ALL/\";\r\n      var stateData;\r\n      let uuid = uuidV4();\r\n      uuid = uuid.replaceAll(\"-\", \"\");\r\n      const date = new Date().toISOString();\r\n      Axios(addressRoute, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          token: \"PUBLIC\",\r\n          category: \"1\",\r\n        },\r\n        method: \"GET\",\r\n      })\r\n        .then((res) => {\r\n          stateData = [{ ...merchant }];\r\n          let responseDatas = res.data;\r\n          stateData.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            stateData.push({\r\n              address: data.merchant_address,\r\n              rating: data.merchant_rating,\r\n              logo: data.merchant_logo,\r\n              distance: data.merchant_distance,\r\n              storeId: data.mid,\r\n              storeName: data.merchant_name,\r\n              storeDesc: \"\",\r\n              storeImage: data.merchant_pict,\r\n            });\r\n          });\r\n          console.log(stateData);\r\n          console.log(props.match.params.mid);\r\n          console.log(stateData[0].storeId);\r\n          let matchmid = stateData.filter((val) => {\r\n            return val.storeId == props.match.params.mid;\r\n          });\r\n          console.log(matchmid[0].storeId);\r\n          var currentMerchant = {\r\n            mid: \"\",\r\n            storeName: \"\",\r\n            storeDesc: \"\",\r\n            distance: \"\",\r\n            storeImage: \"\",\r\n          };\r\n          currentMerchant.mid = matchmid[0].storeId;\r\n          currentMerchant.storeName = matchmid[0].storeName;\r\n          currentMerchant.storeDesc = \"Desc\";\r\n          currentMerchant.distance = matchmid[0].distance;\r\n          currentMerchant.storeImage = matchmid[0].storeImage;\r\n          Cookies.set(\"currentMerchant\", currentMerchant, { expires: 1 });\r\n          history.push(\r\n            \"/store?mid=\" +\r\n              matchmid[0].storeId +\r\n              \"&table=\" +\r\n              props.match.params.notab\r\n          );\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: false,\r\n  },\r\n  userDecisionTimeout: 5000,\r\n})(MerchantResto);\r\n\r\n// export default MerchantResto\r\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":345,"column":49,"nodeType":"124","messageId":"125","endLine":345,"endColumn":51},{"ruleId":"122","severity":1,"message":"123","line":423,"column":38,"nodeType":"124","messageId":"125","endLine":423,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":508,"column":38,"nodeType":"124","messageId":"125","endLine":508,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":593,"column":38,"nodeType":"124","messageId":"125","endLine":593,"endColumn":40},{"ruleId":"122","severity":1,"message":"126","line":90,"column":52,"nodeType":"124","messageId":"125","endLine":90,"endColumn":54},{"ruleId":"127","severity":1,"message":"128","line":121,"column":15,"nodeType":"129","messageId":"130","endLine":121,"endColumn":17},{"ruleId":"122","severity":1,"message":"126","line":293,"column":41,"nodeType":"124","messageId":"125","endLine":293,"endColumn":43},{"ruleId":"122","severity":1,"message":"123","line":300,"column":46,"nodeType":"124","messageId":"125","endLine":300,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":13,"column":7,"nodeType":"133","messageId":"134","endLine":13,"endColumn":18},{"ruleId":"131","severity":1,"message":"135","line":14,"column":7,"nodeType":"133","messageId":"134","endLine":14,"endColumn":18},{"ruleId":"131","severity":1,"message":"136","line":5,"column":5,"nodeType":"133","messageId":"134","endLine":5,"endColumn":15},{"ruleId":"131","severity":1,"message":"137","line":9,"column":5,"nodeType":"133","messageId":"134","endLine":9,"endColumn":17},{"ruleId":"131","severity":1,"message":"138","line":12,"column":5,"nodeType":"133","messageId":"134","endLine":12,"endColumn":18},{"ruleId":"131","severity":1,"message":"139","line":10,"column":20,"nodeType":"133","messageId":"134","endLine":10,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":50,"column":6,"nodeType":"142","endLine":50,"endColumn":8,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"128","line":66,"column":29,"nodeType":"129","messageId":"130","endLine":66,"endColumn":31},{"ruleId":"127","severity":1,"message":"128","line":104,"column":32,"nodeType":"129","messageId":"130","endLine":104,"endColumn":34},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a value to be returned at the end of arrow function.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'DEFAULT_LNG' is assigned a value but never used.","Identifier","unusedVar","'DEFAULT_LAT' is assigned a value but never used.","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'setmerchant' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.coords'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [props.coords]",{"range":"149","text":"150"},[1590,1592],"[props.coords]"]