[{"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\index.js":"1","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Button\\PikaButton.js":"2","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js":"3","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\MainNavigation.js":"4","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\AuthLayout.js":"5","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js":"6","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProductLayout.js":"7","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js":"8","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Product\\ProductView.js":"9","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Auth\\FormView.js":"10","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Main\\JumbotronView.js":"11","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\PikaModal.js":"12","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\CartLayout.js":"13","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Cart\\CartView.js":"14","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\CartModal.js":"15","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\DetailNavigation.js":"16","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StatusLayout.js":"17","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Status\\StatusView.js":"18","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StoreLayout.js":"19","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Store\\StoreView.js":"20"},{"size":1500,"mtime":1608663304167,"results":"21","hashOfConfig":"22"},{"size":298,"mtime":1607928483171,"results":"23","hashOfConfig":"22"},{"size":415,"mtime":1607928496232,"results":"24","hashOfConfig":"22"},{"size":1087,"mtime":1608668041309,"results":"25","hashOfConfig":"22"},{"size":1287,"mtime":1608401366536,"results":"26","hashOfConfig":"22"},{"size":172,"mtime":1608663261266,"results":"27","hashOfConfig":"22"},{"size":675,"mtime":1608401370132,"results":"28","hashOfConfig":"22"},{"size":80,"mtime":1607920097360,"results":"29","hashOfConfig":"22"},{"size":14198,"mtime":1608667637559,"results":"30","hashOfConfig":"22"},{"size":10745,"mtime":1608667981155,"results":"31","hashOfConfig":"22"},{"size":778,"mtime":1607928516520,"results":"32","hashOfConfig":"22"},{"size":4977,"mtime":1608661244289,"results":"33","hashOfConfig":"22"},{"size":838,"mtime":1608401365819,"results":"34","hashOfConfig":"22"},{"size":14304,"mtime":1608667900816,"results":"35","hashOfConfig":"22"},{"size":2070,"mtime":1608645038102,"results":"36","hashOfConfig":"22"},{"size":771,"mtime":1608665923479,"results":"37","hashOfConfig":"22"},{"size":856,"mtime":1608401371224,"results":"38","hashOfConfig":"22"},{"size":25198,"mtime":1608752916654,"results":"39","hashOfConfig":"22"},{"size":668,"mtime":1608401372273,"results":"40","hashOfConfig":"22"},{"size":6279,"mtime":1608753089135,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5fne88",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\index.js",[],["94","95"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Button\\PikaButton.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\MainNavigation.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\AuthLayout.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js",["96","97","98","99"],"export const address = \"https://dev-api.pikapp.id/\";\r\nvar login = \"bejohen@gmail.com\"\r\nvar pass = \"123456\"\r\nvar longitudeTest = \"106.634157\"\r\nvar latitudeTest = \"-6.234916\"","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\ProductLayout.js",["100"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport { ProductView } from \"../View/Product/ProductView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = secondary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <MainNavigation />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <ProductView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Product\\ProductView.js",["101"],"import React from \"react\";\r\nimport { Col, Row, Image, Card, Tabs, Tab } from \"react-bootstrap\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport { PikaModal } from \"../../Component/Modal/PikaModal\";\r\nimport queryString from \"query-string\";\r\nimport { cart } from \"../../index.js\";\r\nimport cartIcon from \"../../Asset/Icon/cart_icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n};\r\n\r\nexport class ProductView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    data: {\r\n      mid: \"\",\r\n      title: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      data: [\r\n        {\r\n          productId: \"\",\r\n          category: \"\",\r\n          foodName: \"\",\r\n          foodDesc: \"\",\r\n          foodPrice: 0,\r\n          foodImage: \"\",\r\n          foodExt: [\r\n            {\r\n              name: \"\",\r\n              amount: 0,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      currentData: {\r\n        productId: \"\",\r\n        category: \"\",\r\n        foodName: \"\",\r\n        foodDesc: \"\",\r\n        foodPrice: 0,\r\n        foodImage: \"\",\r\n        foodExt: [\r\n          {\r\n            name: \"\",\r\n            amount: 0,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(cart)\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    var currentMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    console.log(auth)\r\n    const value = queryString.parse(window.location.search);\r\n    const mid = value.mid;\r\n    let addressRoute = address + \"home/v1/list/product/\";\r\n    var stateData;\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    Axios(addressRoute, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n        \"token\": \"PUBLIC\",\r\n        \"mid\": mid,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n    .then((res) => {\r\n        stateData = { ...this.state.data };\r\n        let responseDatas = res.data.results;\r\n        stateData.data.pop();\r\n        stateData.mid = mid;\r\n        stateData.title = currentMerchant.storeName;\r\n        stateData.image = currentMerchant.storeImage;\r\n        stateData.desc = currentMerchant.storeDistance;\r\n        stateData.data.push({\r\n          category: \"All Category\",\r\n          productId: \"\",\r\n          foodName: \"\",\r\n          foodDesc: \"\",\r\n          foodPrice: \"\",\r\n          foodImage: \"\",\r\n        })\r\n        responseDatas.forEach((data) => {\r\n          stateData.data.push({\r\n              productId: data.product_id,\r\n              foodName: data.product_name,\r\n              foodDesc: \"\",\r\n              foodPrice: data.product_price,\r\n              foodImage: data.product_picture[0],\r\n          })\r\n        })\r\n      this.setState({ data: stateData });\r\n    })\r\n    .catch((err) => {\r\n    });\r\n\r\n    // var data = { ...this.state.data };\r\n    // data.title = \"Store Name\";\r\n    // data.image = \"\";\r\n    // data.desc = \"This is a store desc\";\r\n    // data.data.pop();\r\n    // data.data.push({\r\n    //   category: \"All Category\",\r\n    //   productId: \"data.product_id\",\r\n    //   foodName: \"data.product_name\",\r\n    //   foodDesc: \"\",\r\n    //   foodPrice: 1,\r\n    //   foodImage: \"data.product_picture\",\r\n    // });\r\n    // data.data.push({\r\n    //   category: \"\",\r\n    //   productId: \"data.product_id\",\r\n    //   foodName: \"data.product_name\",\r\n    //   foodDesc: \"\",\r\n    //   foodPrice: 1,\r\n    //   foodImage: \"data.product_picture\",\r\n    // });\r\n    // this.setState({data: data})\r\n  }\r\n\r\n  handleDetail(data) {\r\n    this.setState({ currentData: data });\r\n    this.setState({ showModal: true });\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleCart = (data) => {\r\n    currentExt = data;\r\n  };\r\n\r\n  handleAddCart = () => {\r\n    var currentMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    const value = queryString.parse(window.location.search);\r\n    const mid = value.mid;\r\n    this.setModal(false);\r\n    var isStorePresent = false;\r\n    cart.forEach((data) => {\r\n      console.log(data.mid)\r\n      console.log(this.state.data.mid)\r\n      if (data.mid === this.state.data.mid) {\r\n        isStorePresent = true;\r\n      }\r\n    });\r\n\r\n    var isDuplicate = false;\r\n    cart.forEach((data) => {\r\n      if (data.mid === this.state.data.mid) {\r\n        data.food.forEach((food) => {\r\n          if (food.productId === this.state.currentData.productId) {\r\n            isDuplicate = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n    if (isStorePresent === true) {\r\n      if (isDuplicate === true) {\r\n        cart.forEach((data) => {\r\n          if (data.mid === this.state.data.mid) {\r\n            data.food.forEach((food) => {\r\n\r\n              if (food.productId === this.state.currentData.productId) {\r\n                food.foodAmount += currentExt.detailCategory[0].amount;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        cart.forEach((data) => {\r\n          if (data.mid === this.state.data.mid) {\r\n            data.food.push({\r\n              productId: this.state.currentData.productId,\r\n              foodName: this.state.currentData.foodName,\r\n              foodPrice: this.state.currentData.foodPrice,\r\n              foodImage: this.state.currentData.foodImage,\r\n              foodAmount: currentExt.detailCategory[0].amount,\r\n              foodNote: currentExt.note,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      cart.push({\r\n        mid: mid,\r\n        storeName: currentMerchant.storeName,\r\n        storeDesc: currentMerchant.storeDesc,\r\n        storeDistance: currentMerchant.distance,\r\n        food: [\r\n          {\r\n            productId: this.state.currentData.productId,\r\n            foodName: this.state.currentData.foodName,\r\n            foodPrice: this.state.currentData.foodPrice,\r\n            foodImage: this.state.currentData.foodImage,\r\n            foodAmount: currentExt.detailCategory[0].amount,\r\n            foodNote: currentExt.note,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    let addedMerchants = []\r\n    if(Cookies.get(\"addedMerchants\") === undefined) {\r\n      if(!addedMerchants.includes(mid)) {\r\n        addedMerchants.push(mid)\r\n        Cookies.set(\"addedMerchants\", addedMerchants)\r\n      }\r\n    } else {\r\n      addedMerchants = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n      if(!addedMerchants.includes(mid)) {\r\n        addedMerchants.push(mid)\r\n        Cookies.set(\"addedMerchants\", addedMerchants)\r\n      }\r\n    }\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    let signature = sha256(\"abf0e2a9-e9ee-440f-8563-94481c64b797:\" + auth.email + \":\" + \"21f6fc80-cfdb-11ea-87d0-0242ac130003:\" + date,\"21f6fc80-cfdb-11ea-87d0-0242ac130003\")\r\n    Axios(address + \"/txn/v1/cart-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"POST\",\r\n      data: {\r\n        mid: this.state.data.mid,\r\n        pid: this.state.currentData.productId,\r\n        qty: currentExt.detailCategory[0].amount,\r\n        notes: currentExt.note,\r\n      }\r\n    })\r\n    .then((res) => {\r\n    })\r\n    .catch((err) => {\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let modal;\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <PikaModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          datas={this.state.currentData}\r\n          handleClick={this.handleAddCart}\r\n          handleData={this.handleCart}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    const storeDatas = this.state.data.data.map((data) => {\r\n      return data;\r\n    });\r\n\r\n    let categories = [];\r\n    categories = storeDatas.filter((data) => {\r\n      if (!categories.includes(data.category)) {\r\n        return categories.push(data.category);\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    let cartButton;\r\n    if (cart.length > 1) {\r\n      cartButton = (\r\n        <Link to={\"/cart\"} className={\"btn-productCart\"}>\r\n          <img src={cartIcon} alt={\"cart\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      cartButton = <></>;\r\n    }\r\n    const contentView = categories.map((data) => {\r\n      if (data.category === \"All Category\") {\r\n        var allCards = storeDatas.map((cardData) => {\r\n          if (cardData.category === \"All Category\") {\r\n            return null;\r\n          } else {\r\n            return (\r\n              <Row>\r\n                <Col xs={4} md={3}>\r\n                  <Image\r\n                    src={cardData.foodImage}\r\n                    rounded\r\n                    fluid\r\n                    className=\"foodImage\"\r\n                  />\r\n                </Col>\r\n                <Col xs={8} md={9}>\r\n                  <Row>\r\n                    <Col xs={7} md={9}>\r\n                      <h5 className=\"foodTitle\">{cardData.foodName}</h5>\r\n                      <p className=\"foodDesc\">{cardData.foodDesc}</p>\r\n                      <div className=\"foodButton\">\r\n                        <PikaButton\r\n                          title=\"Add to cart\"\r\n                          buttonStyle=\"cartPika\"\r\n                          handleClick={() => this.handleDetail(cardData)}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col xs={5} md={3}>\r\n                      <h6 className=\"foodPrice\">\r\n                        {Intl.NumberFormat(\"id-ID\", {\r\n                          style: \"currency\",\r\n                          currency: \"IDR\",\r\n                        }).format(cardData.foodPrice)}\r\n                      </h6>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          }\r\n        });\r\n        return (\r\n          <Tab eventKey={data.category} title={data.category}>\r\n            <Row>\r\n              <Col>\r\n                <h5 className=\"foodHeader\">{data.category}</h5>\r\n              </Col>\r\n            </Row>\r\n            {allCards}\r\n          </Tab>\r\n        );\r\n      } else {\r\n        var cards = storeDatas.map((cardData) => {\r\n          if (data.category === cardData.category) {\r\n            return (\r\n              <Card>\r\n                <Row>\r\n                  <Col xs={4} md={3}>\r\n                    <Image\r\n                      src={cardData.foodImage}\r\n                      rounded\r\n                      fluid\r\n                      className=\"foodImage\"\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} md={6}>\r\n                    <Row>\r\n                      <Col>\r\n                        <h5 className=\"foodTitle\">{cardData.foodName}</h5>\r\n                        <p className=\"foodDesc\">{cardData.foodDesc}</p>\r\n                        <PikaButton\r\n                          title=\"Add to cart\"\r\n                          buttonStyle=\"cartPika\"\r\n                          handleClick={() => this.handleDetail(cardData)}\r\n                        />\r\n                      </Col>\r\n                      <Col xs={5} md={3}>\r\n                        <h6 className=\"foodPrice\">\r\n                          {Intl.NumberFormat(\"id-ID\", {\r\n                            style: \"currency\",\r\n                            currency: \"IDR\",\r\n                          }).format(cardData.foodPrice)}\r\n                        </h6>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        });\r\n        return (\r\n          <Tab eventKey={data.category} title={data.category}>\r\n            <Row>\r\n              <Col>\r\n                <h5 className=\"foodHeader\">{data.category}</h5>\r\n              </Col>\r\n            </Row>\r\n            {cards}\r\n          </Tab>\r\n        );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs={4} md={2}>\r\n            <Image\r\n              src={this.state.data.image}\r\n              roundedCircle\r\n              className=\"storeImage\"\r\n            />\r\n          </Col>\r\n          <Col xs={8} md={4} className=\"storeColumn\">\r\n            <h2 className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n              {this.state.data.title}\r\n            </h2>\r\n            <p className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n              {this.state.data.desc}\r\n            </p>\r\n          </Col>\r\n          <Col />\r\n        </Row>\r\n        <Row />\r\n        <Row>\r\n          <Col md={12}>\r\n            <Tabs defaultActiveKey=\"All Category\">{contentView}</Tabs>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n        {cartButton}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Auth\\FormView.js",["102","103"],"import React from \"react\";\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport { PikaTextField } from \"../../Component/TextField/PikaTextField\";\r\nimport axios from \"axios\";\r\nimport { address } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport class FormView extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    isValid: true,\r\n    isCaptcha: false,\r\n    captchaCounter: 0,\r\n    errorMsg: \"\",\r\n  };\r\n\r\n  handleEmail = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  handlePassword = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  handleName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handlePhone = (e) => {\r\n    this.setState({ phone: e.target.value });\r\n  };\r\n\r\n  handleConfirmPassword = (e) => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  checkEmail = () => {\r\n    let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (emailRegex.test(this.state.email)) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Email is not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkName = () => {\r\n    if (this.state.name.length > 0) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Name cannot be empty.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPassword = () => {\r\n    let passwordRegex = /^(?=.*[A-Z])(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,16}$/;\r\n    if (!passwordRegex.test(this.state.password)) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    }\r\n    if (this.state.password.length < 8 || this.state.password.length > 16) {\r\n      this.setState({\r\n        errorMsg:\r\n          \"Password must be within 8 to 16 characters and contain at least one uppercase letter and one symbol.\",\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  checkConfirmPassword = () => {\r\n    if (this.state.password === this.state.confirmPassword) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Password does not match.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkPhone = () => {\r\n    if (this.state.phone.startsWith(\"08\")) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMsg: \"Phone not valid.\" });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    // if (this.checkPassword() === false) {\r\n    //   this.setState({ isValid: false });\r\n    //   return;\r\n    // }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      username: this.state.email,\r\n      password: this.state.password,\r\n      fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        auth.isLogged = true;\r\n        auth.token = res.data.token;\r\n        auth.new_event = res.data.new_event;\r\n        auth.recommendation_status = res.data.recommendation_status;\r\n        auth.email = this.state.email;\r\n        Cookies.set(\"auth\", auth, { expires: 1});\r\n        if(Cookies.get(\"lastLink\") !== undefined) {\r\n          window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n        }\r\n        alert(\"Login berhasil.\")\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Login gagal.\")\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n        console.log(err)\r\n      });\r\n\r\n\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    if (this.checkEmail() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkName() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPhone() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n    if (this.checkConfirmPassword() === false) {\r\n      this.setState({ isValid: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isValid: true });\r\n    const data = {\r\n      full_name: this.state.name,\r\n      password: this.state.password,\r\n      phone_number: this.state.phone,\r\n      email: this.state.email,\r\n      gender: \"MALE\",\r\n      birth_day: \"01011970\",\r\n      token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n    };\r\n\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    axios(address + \"auth/register\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n      },\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then((res) => {\r\n        alert(\"Register berhasil.\")\r\n        window.location.href = \"/login\";\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Register gagal.\")\r\n        this.setState({ captchaCounter: this.state.captchaCounter + 1 });\r\n      });\r\n  };\r\n\r\n  onChange(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  render() {\r\n    const isLogIn = this.props.isLogIn;\r\n    let form;\r\n    if (isLogIn) {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Email Anda\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password Anda\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Login\"\r\n                buttonStyle=\"secondaryPika\"\r\n                handleClick={this.handleLogin}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Belum punya akun?\r\n                <Link to=\"/register\">register sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    } else {\r\n      form = (\r\n        <Form>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Daftarkan Email\"\r\n                type=\"email\"\r\n                placeholder=\"abc@email.com\"\r\n                handleChange={this.handleEmail}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nama Lengkap\"\r\n                type=\"text\"\r\n                placeholder=\"Masukkan Namamu..\"\r\n                handleChange={this.handleName}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Nomor HP\"\r\n                type=\"tel\"\r\n                placeholder=\"08000000\"\r\n                handleChange={this.handlePhone}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handlePassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <PikaTextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                placeholder=\"*******\"\r\n                handleChange={this.handleConfirmPassword}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {!this.state.isCaptcha || (\r\n                <ReCAPTCHA sitekey=\"asd\" onChange={this.onChange} />\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              {this.state.isValid || (\r\n                <Alert variant=\"danger\">{this.state.errorMsg}</Alert>\r\n              )}\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={4}>\r\n              <PikaButton\r\n                title=\"Daftar\"\r\n                buttonStyle=\"primaryPika\"\r\n                handleClick={this.handleRegister}\r\n              />\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={4} />\r\n            <Col xs={6}>\r\n              <p>\r\n                Sudah punya akun?\r\n                <Link to=\"/login\">login sekarang</Link>\r\n              </p>\r\n            </Col>\r\n            <Col />\r\n          </Row>\r\n        </Form>\r\n      );\r\n    }\r\n    return <div>{form}</div>;\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Main\\JumbotronView.js",["104","105"],"import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport login_illustration from \"../../Asset/Illustration/illustration_login.png\";\r\nimport register_illustration from \"../../Asset/Illustration/illustration_register.png\";\r\n\r\nexport class JumbotronView extends React.Component {\r\n  render() {\r\n    const isLogIn = this.props.isLogIn;\r\n    let image;\r\n    if (isLogIn) {\r\n      image = <img src={login_illustration}></img>;\r\n    } else {\r\n      image = <img src={register_illustration}></img>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1 class=\"jumbotron-title\" style={{ color: this.props.titleColor }}>\r\n            {this.props.title}\r\n          </h1>\r\n          {image}\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\PikaModal.js",["106"],"import React from \"react\";\r\nimport { Row, Col, ButtonGroup, Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { PikaButton } from \"../Button/PikaButton\";\r\n\r\nexport class PikaModal extends React.Component {\r\n  state = {\r\n    detailCategory: [\r\n      {\r\n        name: \"\",\r\n        amount: 1,\r\n      },\r\n    ],\r\n    note: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    var list = [{ ...this.state.detailCategory }];\r\n    var datas = this.props.datas;\r\n    list.pop();\r\n    if(datas.foodExt !== undefined) {\r\n      datas.foodExt.map((data) => {\r\n        return list.push({\r\n          name: data.name,\r\n          amount: data.amount,\r\n        });\r\n      });\r\n      this.setState({ detailCategory: list });\r\n    }\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    let foodList = [];\r\n    foodList = this.state.detailCategory;\r\n    let updatedFoodlist = foodList.map((food) => {\r\n      if (food === e && food.amount > 1) {\r\n        food.amount = food.amount - 1;\r\n      }\r\n      return food;\r\n    });\r\n    this.setState({ detailCategory: updatedFoodlist });\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    let foodList = [];\r\n    foodList = this.state.detailCategory;\r\n    let updatedFoodlist = foodList.map((food) => {\r\n      if (food === e) {\r\n        food.amount = food.amount + 1;\r\n      }\r\n      return food;\r\n    });\r\n    this.setState({ detailCategory: updatedFoodlist });\r\n  }\r\n\r\n  handleNote = (e) => {\r\n    this.setState({ note: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let foodList = [];\r\n    foodList = this.state.detailCategory;\r\n    let data = this.state;\r\n    let handleData = this.props.handleData(data);\r\n    let foodListView = foodList.map((food) => {\r\n      if(food.name === \"\") {\r\n        return (\r\n          <>\r\n            <Row>\r\n              <Col xs={4} md={5}>\r\n                <h6 className={\"modalFoodName\"}>Jumlah</h6>\r\n              </Col>\r\n              <Col xs={1} md={3} />\r\n              <Col xs={6} md={4}>\r\n                <ButtonGroup className={\"modalButtonGroup\"}>\r\n                  <Button\r\n                    onClick={() => this.handleDecrease(food)}\r\n                    variant=\"modalMiniButton\"\r\n                  >\r\n                    -\r\n                  </Button>\r\n                  <Form.Control\r\n                    value={food.amount}\r\n                    className=\"modalField\"\r\n                    disabled\r\n                  ></Form.Control>\r\n                  <Button\r\n                    onClick={() => this.handleIncrease(food)}\r\n                    variant=\"modalMiniButton\"\r\n                  >\r\n                    +\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <Row>\r\n              <Col xs={4} md={5}>\r\n                <h6 className={\"modalFoodName\"}>{food.name}</h6>\r\n              </Col>\r\n              <Col xs={1} md={3} />\r\n              <Col xs={6} md={4}>\r\n                <ButtonGroup className={\"modalButtonGroup\"}>\r\n                  <Button\r\n                    onClick={() => this.handleDecrease(food)}\r\n                    variant=\"modalMiniButton\"\r\n                  >\r\n                    -\r\n                  </Button>\r\n                  <Form.Control\r\n                    value={food.amount}\r\n                    className=\"modalField\"\r\n                    disabled\r\n                  ></Form.Control>\r\n                  <Button\r\n                    onClick={() => this.handleIncrease(food)}\r\n                    variant=\"modalMiniButton\"\r\n                  >\r\n                    +\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        );\r\n      }\r\n\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={this.props.isShow}\r\n        onHide={this.props.onHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Detail Produk</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {foodListView}\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Form.Label className={\"modalNoteLabel\"}>Catatan</Form.Label>\r\n                <Form.Control\r\n                  placeholder={\"Tambahkan catatanmu\"}\r\n                  className={\"modalNote\"}\r\n                  fluid\r\n                  onChange={this.handleNote}\r\n                ></Form.Control>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={1} md={2} />\r\n            <Col xs={10} md={8}>\r\n              <PikaButton\r\n                title=\"Add to cart\"\r\n                buttonStyle=\"modalPika\"\r\n                handleClick={this.props.handleClick}\r\n              />\r\n            </Col>\r\n            <Col xs={1} md={2} />\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\CartLayout.js",["107"],"import React from \"react\";\r\nimport DetailNavigation from \"./DetailNavigation\";\r\nimport { CartView } from \"../View/Cart/CartView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport cartLogo from \"../Asset/Illustration/cart_illustration2x.png\";\r\nimport backIcon from \"../Asset/Icon/back_icon2x.png\";\r\n\r\nexport default class CartLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = secondary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <DetailNavigation centerImage={cartLogo} backIcon={backIcon} />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <CartView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Cart\\CartView.js",["108","109","110","111"],"import React from \"react\";\r\nimport { Row, Col, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport chevronImage from \"../../Asset/Icon/chevron_right.png\";\r\nimport removeIcon from \"../../Asset/Icon/remove_icon.png\";\r\nimport storeIcon from \"../../Asset/Icon/store_icon.png\";\r\nimport checklistIcon from \"../../Asset/Icon/checklist_icon.png\";\r\nimport frontIcon from \"../../Asset/Icon/front_icon.png\";\r\nimport imageSample from \"../../Asset/Illustration/sample_food.jpg\";\r\nimport { CartModal } from \"../../Component/Modal/CartModal\";\r\nimport { cart } from \"../../index.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport class CartView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    currentModalTitle: \"\",\r\n    paymentOption: \"WALLET\",\r\n    biz_type: \"DINE_IN\",\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Cara makan anda?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan di tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Bungkus / Takeaway\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar pakai apa?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cash\",\r\n            option: \"Cash\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    if (e.foodAmount > 1) {\r\n      e.foodAmount -= 1;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    e.foodAmount += 1;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDelete(e) {\r\n    let filteredCart;\r\n    cart.forEach((store) => {\r\n      let filteredStore = store.food.filter((data) => {\r\n        return data.foodName !== e.foodName;\r\n      });\r\n      store.food = filteredStore;\r\n      if(store.food.length === 0) {\r\n        filteredCart = cart.filter((filterStore) => {\r\n          return filterStore.mid !== store.mid;\r\n        });\r\n        localStorage.setItem(\"cart\",JSON.stringify(filteredCart))\r\n        let addedMerchants = []\r\n        filteredCart.forEach((cart) => {\r\n          addedMerchants.push(cart.mid)\r\n          console.log(addedMerchants)\r\n          Cookies.set(\"addedMerchants\", addedMerchants)\r\n        })\r\n        window.location.reload()\r\n      }\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n  handleOption = (data) => {\r\n    if(this.state.currentModalTitle === \"Cara makan anda?\") {\r\n      if(data === 0) {\r\n        this.setState({biz_type: \"DINE_IN\"})\r\n      } else {\r\n        this.setState({biz_type: \"TAKE_AWAY\"})\r\n      }\r\n    }\r\n  }\r\n  handlePayment = () => {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    console.log(\"Handle\");\r\n    let totalAmount = 0;\r\n    let data = cart;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n\r\n    let merchantIds = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n    merchantIds = merchantIds.filter((merchant) => {\r\n      return merchant !== \"\"\r\n    })\r\n    console.log(merchantIds)\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(\"abf0e2a9-e9ee-440f-8563-94481c64b797:\" + auth.email + \":\" + \"21f6fc80-cfdb-11ea-87d0-0242ac130003:\" + date,\"21f6fc80-cfdb-11ea-87d0-0242ac130003\")\r\n\r\n    var requestData = {\r\n      products: [{\r\n        product_id :\"\",\r\n        notes: \"\",\r\n        qty: 0\r\n      }],\r\n      payment_with: this.state.paymentOption,\r\n      mid: JSON.stringify(merchantIds),\r\n      prices: totalAmount,\r\n      biz_type: this.state.biz_type,\r\n      table_no: \"1\"\r\n    }\r\n    requestData.products.pop()\r\n    cart.forEach((merchant) => {\r\n      let addedMerchants = Cookies.get(\"addedMerchants\")\r\n      if(addedMerchants.includes(merchant.mid)) {\r\n        merchant.food.forEach((data) => {\r\n          if(data.productId !== \"\") {\r\n            requestData.products.push({\r\n              product_id: data.productId,\r\n              notes: data.foodNote,\r\n              qty: data.foodAmount,\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    Axios(address + \"/txn/v1/cart-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": \"abf0e2a9-e9ee-440f-8563-94481c64b797\",\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"POST\",\r\n      data: requestData,\r\n    })\r\n    .then((res) => {\r\n      localStorage.removeItem(\"cart\")\r\n      alert(\"Pembelian telah berhasil.\")\r\n      window.location.href = \"/status\"\r\n    })\r\n    .catch((err) => {\r\n      alert(\"Terdapat kesalahan dalam pembelian.\")\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let modal;\r\n    let paymentButton;\r\n    if (auth.isLoggedIn === false) {\r\n      paymentButton = (\r\n        <Link to={\"/login\"} className={\"iconButton\"}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      paymentButton = (\r\n        <button className={\"iconButton\"} onClick={() => this.handlePayment()}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </button>\r\n      );\r\n    }\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n          handleData = {this.handleOption}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n\r\n    let data = cart;\r\n    let totalAmount = 0;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n    let storeList = data.filter((store) => {\r\n      if (store.mid !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    let contentView = storeList.map((store) => {\r\n      let itemListView = data.map((cartData) => {\r\n        if(cartData.mid === store.mid) {\r\n          return store.food.map((food) => {\r\n            return (\r\n              <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col xs={3} md={1}>\r\n                <img\r\n                  src={food.foodImage}\r\n                  alt={\"food\"}\r\n                  className={\"cartFoodImage\"}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContentFood\"}>{food.foodName}</p>\r\n                    <p className={\"cartContentPrice\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(food.foodPrice)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <button\r\n                      className={\"iconButton\"}\r\n                      onClick={() => this.handleDelete(food)}\r\n                    >\r\n                      <img src={removeIcon} alt={\"remove icon\"} />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ButtonGroup className={\"cartModalButtonGroup\"}>\r\n                      <Button\r\n                        onClick={() => this.handleDecrease(food)}\r\n                        variant=\"cartModalMiniButton\"\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <Form.Control\r\n                        value={food.foodAmount}\r\n                        className=\"cartModalField\"\r\n                        disabled\r\n                      ></Form.Control>\r\n                      <Button\r\n                        onClick={() => this.handleIncrease(food)}\r\n                        variant=\"cartModalMiniButton\"\r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            )\r\n          })\r\n        }\r\n      });\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col>\r\n              <p className={\"cartTitle\"}>{store.storeName}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col xs={1} md={1}>\r\n              <img src={storeIcon} className={\"cartIcon\"} alt={\"store icon\"} />\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <p className={\"cartNote\"}>Store Location</p>\r\n                  <p className={\"cartTitle\"}>{store.storeDesc}</p>\r\n                  <p className={\"cartNote\"}>\r\n                    <b>{store.storeDistance}</b>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={2} md={3}>\r\n              <button className={\"iconButton\"}>\r\n                <img\r\n                  src={chevronImage}\r\n                  onClick={() => this.handleDetail()}\r\n                  alt={\"chevron right\"}\r\n                />\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          {itemListView}\r\n        </>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <p className={\"cartTitle\"}>Pilih cara makan anda</p>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"eat-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Bayar pakai apa?</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartContent\"}>Cash</p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"pay-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        {contentView}\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Rincian Pembayaran</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Total harga barang:</p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Diskon:</p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(totalAmount)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(0)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className={\"cartPayment\"}>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Total Belanja Kamu</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartFinalPrice\"}>\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(totalAmount)}\r\n                </p>\r\n              </Col>\r\n              <Col className={\"cartFinalButton\"}>{paymentButton}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Component\\Modal\\CartModal.js",["112","113"],"import React from \"react\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { PikaButton } from \"../Button/PikaButton\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\n\r\nexport class CartModal extends React.Component {\r\n  state = {\r\n    radio: 0,\r\n  };\r\n\r\n  onClick = (num) => () => {\r\n    this.setState({ radio: num });\r\n    localStorage.setItem(\"option\", num)\r\n    this.props.handleData(num);\r\n  };\r\n  render() {\r\n    let data = this.state;\r\n    let optionList = [];\r\n    optionList = this.props.detailOptions;\r\n    let optionListView = optionList.map((data) => {\r\n      let image;\r\n      if (data.image === \"dineIn\") {\r\n        image = dineinIcon;\r\n      } else if (data.image === \"takeaway\") {\r\n        image = takeawayIcon;\r\n      }\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={8} md={5}>\r\n              <img src={image} class=\"cartModalImage\" alt=\"icon\" />\r\n\r\n              <span class=\"cartModalOption\">{data.option}</span>\r\n            </Col>\r\n            <Col xs={1} md={3} />\r\n            <Col xs={2} md={4}>\r\n              <Form>\r\n                <Form.Check\r\n                  name=\"option\"\r\n                  type={\"radio\"}\r\n                  id={data.option}\r\n                  onClick={this.onClick(optionList.indexOf(data))}\r\n                  checked={\r\n                    this.state.radio === optionList.indexOf(data) ? true : false\r\n                  }\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={this.props.isShow}\r\n        onHide={this.props.onHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{optionListView}</Modal.Body>\r\n        <Modal.Footer />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\DetailNavigation.js",[],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StatusLayout.js",["114"],"import React from \"react\";\r\nimport DetailNavigation from \"./DetailNavigation\";\r\nimport { StatusView } from \"../View/Status/StatusView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport statusLogo from \"../Asset/Illustration/status_illustration2x.png\";\r\nimport backIcon from \"../Asset/Icon/back_icon_alt2x.png\";\r\n\r\nexport default class StatusLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = primary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <DetailNavigation centerImage={statusLogo} backIcon={backIcon} />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <StatusView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Status\\StatusView.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\Master\\StoreLayout.js",["133"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport { StoreView } from \"../View/Store/StoreView\";\r\nimport {\r\n  primary_color,\r\n  secondary_color,\r\n} from \"../Asset/Constant/ColorConstant\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default class StoreLayout extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = secondary_color;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <html>\r\n        <header>\r\n          <MainNavigation />\r\n        </header>\r\n        <body>\r\n          <Container>\r\n            <StoreView />\r\n          </Container>\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\willi\\OneDrive\\Work\\Pikapp\\Web\\pikapp-web\\src\\View\\Store\\StoreView.js",["134","135","136","137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":5,"nodeType":"145","messageId":"146","endLine":2,"endColumn":10},{"ruleId":"143","severity":1,"message":"147","line":3,"column":5,"nodeType":"145","messageId":"146","endLine":3,"endColumn":9},{"ruleId":"143","severity":1,"message":"148","line":4,"column":5,"nodeType":"145","messageId":"146","endLine":4,"endColumn":18},{"ruleId":"143","severity":1,"message":"149","line":5,"column":5,"nodeType":"145","messageId":"146","endLine":5,"endColumn":17},{"ruleId":"143","severity":1,"message":"150","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":273,"column":87,"nodeType":"153","messageId":"154","endLine":273,"endColumn":88},{"ruleId":"155","severity":1,"message":"156","line":46,"column":32,"nodeType":"157","messageId":"158","endLine":46,"endColumn":33,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"156","line":46,"column":57,"nodeType":"157","messageId":"158","endLine":46,"endColumn":58,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":11,"column":15,"nodeType":"163","endLine":11,"endColumn":45},{"ruleId":"161","severity":1,"message":"162","line":13,"column":15,"nodeType":"163","endLine":13,"endColumn":48},{"ruleId":"143","severity":1,"message":"164","line":64,"column":9,"nodeType":"145","messageId":"146","endLine":64,"endColumn":19},{"ruleId":"143","severity":1,"message":"150","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"165","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":143,"column":87,"nodeType":"153","messageId":"154","endLine":143,"endColumn":88},{"ruleId":"166","severity":1,"message":"167","line":248,"column":41,"nodeType":"168","messageId":"169","endLine":248,"endColumn":43},{"ruleId":"166","severity":1,"message":"170","line":255,"column":46,"nodeType":"168","messageId":"169","endLine":255,"endColumn":48},{"ruleId":"143","severity":1,"message":"171","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":20},{"ruleId":"143","severity":1,"message":"172","line":19,"column":9,"nodeType":"145","messageId":"146","endLine":19,"endColumn":13},{"ruleId":"143","severity":1,"message":"173","line":6,"column":3,"nodeType":"145","messageId":"146","endLine":6,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":84,"column":87,"nodeType":"153","messageId":"154","endLine":84,"endColumn":88},{"ruleId":"151","severity":1,"message":"152","line":153,"column":87,"nodeType":"153","messageId":"154","endLine":153,"endColumn":88},{"ruleId":"161","severity":1,"message":"162","line":226,"column":17,"nodeType":"163","endLine":226,"endColumn":69},{"ruleId":"161","severity":1,"message":"162","line":289,"column":17,"nodeType":"163","endLine":289,"endColumn":71},{"ruleId":"161","severity":1,"message":"162","line":303,"column":17,"nodeType":"163","endLine":303,"endColumn":77},{"ruleId":"161","severity":1,"message":"162","line":318,"column":17,"nodeType":"163","endLine":318,"endColumn":60},{"ruleId":"166","severity":1,"message":"170","line":350,"column":49,"nodeType":"168","messageId":"169","endLine":350,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":405,"column":23,"nodeType":"163","endLine":405,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":409,"column":23,"nodeType":"163","endLine":409,"endColumn":43},{"ruleId":"166","severity":1,"message":"170","line":428,"column":38,"nodeType":"168","messageId":"169","endLine":428,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":490,"column":23,"nodeType":"163","endLine":490,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":494,"column":23,"nodeType":"163","endLine":494,"endColumn":43},{"ruleId":"166","severity":1,"message":"170","line":513,"column":38,"nodeType":"168","messageId":"169","endLine":513,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":575,"column":23,"nodeType":"163","endLine":575,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":579,"column":23,"nodeType":"163","endLine":579,"endColumn":43},{"ruleId":"166","severity":1,"message":"170","line":598,"column":38,"nodeType":"168","messageId":"169","endLine":598,"endColumn":40},{"ruleId":"161","severity":1,"message":"162","line":660,"column":23,"nodeType":"163","endLine":660,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":664,"column":23,"nodeType":"163","endLine":664,"endColumn":43},{"ruleId":"143","severity":1,"message":"150","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"174","line":2,"column":27,"nodeType":"145","messageId":"146","endLine":2,"endColumn":31},{"ruleId":"143","severity":1,"message":"175","line":2,"column":33,"nodeType":"145","messageId":"146","endLine":2,"endColumn":37},{"ruleId":"143","severity":1,"message":"176","line":2,"column":39,"nodeType":"145","messageId":"146","endLine":2,"endColumn":42},{"ruleId":"143","severity":1,"message":"177","line":2,"column":44,"nodeType":"145","messageId":"146","endLine":2,"endColumn":49},{"ruleId":"143","severity":1,"message":"171","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":20},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'login' is assigned a value but never used.","Identifier","unusedVar","'pass' is assigned a value but never used.","'longitudeTest' is assigned a value but never used.","'latitudeTest' is assigned a value but never used.","'primary_color' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["180","181"],["182","183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleData' is assigned a value but never used.","'imageSample' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'PikaButton' is defined but never used.","'data' is assigned a value but never used.","'secondary_color' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"184","fix":"185","desc":"186"},{"messageId":"187","fix":"188","desc":"189"},{"messageId":"184","fix":"190","desc":"186"},{"messageId":"187","fix":"191","desc":"189"},"removeEscape",{"range":"192","text":"193"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"194","text":"195"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"196","text":"193"},{"range":"197","text":"195"},[1211,1212],"",[1211,1211],"\\",[1236,1237],[1236,1236]]