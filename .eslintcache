[{"D:\\PIKAPP\\pikapp-frontend\\src\\index.js":"1","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js":"2","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayoutDev.js":"3","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js":"4","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js":"5","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js":"6","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js":"7","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"8","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js":"9","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js":"10","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"11","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"12","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"13","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"14","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"15","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductViewDev.js":"16","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"17","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"18","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"19","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"20","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PikaModal.js":"21","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"22","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"23","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"24","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"25","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"26","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"27"},{"size":2155,"mtime":1614590269983,"results":"28","hashOfConfig":"29"},{"size":1283,"mtime":1614170607870,"results":"30","hashOfConfig":"29"},{"size":392,"mtime":1614170607872,"results":"31","hashOfConfig":"29"},{"size":1002,"mtime":1614170607870,"results":"32","hashOfConfig":"29"},{"size":865,"mtime":1614170607873,"results":"33","hashOfConfig":"29"},{"size":4165,"mtime":1614669116475,"results":"34","hashOfConfig":"29"},{"size":650,"mtime":1614170607873,"results":"35","hashOfConfig":"29"},{"size":656,"mtime":1614670284819,"results":"36","hashOfConfig":"29"},{"size":1089,"mtime":1614170607871,"results":"37","hashOfConfig":"29"},{"size":803,"mtime":1614170607870,"results":"38","hashOfConfig":"29"},{"size":80,"mtime":1614170607813,"results":"39","hashOfConfig":"29"},{"size":785,"mtime":1614170607813,"results":"40","hashOfConfig":"29"},{"size":831,"mtime":1614170607877,"results":"41","hashOfConfig":"29"},{"size":13136,"mtime":1614671876953,"results":"42","hashOfConfig":"29"},{"size":17410,"mtime":1614593024725,"results":"43","hashOfConfig":"29"},{"size":31063,"mtime":1614595230381,"results":"44","hashOfConfig":"29"},{"size":10645,"mtime":1614596246820,"results":"45","hashOfConfig":"29"},{"size":6226,"mtime":1614671222908,"results":"46","hashOfConfig":"29"},{"size":25067,"mtime":1614670495628,"results":"47","hashOfConfig":"29"},{"size":991,"mtime":1614671075776,"results":"48","hashOfConfig":"29"},{"size":4956,"mtime":1614670596396,"results":"49","hashOfConfig":"29"},{"size":650,"mtime":1614671023013,"results":"50","hashOfConfig":"29"},{"size":2200,"mtime":1614170607869,"results":"51","hashOfConfig":"29"},{"size":144,"mtime":1614588551922,"results":"52","hashOfConfig":"29"},{"size":335,"mtime":1614669737774,"results":"53","hashOfConfig":"29"},{"size":30,"mtime":1614586355359,"results":"54","hashOfConfig":"29"},{"size":170,"mtime":1614588624104,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1xfhsff",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\PIKAPP\\pikapp-frontend\\src\\index.js",[],["116","117"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayoutDev.js",["118"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n// import { ProductView } from \"../View/Product/ProductView\";\r\nimport { ProductView } from \"../View/Product/ProductViewDev\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className='mainLayout'>\r\n            <ProductView />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js",["119","120","121","122","123","124"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["125","126","127"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js",["128","129"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["130","131","132","133"],"import React from \"react\";\r\nimport { Row, Col, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport chevronImage from \"../../Asset/Icon/chevron_right.png\";\r\nimport removeIcon from \"../../Asset/Icon/remove_icon.png\";\r\nimport storeIcon from \"../../Asset/Icon/store_icon.png\";\r\nimport checklistIcon from \"../../Asset/Icon/checklist_icon.png\";\r\nimport frontIcon from \"../../Asset/Icon/front_icon.png\";\r\nimport cashierIcon from \"../../Asset/Icon/cashier_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport { CartModal } from \"../../Component/Modal/CartModal\";\r\nimport { cart } from \"../../index.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Loader from 'react-loader'\r\n\r\nvar options = {\r\n  lines: 13,\r\n  length: 20,\r\n  width: 10,\r\n  radius: 30,\r\n  scale: 0.25,\r\n  corners: 1,\r\n  color: '#000',\r\n  opacity: 0.25,\r\n  rotate: 0,\r\n  direction: 1,\r\n  speed: 1,\r\n  trail: 60,\r\n  fps: 20,\r\n  shadow: false,\r\n  hwaccel: false,\r\n};\r\n\r\nexport class CartView extends React.Component {\r\n  state = {\r\n    notable: \"\",\r\n    showModal: false,\r\n    currentModalTitle: \"\",\r\n    paymentOption: \"Pembayaran di kasir\",\r\n    paymentType: \"PAY_BY_CASHIER\",\r\n    biz_type: this.props.noTable.table !== \"\"? this.props.noTable.table > 0 ? \"DINE_IN\" : \"TAKE_AWAY\" : \"DINE_IN\",\r\n    eat_type: this.props.noTable.table !== \"\"? this.props.noTable.table > 0 ? \"Makan di tempat\" : \"Bungkus / Takeaway\" : \"Makan di tempat\",\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n    loadButton: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n  //  console.log(); \r\n  }\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Cara makan anda?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan di tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Bungkus / Takeaway\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar pakai apa?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cashier\",\r\n            option: \"Pembayaran di kasir\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    if (e.foodAmount > 1) {\r\n      e.foodAmount -= 1;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    e.foodAmount += 1;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDelete(e) {\r\n    let filteredCart;\r\n    cart.forEach((store) => {\r\n      let filteredStore = store.food.filter((data) => {\r\n        if(data.productId === e.productId) {\r\n          if(data.foodNote !== e.foodNote) {\r\n            return data\r\n          }\r\n        } else {\r\n          return data\r\n        }\r\n      });\r\n      store.food = filteredStore;\r\n      if(store.food.length === 0) {\r\n        filteredCart = cart.filter((filterStore) => {\r\n          return filterStore.mid !== store.mid;\r\n        });\r\n        localStorage.setItem(\"cart\",JSON.stringify(filteredCart))\r\n        let addedMerchants = []\r\n        filteredCart.forEach((cart) => {\r\n          addedMerchants.push(cart.mid)\r\n          Cookies.set(\"addedMerchants\", addedMerchants)\r\n        })\r\n        if(addedMerchants.length < 2) {\r\n          window.location.href = Cookies.get(\"lastProduct\")\r\n        } else {\r\n          window.location.reload()\r\n        }\r\n      }\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n  handleOption = (data) => {\r\n    if(this.props.noTable.table !== \"\") {\r\n      if(data == 1) {\r\n        let newUrl = window.location.search\r\n        let changeTable = newUrl.slice(0, -1)\r\n        changeTable += 0\r\n        window.location.href = changeTable \r\n      } else {\r\n        let value = Cookies.get(\"lastProduct\")\r\n        console.log(value);\r\n        let getPrevTable = value.charAt(value.length - 1)\r\n        let newUrl = window.location.search\r\n        let changeTable = newUrl.slice(0, -1)\r\n        changeTable += getPrevTable\r\n        window.location.href = changeTable \r\n      }\r\n    }\r\n    if(this.state.currentModalTitle === \"Cara makan anda?\") {\r\n      if(data === 0 || this.props.noTable.table > 0) {\r\n        this.setState({biz_type: \"DINE_IN\"})\r\n        this.setState({eat_type: \"Makan di tempat\"})\r\n      } else {\r\n        this.setState({biz_type: \"TAKE_AWAY\"})\r\n        this.setState({eat_type: \"Bungkus / Takeaway\"})\r\n      }\r\n    } else if (this.state.currentModalTitle === \"Bayar pakai apa?\") {\r\n      if(data === 0) {\r\n        this.setState({paymentType: \"PAY_BY_CASHIER\"})\r\n        this.setState({paymentOption: \"Pembayaran di kasir\"})\r\n      }\r\n    }\r\n  }\r\n  handlePayment = () => {\r\n    this.setState({loadButton: false})\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let totalAmount = 0;\r\n    let data = cart;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n\r\n    let merchantIds = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n    merchantIds = merchantIds.filter((merchant) => {\r\n      return merchant !== \"\"\r\n    })\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n\r\n    merchantIds.forEach((merchant) => {\r\n      var requestData = {\r\n        products: [{\r\n          product_id :\"\",\r\n          notes: \"\",\r\n          qty: 0\r\n        }],\r\n        payment_with: this.state.paymentType,\r\n        mid: merchant,\r\n        prices: totalAmount,\r\n        biz_type: this.state.biz_type,\r\n        table_no: \"1\"\r\n      }\r\n      requestData.products.pop()\r\n      cart.forEach((merchant) => {\r\n        let addedMerchants = Cookies.get(\"addedMerchants\")\r\n        if(addedMerchants.includes(merchant.mid)) {\r\n          merchant.food.forEach((data) => {\r\n            if(data.productId !== \"\") {\r\n              requestData.products.push({\r\n                product_id: data.productId,\r\n                notes: data.foodNote,\r\n                qty: data.foodAmount,\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n      \r\n      Axios(address + \"/txn/v1/txn-post/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"x-signature\": signature,\r\n          \"token\": auth.token,\r\n        },\r\n        method: \"POST\",\r\n        data: requestData,\r\n      })\r\n      .then((res) => {\r\n        localStorage.removeItem(\"cart\")\r\n        alert(\"Pembelian telah berhasil.\")\r\n        window.location.href = \"/status\"\r\n      })\r\n      .catch((err) => {\r\n        if(err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n        }\r\n      });\r\n    })\r\n  };\r\n\r\n  render() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let modal;\r\n    let paymentButton;\r\n    if (auth.isLoggedIn === false) {\r\n      paymentButton = (\r\n        <Link to={\"/login\"} className={\"iconButton\"}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      if(this.state.loadButton) {\r\n        paymentButton = (\r\n          <button className={\"iconButton\"} onClick={() => this.handlePayment()}>\r\n            <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n            <img src={frontIcon} alt={\"checklist\"} />\r\n          </button>\r\n        );\r\n      } else {\r\n        paymentButton = (\r\n          <Loader loaded={this.state.loadButton} options={options} className=\"spinner\"/>\r\n        )\r\n      }\r\n    }\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n          handleData = {this.handleOption}\r\n          notable = {this.props.noTable}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n\r\n    let data = cart;\r\n    let totalAmount = 0;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n    let storeList = data.filter((store) => {\r\n      if (store.mid !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    let contentView = storeList.map((store) => {\r\n      let itemListView = data.map((cartData) => {\r\n        if(cartData.mid === store.mid) {\r\n          return store.food.map((food) => {\r\n            return (\r\n              <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col xs={3} md={1}>\r\n                <img\r\n                  src={food.foodImage}\r\n                  alt={\"food\"}\r\n                  className={\"cartFoodImage\"}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContentFood\"}>{food.foodName}</p>\r\n                    <p className={\"cartContentPrice\"}>Catatan:</p>\r\n                    <p className={\"cartContentPrice\"}>{food.foodNote}</p>\r\n                    <p className={\"cartContentPrice\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(food.foodPrice)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <button\r\n                      className={\"iconButton\"}\r\n                      onClick={() => this.handleDelete(food)}\r\n                    >\r\n                      <img src={removeIcon} alt={\"remove icon\"} />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ButtonGroup className={\"cartModalButtonGroup\"}>\r\n                      <Button\r\n                        onClick={() => this.handleDecrease(food)}\r\n                        variant=\"cartModalMiniButton\"\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <Form.Control\r\n                        value={food.foodAmount}\r\n                        className=\"cartModalField\"\r\n                        disabled\r\n                      ></Form.Control>\r\n                      <Button\r\n                        onClick={() => this.handleIncrease(food)}\r\n                        variant=\"cartModalMiniButton\"\r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            )\r\n          })\r\n        }\r\n      });\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col>\r\n              <p className={\"cartTitle\"}>{store.storeName}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col xs={1} md={1}>\r\n              <img src={storeIcon} className={\"cartIcon\"} alt={\"store icon\"} />\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <p className={\"cartNote\"}>Store Location</p>\r\n                  <p className={\"cartTitle\"}>{store.storeDesc}</p>\r\n                  <p className={\"cartNote\"}>\r\n                    <b>{store.storeDistance}</b>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={2} md={3}>\r\n              <button className={\"iconButton\"}>\r\n                <img\r\n                  src={chevronImage}\r\n                  onClick={() => this.handleDetail()}\r\n                  alt={\"chevron right\"}\r\n                />\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          {itemListView}\r\n        </>\r\n      );\r\n    });\r\n\r\n    let paymentImage;\r\n    let eatImage;\r\n    if(this.state.biz_type === \"DINE_IN\") {\r\n      eatImage = dineinIcon;\r\n    } else if (this.state.biz_type === \"TAKE_AWAY\") {\r\n      eatImage = takeawayIcon;\r\n    }\r\n    if(this.state.paymentType === \"PAY_BY_CASHIER\") {\r\n      paymentImage = cashierIcon\r\n    }\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n          <Row>\r\n            <Col><p className={\"cartTitle\"}>Pilih cara makan anda</p></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs ={1} md={1}>\r\n              <img src={eatImage} class=\"cartModalImage\" alt=\"icon\" />\r\n            </Col>\r\n            <Col>{this.state.eat_type}</Col>\r\n          </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"eat-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Bayar pakai apa?</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs ={1} md={1}>\r\n                <img src={paymentImage} class=\"cartModalImage\" alt=\"icon\" />\r\n              </Col>\r\n              <Col>\r\n                {this.state.paymentOption}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"pay-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        {contentView}\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Rincian Pembayaran</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Total harga barang:</p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Diskon:</p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(totalAmount)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(0)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className={\"cartPayment\"}>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Total Belanja Kamu</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartFinalPrice\"}>\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(totalAmount)}\r\n                </p>\r\n              </Col>\r\n              <Col className={\"cartFinalButton\"}>{paymentButton}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductViewDev.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"import React from \"react\";\r\nimport { prominent } from \"color.js\";\r\nimport rgbHex from 'rgb-hex'\r\nimport { Col, Row, Image, Card, Tabs, Tab, Container } from \"react-bootstrap\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport { PikaModal } from \"../../Component/Modal/PikaModal\";\r\nimport queryString from \"query-string\";\r\nimport { cart } from \"../../index.js\";\r\nimport cartIcon from \"../../Asset/Icon/cart_icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Storeimg2 from '../../Asset/Illustration/storeimg.jpg'\r\nimport Storeimg from '../../Asset/Illustration/storeimg2.png'\r\nimport Productimg from '../../Asset/Illustration/productimg.png'\r\nimport Logopikapp from '../../Asset/Logo/logo4x.png'\r\nimport NotifIcon from '../../Asset/Icon/bell.png'\r\nimport ProfileIcon from '../../Asset/Icon/avatar.png'\r\nimport OpenHourIcon from '../../Asset/Icon/hour.png'\r\nimport CoinIcon from '../../Asset/Icon/coin.png'\r\nimport LocationIcon from '../../Asset/Icon/location.png'\r\nimport PhoneIcon from '../../Asset/Icon/phone.png'\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport ArrowIcon from '../../Asset/Icon/arrowselect.png'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n};\r\n\r\nexport class ProductView extends React.Component {\r\n  state = {\r\n    boolpage: false,\r\n    testpage: 1,\r\n    idCateg: 1,\r\n    testColor: false,\r\n    testingchange: false, //only for testing, would be remove\r\n    showModal: false,\r\n    data: {\r\n      mid: \"\",\r\n      title: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      address: \"\",\r\n      rating: \"\",\r\n      phone: \"\",\r\n      data: [\r\n        {\r\n          productId: \"\",\r\n          category: \"\",\r\n          foodName: \"\",\r\n          foodDesc: \"\",\r\n          foodPrice: 0,\r\n          foodImage: \"\",\r\n          foodExt: [\r\n            {\r\n              name: \"\",\r\n              amount: 0,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      currentData: {\r\n        productId: \"\",\r\n        category: \"\",\r\n        foodName: \"\",\r\n        foodDesc: \"\",\r\n        foodPrice: 0,\r\n        foodImage: \"\",\r\n        foodExt: [\r\n          {\r\n            name: \"\",\r\n            amount: 0,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    backColor1: \"\",\r\n    backColor2: \"\",\r\n    openSelect: false,\r\n    categName: \"All Categories\",\r\n    showcategName: [\"Rice Box\", \"Drinks\", \"Bento\"],\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'white'\r\n    Cookies.set(\"lastProduct\", window.location.href, {expires: 1})\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    var currentMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    const value = queryString.parse(window.location.search);\r\n    const mid = value.mid;\r\n    const notab = value.table || \"\"\r\n    let addressRoute = address + \"home/v1/list/product/\";\r\n    var stateData;\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    Axios(addressRoute, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\": \"PUBLIC\",\r\n        \"mid\": mid,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n    .then((res) => {\r\n        stateData = { ...this.state.data };\r\n        let responseDatas = res.data.results;\r\n        stateData.data.pop();\r\n        stateData.mid = mid;\r\n        stateData.title = currentMerchant.storeName;\r\n        stateData.image = currentMerchant.storeImage;\r\n        stateData.desc = currentMerchant.storeDistance;\r\n        stateData.address = currentMerchant.storeAdress;\r\n        stateData.rating = currentMerchant.storeRating;\r\n        stateData.phone = \"081296000823\";\r\n        stateData.notable = notab\r\n        stateData.data.push({\r\n          category: \"All Category\",\r\n          productId: \"\",\r\n          foodName: \"\",\r\n          foodDesc: \"\",\r\n          foodPrice: \"\",\r\n          foodImage: \"\",\r\n        })\r\n        responseDatas.forEach((data) => {\r\n          stateData.data.push({\r\n              productId: data.product_id,\r\n              foodName: data.product_name,\r\n              foodDesc: \"\",\r\n              foodPrice: data.product_price,\r\n              foodImage: data.product_picture[0],\r\n          })\r\n        })\r\n        prominent(Storeimg, { amount: 3 }).then((color) => {\r\n          console.log(color); // [241, 221, 63]\r\n          var merchantColor = rgbHex(color[0][0], color[0][1], color[0][2])\r\n          var productColor = rgbHex(color[2][0], color[2][1], color[2][2])\r\n          this.brightenColor(merchantColor, 70, productColor, 60)\r\n          this.setState({ data: stateData });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n        });\r\n    })\r\n    .catch((err) => {\r\n    });\r\n  }\r\n\r\n  //testing changebackground\r\n  changeBackground = () => {\r\n    this.setState({testingchange: !this.state.testingchange, testColor: true})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.testColor == true) {\r\n      if(this.state.testingchange == false) {\r\n        prominent(Storeimg, { amount: 3 }).then((color) => {\r\n          console.log(color); // [241, 221, 63]\r\n          var merchantColor = rgbHex(color[0][0], color[0][1], color[0][2])\r\n          var productColor = rgbHex(color[2][0], color[2][1], color[2][2])\r\n          this.brightenColor(merchantColor, 70, productColor, 60)\r\n        });\r\n      } else {\r\n        prominent(Storeimg2, { amount: 3 }).then((color) => {\r\n          console.log(color); // [241, 221, 63]\r\n          var merchantColor = rgbHex(color[0][0], color[0][1], color[0][2])\r\n          var productColor = rgbHex(color[2][0], color[2][1], color[2][2])\r\n          this.brightenColor(merchantColor, 70, productColor, 60)\r\n        });\r\n      }\r\n    }\r\n\r\n    this.scrolltoMenu()\r\n\r\n    if(this.state.idCateg > 1 ) {\r\n      if(this.state.boolpage == true) {\r\n        const value = queryString.parse(window.location.search);\r\n        const mid = value.mid;\r\n        let addressRoute = address + \"home/v1/list/product/\";\r\n        var stateData;\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replaceAll(\"-\", \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(addressRoute, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"token\": \"PUBLIC\",\r\n            \"mid\": mid,\r\n          },\r\n          method: \"GET\",\r\n        })\r\n        .then((res) => {\r\n            stateData = { ...this.state.data };\r\n            let responseDatas = res.data.results;\r\n            responseDatas.forEach((data) => {\r\n              stateData.data.push({\r\n                  productId: data.product_id,\r\n                  foodName: data.product_name,\r\n                  foodDesc: \"\",\r\n                  foodPrice: data.product_price,\r\n                  foodImage: data.product_picture[0],\r\n              })\r\n            })\r\n            this.setState({boolpage: false})\r\n            document.addEventListener('scroll', this.loadMoreMerchant)\r\n        })\r\n        .catch((err) => {\r\n        });\r\n      }\r\n    }\r\n  }\r\n  //testing changebackground\r\n\r\n  brightenColor = (hex, percent, hex2, percent2) => {\r\n    // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`\r\n    //backColor1\r\n    if(hex.length == 3){\r\n        hex = hex.replace(/(.)/g, '$1$1');\r\n    }\r\n\r\n    var r = parseInt(hex.substr(0, 2), 16),\r\n        g = parseInt(hex.substr(2, 2), 16),\r\n        b = parseInt(hex.substr(4, 2), 16);\r\n\r\n    let brightColor =  '#' +\r\n       ((0|(1<<8) + r + (256 - r) * percent / 100).toString(16)).substr(1) +\r\n       ((0|(1<<8) + g + (256 - g) * percent / 100).toString(16)).substr(1) +\r\n       ((0|(1<<8) + b + (256 - b) * percent / 100).toString(16)).substr(1);\r\n\r\n    //backColor2\r\n    if(hex2.length == 3){\r\n      hex2 = hex2.replace(/(.)/g, '$1$1');\r\n    }\r\n\r\n    var r2 = parseInt(hex2.substr(0, 2), 16),\r\n        g2 = parseInt(hex2.substr(2, 2), 16),\r\n        b2 = parseInt(hex2.substr(4, 2), 16);\r\n\r\n    let brightColor2 =  '#' +\r\n      ((0|(1<<8) + r2 + (256 - r2) * percent2 / 100).toString(16)).substr(1) +\r\n      ((0|(1<<8) + g2 + (256 - g2) * percent2 / 100).toString(16)).substr(1) +\r\n      ((0|(1<<8) + b2 + (256 - b2) * percent2 / 100).toString(16)).substr(1);\r\n\r\n    console.log(brightColor, brightColor2);\r\n    this.setState({backColor1: brightColor, backColor2: brightColor2, testColor: false})\r\n    document.body.style.backgroundColor = '#' + hex;\r\n  }\r\n\r\n  handlePhone = (phone) => {\r\n    phone.substring(1)\r\n    let waNumber = '62' + phone\r\n    window.location.href = `https://wa.me/${waNumber}`\r\n  }\r\n\r\n  handleDetail(data) {\r\n    this.setState({ currentData: data });\r\n    this.setState({ showModal: true });\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleCart = (data) => {\r\n    currentExt = data;\r\n  };\r\n\r\n  handleAddCart = () => {\r\n    var currentMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    const value = queryString.parse(window.location.search);\r\n    const mid = value.mid;\r\n    this.setModal(false);\r\n    var isStorePresent = false;\r\n    cart.forEach((data) => {\r\n      if (data.mid === this.state.data.mid) {\r\n        isStorePresent = true;\r\n      }\r\n    });\r\n\r\n    var isDuplicate = false;\r\n    cart.forEach((data) => {\r\n      if (data.mid === this.state.data.mid) {\r\n        data.food.forEach((food) => {\r\n          if (food.productId === this.state.currentData.productId) {\r\n            isDuplicate = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    var isFound = false\r\n    if (isStorePresent === true) {\r\n      if (isDuplicate === true) {\r\n        cart.forEach((data) => {\r\n          if(isFound === false) {\r\n            if (data.mid === this.state.data.mid) {\r\n              data.food.forEach((food) => {\r\n                if(isFound === false) {\r\n                  if(food.foodNote === currentExt.note) {\r\n                    if (food.productId === this.state.currentData.productId) {\r\n                      isFound = true\r\n                      food.foodAmount += currentExt.detailCategory[0].amount;\r\n                    }\r\n                  }\r\n                } \r\n              });\r\n            }\r\n          }\r\n        })\r\n        if(isFound === false) {\r\n          var isAdded = false\r\n          cart.forEach((data) => {\r\n              if (data.mid === this.state.data.mid) {\r\n                data.food.forEach((food) => {\r\n                  if(isAdded === false) {\r\n                    isAdded = true\r\n                    data.food.push({\r\n                      productId: this.state.currentData.productId,\r\n                      foodName: this.state.currentData.foodName,\r\n                      foodPrice: this.state.currentData.foodPrice,\r\n                      foodImage: this.state.currentData.foodImage,\r\n                      foodAmount: currentExt.detailCategory[0].amount,\r\n                      foodNote: currentExt.note,\r\n                    });\r\n                  }\r\n              });\r\n            }\r\n          })\r\n        };\r\n      } else {\r\n        cart.forEach((data) => {\r\n          if (data.mid === this.state.data.mid) {\r\n            data.food.push({\r\n              productId: this.state.currentData.productId,\r\n              foodName: this.state.currentData.foodName,\r\n              foodPrice: this.state.currentData.foodPrice,\r\n              foodImage: this.state.currentData.foodImage,\r\n              foodAmount: currentExt.detailCategory[0].amount,\r\n              foodNote: currentExt.note,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      cart.push({\r\n        mid: mid,\r\n        storeName: currentMerchant.storeName,\r\n        storeDesc: currentMerchant.storeDesc,\r\n        storeDistance: currentMerchant.distance,\r\n        food: [\r\n          {\r\n            productId: this.state.currentData.productId,\r\n            foodName: this.state.currentData.foodName,\r\n            foodPrice: this.state.currentData.foodPrice,\r\n            foodImage: this.state.currentData.foodImage,\r\n            foodAmount: currentExt.detailCategory[0].amount,\r\n            foodNote: currentExt.note,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    let addedMerchants = []\r\n    if(Cookies.get(\"addedMerchants\") === undefined) {\r\n      if(!addedMerchants.includes(mid)) {\r\n        addedMerchants.push(mid)\r\n        Cookies.set(\"addedMerchants\", addedMerchants)\r\n      }\r\n    } else {\r\n      addedMerchants = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n      if(!addedMerchants.includes(mid)) {\r\n        addedMerchants.push(mid)\r\n        Cookies.set(\"addedMerchants\", addedMerchants)\r\n      }\r\n    }\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    const date = new Date().toISOString();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"/txn/v1/cart-post/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"POST\",\r\n      data: {\r\n        mid: this.state.data.mid,\r\n        pid: this.state.currentData.productId,\r\n        qty: currentExt.detailCategory[0].amount,\r\n        notes: currentExt.note,\r\n      }\r\n    })\r\n    .then((res) => {\r\n    })\r\n    .catch((err) => {\r\n    });\r\n  };\r\n\r\n  changeMenu = () => {\r\n    this.setState({openSelect: !this.state.openSelect})\r\n  }\r\n\r\n  changeHeader = (menu) => {\r\n      this.setState({categName: menu, openSelect: false})\r\n  }\r\n\r\n  scrolltoMenu = () => {\r\n    if(this.state.categName !== \"All Categories\") {\r\n      if(this.state.openSelect == false) {\r\n        //scroll to selected menu\r\n        document.getElementById(this.state.categName).scrollIntoView({behavior: \"smooth\"})\r\n      }\r\n    }\r\n  }\r\n  \r\n  isBottom = (el) => {\r\n    return (el.getBoundingClientRect().top + 100) <= window.innerHeight\r\n  }\r\n\r\n  loadMoreMerchant = () => {\r\n    const wrappedElement = document.getElementById(this.state.showcategName[0])\r\n    if(this.state.idCateg <= this.state.testpage) {\r\n      if(this.isBottom(wrappedElement)) {\r\n        console.log('testloadmore');\r\n        this.setState({idCateg: this.state.idCateg + 1, boolpage: true})\r\n        document.removeEventListener('scroll', this.loadMoreMerchant)\r\n      }\r\n    } else {\r\n      document.removeEventListener('scroll', this.loadMoreMerchant)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <PikaModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          datas={this.state.currentData}\r\n          handleClick={this.handleAddCart}\r\n          handleData={this.handleCart}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    const storeDatas = this.state.data.data.map((data) => {\r\n      return data;\r\n    });\r\n\r\n    let categories = [];\r\n    categories = storeDatas.filter((data) => {\r\n      if (!categories.includes(data.category)) {\r\n        return categories.push(data.category);\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    let cartButton;\r\n    if (cart.length > 1) {\r\n      cartButton = (\r\n        <Link to={\"/cart?table=\" + this.state.data.notable} className={\"btn-productCart\"}>\r\n          <img src={cartIcon} alt={\"cart\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      cartButton = <></>;\r\n    }\r\n    console.log(categories);\r\n    console.log(storeDatas);\r\n    const contentView = categories.map((data) => {\r\n      if (data.category === \"All Category\") {\r\n        var allCards = storeDatas.map((cardData, index) => {\r\n          if (cardData.category === \"All Category\") {\r\n            return null;\r\n          } else {\r\n            return (\r\n              <div className='product-merchant' onClick={() => this.handleDetail(cardData)}>\r\n                <div className='product-img'>\r\n                  <img src={cardData.foodImage? cardData.foodImage : Productimg} style={{objectFit: 'cover'}} width='100%' height='100%' />\r\n                </div>\r\n\r\n                <div className='product-detail-mob'>\r\n                  <div className='product-detail'>\r\n                    <div className='product-star'>\r\n                      <img className='product-star-img' src={StarIcon} />\r\n                      <h6 className='product-star-rating'>5.0</h6>\r\n                    </div>\r\n\r\n                    <div className='product-name'>\r\n                      {cardData.foodName || <Skeleton style={{paddingTop: 10}} />}\r\n                    </div>\r\n\r\n                    <div className='product-desc'>\r\n                      {cardData.foodDesc? cardData.foodDesc : \"Product Description\"}\r\n                    </div>\r\n\r\n                    <div className='product-price'>\r\n                      {Intl.NumberFormat(\"id-ID\").format(cardData.foodPrice)}\r\n                    </div>\r\n                  </div>\r\n                  <div className='product-price-mob'>\r\n                    {Intl.NumberFormat(\"id-ID\").format(cardData.foodPrice)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        });\r\n        return allCards\r\n      } else {\r\n        // var cards = storeDatas.map((cardData) => {\r\n        //   if (data.category === cardData.category) {\r\n        //     return (\r\n        //       <div className='product-merchant' onClick={() => this.handleDetail(cardData)}>\r\n        //         <div className='product-img'>\r\n        //           <img src={cardData.foodImage? cardData.foodImage : Productimg} style={{objectFit: 'cover'}} width='100%' height='100%' />\r\n        //         </div>\r\n\r\n        //         <div className='product-detail-mob'>\r\n        //           <div className='product-detail'>\r\n        //             <div className='product-star'>\r\n        //               <img className='product-star-img' src={StarIcon} />\r\n        //               <h6 className='product-star-rating'>5.0</h6>\r\n        //             </div>\r\n\r\n        //             <div className='product-name'>\r\n        //               {cardData.foodName}\r\n        //             </div>\r\n\r\n        //             <div className='product-desc'>\r\n        //               {cardData.foodDesc}\r\n        //             </div>\r\n\r\n        //             <div className='product-price'>\r\n        //               {/* {Intl.NumberFormat(\"id-ID\", {\r\n        //                   style: \"currency\",\r\n        //                   currency: \"IDR\",\r\n        //                 }).format(cardData.foodPrice)} */}\r\n        //                 {cardData.foodPrice}\r\n        //             </div>\r\n        //           </div>\r\n        //           <div className='product-price-mob'>\r\n        //             {cardData.foodPrice}\r\n        //           </div>\r\n        //         </div>\r\n        //       </div>\r\n        //       // <Card>\r\n        //       //   <Row>\r\n        //       //     <Col xs={4} md={3}>\r\n        //       //       <Image\r\n        //       //         src={cardData.foodImage}\r\n        //       //         rounded\r\n        //       //         fluid\r\n        //       //         className=\"foodImage\"\r\n        //       //       />\r\n        //       //     </Col>\r\n        //       //     <Col xs={8} md={9}>\r\n        //       //     <Row>\r\n        //       //       <Col xs={7} md={9}>\r\n        //       //         <h5 className=\"foodTitle\">{cardData.foodName}</h5>\r\n        //       //         <p className=\"foodDesc\">{cardData.foodDesc}</p>\r\n        //       //         <div className=\"foodButton\">\r\n        //       //           <PikaButton\r\n        //       //             title=\"ADD TO CART\"\r\n        //       //             buttonStyle=\"cartPika\"\r\n        //       //             handleClick={() => this.handleDetail(cardData)}\r\n        //       //           />\r\n        //       //         </div>\r\n        //       //       </Col>\r\n        //       //       <Col xs={5} md={3}>\r\n        //       //         <h6 className=\"foodPrice\">\r\n        //       //           {Intl.NumberFormat(\"id-ID\", {\r\n        //       //             style: \"currency\",\r\n        //       //             currency: \"IDR\",\r\n        //       //           }).format(cardData.foodPrice)}\r\n        //       //         </h6>\r\n        //       //       </Col>\r\n        //       //     </Row>\r\n        //       //   </Col>\r\n        //       //   </Row>\r\n        //       // </Card>\r\n        //     );\r\n        //   } else {\r\n        //     return null;\r\n        //   }\r\n        // });\r\n        // return (\r\n        //   // <Tab eventKey={data.category} title={data.category}>\r\n        //   //   <Row>\r\n        //   //     <Col>\r\n        //   //       <h5 className=\"foodHeader\">{data.category}</h5>\r\n        //   //     </Col>\r\n        //   //   </Row>\r\n        //   //   {cards}\r\n        //   // </Tab>\r\n        //   cards\r\n        // );\r\n      }\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className='storeBanner' onClick={()=> this.changeBackground()}>\r\n            {//only for testing, would be remove\r\n              this.state.testingchange == false ?\r\n              <img src={Storeimg} style={{objectFit: 'cover'}} width='100%' height='100%' />\r\n              :\r\n              <img src={Storeimg2} style={{objectFit: 'cover'}} width='100%' height='100%' />\r\n            }\r\n            <div className='iconBanner'>\r\n              <Link to={\"/profile\"}>\r\n                <div className='profileIcon-sec'>\r\n                    <div className='profileIcon'>\r\n                        <span className='reactProfIcons'>\r\n                            <img className='profileicon-img' src={ProfileIcon} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n              </Link>\r\n\r\n              <Link to={\"/status\"}>\r\n                <div className='notifIcon-sec'>\r\n                    <div className='notifIcon'>\r\n                        <span className='reactNotifIcons'>\r\n                            <img className='notificon-img' src={NotifIcon} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n        </div>\r\n        <div className='merchant-section' style={{backgroundColor: this.state.backColor1}}>\r\n          <div className='inside-merchantSection'>\r\n            <div className='merchant-info'>\r\n                <div className='top-merchantInfo'>\r\n                    <div className='inside-topMerchantInfo'>\r\n                        <div className='merchant-title'>\r\n                            <div className='merchant-logo'>\r\n                              <img src={this.state.data.image || <Skeleton />} style={{objectFit: 'cover'}} width='100%' height='100%' />\r\n                            </div>\r\n\r\n                            <div className='merchant-name'>\r\n                                <div className='merchant-mainName'>\r\n                                  {this.state.data.title || <Skeleton style={{paddingTop: 30, width: 200}} />}\r\n                                </div>\r\n\r\n                                <div className='merchant-categName'>\r\n                                    <div className='merchant-allcateg'>Merchant Category</div>\r\n                                    <div className='merchant-starInfo'>\r\n                                        <img className='star-img' src={StarIcon} />\r\n                                        <div className='merchant-star'>{this.state.data.rating? this.state.data.rating : \"No Rating\" || <Skeleton />}</div>\r\n                                        {/* <div className='star-votes'>(50+ Upvotes)</div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='merchant-call-sec' onClick={()=> this.handlePhone(this.state.data.phone)}>\r\n                            <div className='merchant-call'>\r\n                                <span className='merchantCall-icon'>\r\n                                    <img className='merchantCall-img' src={PhoneIcon} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='bottom-merchantInfo'>\r\n                    <div className='inside-bottomMerchantInfo'>\r\n                        <div className='merchantdetail-section'>\r\n                            <div className='icon-based'>\r\n                                <img className='openhouricon' src={OpenHourIcon} />\r\n                            </div>\r\n\r\n                            <div className='detail-info'>\r\n                                <div className='top-detail-info'>Open</div>\r\n                                <div className='bottom-detail-info'>Jum (08.00 - 20.00)</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='merchantdetail-section'>\r\n                            <div className='icon-based'>\r\n                                <img className='coinicon' src={CoinIcon} />\r\n                            </div>\r\n\r\n                            <div className='detail-info'>\r\n                                <div className='top-detail-info'>$$$</div>\r\n                                <div className='bottom-detail-info'>50 K - 100 K</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='merchantdetail-section'>\r\n                            <div className='icon-based'>\r\n                                <img className='locationicon' src={LocationIcon} />\r\n                            </div>\r\n\r\n                            <div className='detail-info'>\r\n                                <div className='top-detail-info'>Store Address</div>\r\n                                <div className='bottom-detail-info'>{this.state.data.address || <Skeleton style={{paddingTop: 30, width: 100}} />}</div>\r\n                            </div>\r\n                        </div>     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='merchant-category'>\r\n                <div className='select-category'>\r\n                    <div className='listCategory'>\r\n                        <h2 className='categoryName'>{this.state.categName || <Skeleton />}</h2>\r\n\r\n                        <div className='arrow-based' onClick={()=> this.changeMenu()} >\r\n                            <img className='arrowicon' src={ArrowIcon} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                      this.state.openSelect?\r\n                      <div className='custom-options'>\r\n                          <span className='custom-optionCloser' defaultValue='Rice Box'>Closer</span>\r\n                          {\r\n                            this.state.showcategName.map((menuCategory)=> (\r\n                              <span className='custom-option' onClick={()=> this.changeHeader(menuCategory)}>{menuCategory}</span>\r\n                            ))\r\n                          }\r\n                      </div>\r\n                      :\r\n                      null\r\n                    }\r\n                </div>    \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='product-layout' style={{backgroundColor: this.state.backColor2}}>\r\n          <div className='mainproduct-sec'>\r\n            <div className='product-section'>\r\n              <h2 className='product-categ'>Rice Box</h2>\r\n\r\n              <div className='list-product'>\r\n                {contentView}\r\n              </div>\r\n              {\r\n                this.state.idCateg <= this.state.testpage?\r\n                <div id={this.state.showcategName[0]}>\r\n                  <Skeleton style={{paddingTop:100, marginTop: 10, borderRadius: 30}} />\r\n                </div>\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n\r\n            {/* <div className='product-section'>\r\n              <h2 className='product-categ'>Drinks</h2>\r\n\r\n              <div id={this.state.showcategName[1]} className='list-product'>\r\n                {contentView}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='product-section'>\r\n              <h2 className='product-categ'>Bento</h2>\r\n\r\n              <div id={this.state.showcategName[2]} className='list-product'>\r\n                {contentView}\r\n              </div>\r\n            </div> */}\r\n\r\n            <div className='pikapp-info'>\r\n              <h3 className='pikappInfo'>Digital Menu By</h3>\r\n              <img className='Logopikapp' src={Logopikapp} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {modal}\r\n        {cartButton}\r\n\r\n        {/* <Row>\r\n          <Col xs={4} md={2}>\r\n            <Image\r\n              src={this.state.data.image}\r\n              roundedCircle\r\n              className=\"storeImage\"\r\n            />\r\n          </Col>\r\n          <Col xs={8} md={4} className=\"storeColumn\">\r\n            <h2 className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n              {this.state.data.title}\r\n            </h2>\r\n            <p className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n              {this.state.data.desc}\r\n            </p>\r\n          </Col>\r\n          <Col />\r\n        </Row>\r\n        <Row />\r\n        <Row>\r\n          <Col md={12}>\r\n            <Tabs defaultActiveKey=\"All Category\">{contentView}</Tabs>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n        {cartButton} */}\r\n      </>\r\n    );\r\n  }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["165","166","167"],"import React from \"react\";\r\nimport { Col, Row, Image } from \"react-bootstrap\";\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, clientId, googleKey } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Geocode from \"react-geocode\"\r\nimport Skeleton from 'react-loading-skeleton'\r\n\r\nexport class StoreView extends React.Component {\r\n  state = {\r\n    page: 0,\r\n    size: 10,\r\n    location: \"\",\r\n    data: {\r\n      title: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      data: [\r\n        {\r\n          address: \"\",\r\n          rating: \"\",\r\n          logo: \"\",\r\n          distance: \"\",\r\n          storeId: \"\",\r\n          storeName: \"\",\r\n          storeDesc: \"\",\r\n          storeImage: \"\",\r\n        },\r\n      ],\r\n    },\r\n    idCol: 1,\r\n    testpage: 1,\r\n    boolpage: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    Cookies.set(\"homePage\", window.location.search)\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    const value = queryString.parse(window.location.search);\r\n    console.log(value);\r\n    var longitude = \"\";\r\n    var latitude = \"\";\r\n    var merchant = \"\";\r\n\r\n    if(localStorage.getItem(\"longlat\")) {\r\n      var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n      latitude = getLocation.lat\r\n      longitude = getLocation.lon\r\n    } else {\r\n      window.location.href = \"/login\"\r\n    }\r\n\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    } \r\n    else {\r\n      longitude = value.longitude || longitude\r\n      latitude = value.latitude || latitude\r\n      if(window.location.href.includes('?latitude') || window.location.href.includes('store?')) {\r\n        \r\n      } else {\r\n        window.location.href = window.location.href + `?latitude=${latitude}&longitude=${longitude}`\r\n      }\r\n    }\r\n    longitude = value.longitude || longitude\r\n    latitude = value.latitude || latitude\r\n    merchant = value.merchant;\r\n\r\n    //GOOGLE GEOCODE\r\n    // Geocode.setApiKey(googleKey)\r\n    // Geocode.fromLatLng(latitude,longitude)\r\n    // .then((res) => {\r\n    //   console.log(res.results[0].formatted_address);\r\n    //   this.setState({location: res.results[0].formatted_address})\r\n    // })\r\n    // .catch((err) => {\r\n    //   this.setState({location: \"Tidak tersedia\"})\r\n    // })\r\n\r\n    //OPENCAGE API\r\n    let opencagelonglat = latitude + \",\" + longitude\r\n    Axios.get(`https://api.opencagedata.com/geocode/v1/json?`,{\r\n        params:{\r\n            key: 'cdeab36e4fec4073b0de60ff6b595c70',\r\n            q: opencagelonglat\r\n        }\r\n    }).then((res)=> {\r\n      console.log(res.data.results[0].formatted);\r\n      this.setState({location: res.data.results[0].formatted})\r\n    }).catch((err) => {\r\n      this.setState({location: \"Tidak tersedia\"})\r\n    })\r\n\r\n    let addressRoute;\r\n    if (merchant === undefined) {\r\n      addressRoute =\r\n        address + \"home/v2/merchant/\" + longitude + \"/\" + latitude + \"/ALL/\";\r\n    } else {\r\n      addressRoute =\r\n        address +\r\n        \"home/v1/merchant/\" +\r\n        longitude +\r\n        \"/\" +\r\n        latitude +\r\n        \"/\" +\r\n        merchant\r\n        + \"/\"\r\n    }\r\n    var stateData;\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    console.log(uuid);\r\n    console.log(date);\r\n    Axios(addressRoute, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\": \"PUBLIC\",\r\n        \"category\": \"1\",\r\n      },\r\n      method: \"GET\",\r\n      params: {\r\n        page: this.state.page,\r\n        size: this.state.size\r\n      }\r\n    })\r\n      .then((res) => {\r\n          stateData = { ...this.state.data };\r\n          let responseDatas = res.data;\r\n          stateData.data.pop();\r\n          responseDatas.results.forEach((data) => {\r\n            stateData.data.push({\r\n                address: data.merchant_address,\r\n                rating: data.merchant_rating,\r\n                logo: data.merchant_logo,\r\n                distance: data.merchant_distance,\r\n                storeId: data.mid,\r\n                storeName: data.merchant_name,\r\n                storeDesc: \"\",\r\n                storeImage: data.merchant_pict,\r\n            })\r\n          })\r\n          this.setState({ data: stateData });\r\n          document.addEventListener('scroll', this.loadMoreMerchant)\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.idCol > 1) {\r\n      if(this.state.boolpage == true) {\r\n        const value = queryString.parse(window.location.search);\r\n        var longitude = \"\";\r\n        var latitude = \"\";\r\n        var merchant = \"\";\r\n        longitude = value.longitude\r\n        latitude = value.latitude\r\n        merchant = value.merchant;\r\n\r\n        let addressRoute;\r\n        if (merchant === undefined) {\r\n          addressRoute =\r\n            address + \"home/v2/merchant/\" + longitude + \"/\" + latitude + \"/ALL/\";\r\n        } else {\r\n          addressRoute =\r\n            address +\r\n            \"home/v1/merchant/\" +\r\n            longitude +\r\n            \"/\" +\r\n            latitude +\r\n            \"/\" +\r\n            merchant\r\n            + \"/\"\r\n        }\r\n        var stateData;\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replaceAll(\"-\", \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(addressRoute, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n            \"token\": \"PUBLIC\",\r\n            \"category\": \"1\",\r\n          },\r\n          method: \"GET\",\r\n          params: {\r\n            page: this.state.page,\r\n            size: this.state.size\r\n          }\r\n        })\r\n          .then((res) => {\r\n              stateData = { ...this.state.data };\r\n              let responseDatas = res.data;\r\n              responseDatas.results.forEach((data) => {\r\n                stateData.data.push({\r\n                    address: data.merchant_address,\r\n                    rating: data.merchant_rating,\r\n                    logo: data.merchant_logo,\r\n                    distance: data.merchant_distance,\r\n                    storeId: data.mid,\r\n                    storeName: data.merchant_name,\r\n                    storeDesc: \"\",\r\n                    storeImage: data.merchant_pict,\r\n                })\r\n              })\r\n              console.log(this.state.idCol);\r\n              console.log(this.state.data.data);\r\n              this.setState({boolpage: false})\r\n              document.addEventListener('scroll', this.loadMoreMerchant)\r\n          })\r\n          .catch((err) => {\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  storeClick = (e) => {\r\n    var currentMerchant = {\r\n      mid: \"\",\r\n      storeName: \"\",\r\n      storeDesc: \"\",\r\n      distance: \"\",\r\n      storeImage: \"\",\r\n      storeAdress: \"\",\r\n      storeRating: \"\",\r\n    };\r\n    currentMerchant.mid = e.storeId;\r\n    currentMerchant.storeName = e.storeName;\r\n    currentMerchant.storeDesc = \"Desc\";\r\n    currentMerchant.distance = e.distance;\r\n    currentMerchant.storeImage = e.storeImage;\r\n    currentMerchant.storeAdress = e.address;\r\n    currentMerchant.storeRating = e.rating;\r\n\r\n    Cookies.set(\"currentMerchant\", currentMerchant, {expires: 1})\r\n  }\r\n  handleDetail(data) {\r\n    return <Link to={\"/status\"}></Link>;\r\n  }\r\n\r\n  isBottom = (el) => {\r\n    return (el.getBoundingClientRect().top + 100) <= window.innerHeight\r\n  }\r\n\r\n  loadMoreMerchant = () => {\r\n    const wrappedElement = document.getElementById(\"idCol\")\r\n    if(this.state.idCol <= this.state.testpage) {\r\n      if(this.isBottom(wrappedElement)) {\r\n        console.log('testloadmore');\r\n        this.setState({idCol: this.state.idCol + 1, boolpage: true})\r\n        document.removeEventListener('scroll', this.loadMoreMerchant)\r\n      }\r\n    } else {\r\n      document.removeEventListener('scroll', this.loadMoreMerchant)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('scroll', this.loadMoreMerchant)\r\n  }\r\n\r\n\r\n  render() {\r\n    const storeDatas = this.state.data.data.map((data) => {\r\n      return data;\r\n    });\r\n    var allCards = storeDatas.map((cardData) => {\r\n      return (\r\n        <Row>\r\n          <Col xs={3} md={3}>\r\n            <Image\r\n              src={cardData.storeImage}\r\n              rounded\r\n              fluid\r\n              className=\"storeImage\"\r\n            />\r\n          </Col>\r\n          <Col xs={9} md={6}>\r\n            <Row>\r\n              <Col xs={7} md={9}>\r\n                <h5 className=\"foodTitle\">{cardData.storeName}</h5>\r\n                <p className=\"storeDesc\">{cardData.storeDesc}</p>\r\n                <div className=\"foodButton\">\r\n                  <Link\r\n                    className={\"btn-cartPika\"}\r\n                    to={\"/store?mid=\" + cardData.storeId}\r\n                    style={{\r\n                      padding: 8,\r\n                      textDecoration: \"none\",\r\n                      color: \"black\",\r\n                    }}\r\n                    onClick={()=> this.storeClick(cardData)}\r\n                  >\r\n                    Go to store\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs={4} md={1}/>\r\n          <Col xs={0} md={4} className=\"storeColumn\">\r\n            <h6 className=\"\" style={{ textAlign: \"left\" }}>\r\n              Lokasi:\r\n            </h6>\r\n            <p className=\"storeLabel\" style={{ textAlign: \"left\" }}>\r\n              {this.state.location || <Skeleton />}\r\n            </p>\r\n          </Col>\r\n          <Col />\r\n        </Row>\r\n        <Row />\r\n        <Row>\r\n          <div>\r\n            <Col md={12}>{allCards || <Skeleton style={{width:100}} />}</Col>\r\n            {\r\n              this.state.idCol <= this.state.testpage ?\r\n              <div id={\"idCol\"}>\r\n                <Skeleton style={{paddingTop: 100, marginTop: 10, marginLeft: 10, width: \"95%\"}} />\r\n              </div>\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n        </Row>\r\n        <Row></Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["168","169","170","171"],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PikaModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["172"],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":22},{"ruleId":"177","severity":1,"message":"181","line":4,"column":29,"nodeType":"179","messageId":"180","endLine":4,"endColumn":38},{"ruleId":"177","severity":1,"message":"182","line":10,"column":20,"nodeType":"179","messageId":"180","endLine":10,"endColumn":31},{"ruleId":"177","severity":1,"message":"183","line":22,"column":10,"nodeType":"179","messageId":"180","endLine":22,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":35,"column":6,"nodeType":"186","endLine":35,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":49,"column":29,"nodeType":"190","messageId":"191","endLine":49,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":91,"column":32,"nodeType":"190","messageId":"191","endLine":91,"endColumn":34},{"ruleId":"177","severity":1,"message":"192","line":5,"column":5,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"193","line":9,"column":5,"nodeType":"179","messageId":"180","endLine":9,"endColumn":17},{"ruleId":"177","severity":1,"message":"194","line":12,"column":5,"nodeType":"179","messageId":"180","endLine":12,"endColumn":18},{"ruleId":"177","severity":1,"message":"195","line":2,"column":22,"nodeType":"179","messageId":"180","endLine":2,"endColumn":26},{"ruleId":"177","severity":1,"message":"181","line":6,"column":29,"nodeType":"179","messageId":"180","endLine":6,"endColumn":38},{"ruleId":"196","severity":1,"message":"197","line":110,"column":52,"nodeType":"198","messageId":"199","endLine":110,"endColumn":54},{"ruleId":"188","severity":1,"message":"189","line":141,"column":15,"nodeType":"190","messageId":"191","endLine":141,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":320,"column":41,"nodeType":"198","messageId":"199","endLine":320,"endColumn":43},{"ruleId":"196","severity":1,"message":"200","line":327,"column":46,"nodeType":"198","messageId":"199","endLine":327,"endColumn":48},{"ruleId":"177","severity":1,"message":"201","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"202","line":4,"column":15,"nodeType":"179","messageId":"180","endLine":4,"endColumn":18},{"ruleId":"177","severity":1,"message":"203","line":4,"column":20,"nodeType":"179","messageId":"180","endLine":4,"endColumn":25},{"ruleId":"177","severity":1,"message":"204","line":4,"column":27,"nodeType":"179","messageId":"180","endLine":4,"endColumn":31},{"ruleId":"177","severity":1,"message":"205","line":4,"column":33,"nodeType":"179","messageId":"180","endLine":4,"endColumn":37},{"ruleId":"177","severity":1,"message":"206","line":4,"column":39,"nodeType":"179","messageId":"180","endLine":4,"endColumn":42},{"ruleId":"177","severity":1,"message":"207","line":4,"column":44,"nodeType":"179","messageId":"180","endLine":4,"endColumn":53},{"ruleId":"177","severity":1,"message":"208","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"177","severity":1,"message":"209","line":29,"column":8,"nodeType":"179","messageId":"180","endLine":29,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":181,"column":29,"nodeType":"190","messageId":"191","endLine":181,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":182,"column":35,"nodeType":"190","messageId":"191","endLine":182,"endColumn":37},{"ruleId":"188","severity":1,"message":"189","line":202,"column":30,"nodeType":"190","messageId":"191","endLine":202,"endColumn":32},{"ruleId":"188","severity":1,"message":"189","line":246,"column":19,"nodeType":"190","messageId":"191","endLine":246,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":260,"column":20,"nodeType":"190","messageId":"191","endLine":260,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":457,"column":32,"nodeType":"190","messageId":"191","endLine":457,"endColumn":34},{"ruleId":"196","severity":1,"message":"200","line":525,"column":47,"nodeType":"198","messageId":"199","endLine":525,"endColumn":49},{"ruleId":"210","severity":1,"message":"211","line":534,"column":19,"nodeType":"212","endLine":534,"endColumn":140},{"ruleId":"210","severity":1,"message":"211","line":540,"column":23,"nodeType":"212","endLine":540,"endColumn":74},{"ruleId":"188","severity":1,"message":"189","line":660,"column":40,"nodeType":"190","messageId":"191","endLine":660,"endColumn":42},{"ruleId":"210","severity":1,"message":"211","line":661,"column":15,"nodeType":"212","endLine":661,"endColumn":93},{"ruleId":"210","severity":1,"message":"211","line":663,"column":15,"nodeType":"212","endLine":663,"endColumn":94},{"ruleId":"210","severity":1,"message":"211","line":670,"column":29,"nodeType":"212","endLine":670,"endColumn":82},{"ruleId":"210","severity":1,"message":"211","line":680,"column":29,"nodeType":"212","endLine":680,"endColumn":78},{"ruleId":"210","severity":1,"message":"211","line":694,"column":31,"nodeType":"212","endLine":694,"endColumn":138},{"ruleId":"210","severity":1,"message":"211","line":705,"column":41,"nodeType":"212","endLine":705,"endColumn":84},{"ruleId":"210","severity":1,"message":"211","line":715,"column":37,"nodeType":"212","endLine":715,"endColumn":89},{"ruleId":"210","severity":1,"message":"211","line":725,"column":33,"nodeType":"212","endLine":725,"endColumn":84},{"ruleId":"210","severity":1,"message":"211","line":735,"column":33,"nodeType":"212","endLine":735,"endColumn":76},{"ruleId":"210","severity":1,"message":"211","line":745,"column":33,"nodeType":"212","endLine":745,"endColumn":84},{"ruleId":"210","severity":1,"message":"211","line":762,"column":29,"nodeType":"212","endLine":762,"endColumn":74},{"ruleId":"210","severity":1,"message":"211","line":819,"column":15,"nodeType":"212","endLine":819,"endColumn":62},{"ruleId":"177","severity":1,"message":"181","line":5,"column":29,"nodeType":"179","messageId":"180","endLine":5,"endColumn":38},{"ruleId":"177","severity":1,"message":"213","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":15},{"ruleId":"188","severity":1,"message":"189","line":169,"column":30,"nodeType":"190","messageId":"191","endLine":169,"endColumn":32},{"ruleId":"196","severity":1,"message":"200","line":345,"column":49,"nodeType":"198","messageId":"199","endLine":345,"endColumn":51},{"ruleId":"196","severity":1,"message":"200","line":423,"column":38,"nodeType":"198","messageId":"199","endLine":423,"endColumn":40},{"ruleId":"196","severity":1,"message":"200","line":508,"column":38,"nodeType":"198","messageId":"199","endLine":508,"endColumn":40},{"ruleId":"196","severity":1,"message":"200","line":593,"column":38,"nodeType":"198","messageId":"199","endLine":593,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":5,"column":1,"nodeType":"216","endLine":14,"endColumn":2},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'MainNavigation' is defined but never used.","Identifier","unusedVar","'googleKey' is defined but never used.","'setmerchant' is assigned a value but never used.","'longlat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.coords'. Either include it or remove the dependency array.","ArrayExpression",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'Fade' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'Col' is defined but never used.","'Row' is defined but never used.","'Image' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Container' is defined but never used.","'PikaButton' is defined but never used.","'LazyLoad' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Geocode' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},"Update the dependencies array to be: [props.coords]",{"range":"222","text":"223"},[1040,1042],"[props.coords]"]