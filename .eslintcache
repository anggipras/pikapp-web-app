[{"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\index.js":"1","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartLayout.js":"2","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StatusLayout.js":"3","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\AuthLayout.js":"4","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MerchantQR.js":"5","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"6","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StoreLayout.js":"7","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\DetailNavigation.js":"8","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MainNavigation.js":"9","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"10","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"11","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"12","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"13","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"14","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"15","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"16","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"17","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"18","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\PikaModal.js":"19","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"20","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"21","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"22","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"23","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"24","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"25","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\App.js":"26","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Store.js":"27","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProductLayout.js":"28","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartLayoutDev.js":"29","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Product\\ProductView.js":"30","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartViewDev.js":"31","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js":"32","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js":"33","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\CartModalDev.js":"34","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js":"35","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js":"36","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js":"37","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js":"38","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js":"39","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js":"40","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ResetPinLayout.js":"41","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js":"42","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js":"43","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js":"44"},{"size":485,"mtime":1617683991453,"results":"45","hashOfConfig":"46"},{"size":532,"mtime":1618198598860,"results":"47","hashOfConfig":"46"},{"size":865,"mtime":1614519902133,"results":"48","hashOfConfig":"46"},{"size":2443,"mtime":1618198598859,"results":"49","hashOfConfig":"46"},{"size":3955,"mtime":1618198598861,"results":"50","hashOfConfig":"46"},{"size":656,"mtime":1614927845136,"results":"51","hashOfConfig":"46"},{"size":646,"mtime":1617681026548,"results":"52","hashOfConfig":"46"},{"size":860,"mtime":1617683991420,"results":"53","hashOfConfig":"46"},{"size":1089,"mtime":1614519902133,"results":"54","hashOfConfig":"46"},{"size":80,"mtime":1614519902089,"results":"55","hashOfConfig":"46"},{"size":785,"mtime":1614519902089,"results":"56","hashOfConfig":"46"},{"size":30644,"mtime":1618567166499,"results":"57","hashOfConfig":"46"},{"size":6334,"mtime":1618493645289,"results":"58","hashOfConfig":"46"},{"size":831,"mtime":1614519902137,"results":"59","hashOfConfig":"46"},{"size":25073,"mtime":1618479410369,"results":"60","hashOfConfig":"46"},{"size":13372,"mtime":1618216412570,"results":"61","hashOfConfig":"46"},{"size":14419,"mtime":1618495478375,"results":"62","hashOfConfig":"46"},{"size":991,"mtime":1614927845132,"results":"63","hashOfConfig":"46"},{"size":5545,"mtime":1617683991414,"results":"64","hashOfConfig":"46"},{"size":650,"mtime":1614927845134,"results":"65","hashOfConfig":"46"},{"size":2200,"mtime":1614519902133,"results":"66","hashOfConfig":"46"},{"size":246,"mtime":1618476021711,"results":"67","hashOfConfig":"46"},{"size":30,"mtime":1614927845139,"results":"68","hashOfConfig":"46"},{"size":1799,"mtime":1618198598862,"results":"69","hashOfConfig":"46"},{"size":877,"mtime":1617683991426,"results":"70","hashOfConfig":"46"},{"size":2015,"mtime":1618568578504,"results":"71","hashOfConfig":"46"},{"size":169,"mtime":1618198598863,"results":"72","hashOfConfig":"46"},{"size":274,"mtime":1617683991424,"results":"73","hashOfConfig":"46"},{"size":970,"mtime":1617683991418,"results":"74","hashOfConfig":"46"},{"size":43188,"mtime":1618396490316,"results":"75","hashOfConfig":"46"},{"size":23678,"mtime":1617683991436,"results":"76","hashOfConfig":"46"},{"size":19359,"mtime":1618565023082,"results":"77","hashOfConfig":"46"},{"size":26358,"mtime":1617683991411,"results":"78","hashOfConfig":"46"},{"size":5098,"mtime":1618198598858,"results":"79","hashOfConfig":"46"},{"size":6601,"mtime":1618568193263,"results":"80","hashOfConfig":"46"},{"size":10774,"mtime":1618568257292,"results":"81","hashOfConfig":"46"},{"size":12334,"mtime":1618568216482,"results":"82","hashOfConfig":"46"},{"size":11033,"mtime":1618568161534,"results":"83","hashOfConfig":"46"},{"size":6596,"mtime":1618568177808,"results":"84","hashOfConfig":"46"},{"size":603,"mtime":1618556399966,"results":"85","hashOfConfig":"46"},{"size":420,"mtime":1618557125934,"results":"86","hashOfConfig":"46"},{"size":1044,"mtime":1618558405709,"results":"87","hashOfConfig":"46"},{"size":7154,"mtime":1618568134173,"results":"88","hashOfConfig":"46"},{"size":6566,"mtime":1618568129144,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"eto61a",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\index.js",[],["187","188"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MerchantQR.js",["189","190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport { geolocated } from \"react-geolocated\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { address, clientId } from \"../Asset/Constant/APIConstant\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MerchantResto = (props) => {\r\n  // const [merchant, setmerchant] = useState([\r\n  //   {\r\n  //     address: \"\",\r\n  //     rating: \"\",\r\n  //     logo: \"\",\r\n  //     distance: \"\",\r\n  //     storeId: \"\",\r\n  //     storeName: \"\",\r\n  //     storeDesc: \"\",\r\n  //     storeImage: \"\",\r\n  //   },\r\n  // ]);\r\n  const [longlatad, setlonglat] = useState(\"\");\r\n  const [page, setpage] = useState(0);\r\n  const [pageCond, setpageCond] = useState(false);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (props.coords) {\r\n      let latitude = props.coords.latitude;\r\n      let longitude = props.coords.longitude;\r\n      let longlat = { lat: latitude, lon: longitude };\r\n      console.log(latitude, longitude);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat));\r\n    } else {\r\n      setlonglat(\"getloc succeed\")\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.coords) {\r\n      let latitude = props.coords.latitude;\r\n      let longitude = props.coords.longitude;\r\n      let longlat = { lat: latitude, lon: longitude };\r\n      console.log(latitude, longitude);\r\n      console.log(longlatad);\r\n      localStorage.setItem(\"longlat\", JSON.stringify(longlat));\r\n      getMerchantData(latitude, longitude)\r\n    }\r\n  });\r\n\r\n  const getMerchantData = (lat, lon) => {\r\n    let addressRoute =\r\n      address + \"home/v2/merchant/\" + lon + \"/\" + lat + \"/ALL/\";\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n\r\n    Axios(addressRoute, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"token\": \"PUBLIC\",\r\n        \"category\": \"1\",\r\n      },\r\n      method: \"GET\",\r\n      params: {\r\n        page: page,\r\n        size: 6\r\n      }\r\n    })\r\n      .then((res) => {\r\n        let responseDatas = res.data.results;\r\n        responseDatas.forEach((dataMerch, indexMerch) => {\r\n          if (dataMerch.mid === props.match.params.mid) {\r\n            // condition where api response and params at url match\r\n            let stateData = []\r\n            stateData.push(dataMerch)\r\n            var currentMerchant = {\r\n              mid: \"\",\r\n              storeName: \"\",\r\n              storeDesc: \"\",\r\n              distance: \"\",\r\n              storeImage: \"\",\r\n              storeAdress: \"\",\r\n              storeRating: \"\",\r\n            };\r\n            currentMerchant.mid = dataMerch.mid;\r\n            currentMerchant.storeName = dataMerch.merchant_name;\r\n            currentMerchant.storeDesc = \"Desc\";\r\n            currentMerchant.distance = dataMerch.merchant_distance;\r\n            currentMerchant.storeImage = dataMerch.merchant_pict;\r\n            currentMerchant.storeAdress = dataMerch.merchant_address;\r\n            currentMerchant.storeRating = dataMerch.merchant_rating;\r\n            Cookies.set(\"currentMerchant\", currentMerchant, { expires: 1 });\r\n            localStorage.setItem('selectedMerchant', JSON.stringify(stateData))\r\n            history.push(\r\n              \"/store?mid=\" +\r\n              dataMerch.mid +\r\n              \"&table=\" +\r\n              props.match.params.notab\r\n            );\r\n          } else {\r\n            if (indexMerch === responseDatas.length-1) {\r\n              let nextPage = page\r\n              nextPage++\r\n              setpage(nextPage)\r\n            }\r\n          }\r\n        })\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default geolocated({\r\n  positionOptions: {\r\n    enableHighAccuracy: false,\r\n  },\r\n  userDecisionTimeout: 5000,\r\n})(MerchantResto);\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\StoreLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\DetailNavigation.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\MainNavigation.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["192","193","194"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["210","211","212","213"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Auth\\FormView.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["214","215"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\PikaModal.js",[],["216","217"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["218"],"const INITIAL_STATE = {\r\n    buttonLoad: true,\r\n    validQTY: 0,\r\n    openSelect: false,\r\n    foodCateg: '',\r\n    checkboxes: [],\r\n    checkboxesTotal: [],\r\n    mandatCheckCond: false,\r\n    mandatCheck: false,\r\n    radiobutton: [],\r\n    mandatRadioCond: false,\r\n    mandatRadio: false,\r\n    totalAmountProd: 0,\r\n    openMenuCart: false\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return { ...state, buttonLoad: false }\r\n        case \"DONELOAD\":\r\n            return { ...state, buttonLoad: true }\r\n        case \"VALIDATIONQTY\":\r\n            return { ...state, validQTY: action.payload }\r\n        case \"OPENSELECT\":\r\n            return { ...state, openSelect: action.payload }\r\n        case \"FOODCATEG\":\r\n            return { ...state, foodCateg: action.payload }\r\n        case \"CHECKBOXES\":\r\n            return { ...state, checkboxes: action.payload }\r\n        case \"MANDATCHECKCOND\":\r\n            return { ...state, mandatCheckCond: action.payload }\r\n        case \"MANDATCHECK\":\r\n            return { ...state, mandatCheck: action.payload }\r\n        case \"COUNTCHECKBOX\":\r\n            return { ...state, checkboxesTotal: action.payload }\r\n        case \"RADIOBUTTON\":\r\n            return { ...state, radiobutton: action.payload }\r\n        case \"MANDATRADIOCOND\":\r\n            return { ...state, mandatRadioCond: action.payload }\r\n        case \"MANDATRADIO\":\r\n            return { ...state, mandatRadio: action.payload }\r\n        case \"COUNTTOTAL\":\r\n            return { ...state, totalAmountProd: action.payload }\r\n        case \"EDITCART\":\r\n            return { ...state, openMenuCart: action.payload }\r\n        case \"DEFAULTSTATE\":\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\App.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Store.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ProductLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\CartLayoutDev.js",[],["219","220"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Product\\ProductView.js",["221","222","223","224","225"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\Cart\\CartViewDev.js",["226","227","228","229"],"import React from \"react\";\r\nimport { Row, Col, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport chevronImage from \"../../Asset/Icon/chevron_right.png\";\r\nimport removeIcon from \"../../Asset/Icon/remove_icon.png\";\r\nimport storeIcon from \"../../Asset/Icon/store_icon.png\";\r\nimport checklistIcon from \"../../Asset/Icon/checklist_icon.png\";\r\nimport frontIcon from \"../../Asset/Icon/front_icon.png\";\r\nimport cashierIcon from \"../../Asset/Icon/cashier_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport { CartModal } from \"../../Component/Modal/CartModal\";\r\nimport { cart } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\nimport Loader from 'react-loader'\r\nimport MenuDetail from '../../Component/Menu/MenuDetail'\r\nimport { connect } from \"react-redux\";\r\nimport { EditMenuCart } from '../../Redux/Actions'\r\n\r\nvar options = {\r\n  lines: 13,\r\n  length: 20,\r\n  width: 10,\r\n  radius: 30,\r\n  scale: 0.25,\r\n  corners: 1,\r\n  color: '#000',\r\n  opacity: 0.25,\r\n  rotate: 0,\r\n  direction: 1,\r\n  speed: 1,\r\n  trail: 60,\r\n  fps: 20,\r\n  shadow: false,\r\n  hwaccel: false,\r\n};\r\n\r\nvar currentExt = {\r\n  detailCategory: [\r\n    {\r\n      name: \"\",\r\n      amount: 0,\r\n    },\r\n  ],\r\n  note: \"\",\r\n  foodCategory: '',\r\n  listcheckbox: [],\r\n  listradio: []\r\n};\r\n\r\nclass CartView extends React.Component {\r\n  state = {\r\n    notable: \"\",\r\n    showModal: false,\r\n    currentModalTitle: \"\",\r\n    paymentOption: \"Pembayaran di kasir\",\r\n    paymentType: \"PAY_BY_CASHIER\",\r\n    biz_type: this.props.noTable.table !== \"\" ? this.props.noTable.table > 0 ? \"DINE_IN\" : \"TAKE_AWAY\" : \"DINE_IN\",\r\n    eat_type: this.props.noTable.table !== \"\" ? this.props.noTable.table > 0 ? \"Makan di tempat\" : \"Bungkus / Takeaway\" : \"Makan di tempat\",\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n    loadButton: true,\r\n    showMenuDet: false,\r\n    filteredCart: [],\r\n    currentData: {},\r\n    themid: '',\r\n    indexEdit: 0,\r\n  };\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Cara makan anda?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan di tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Bungkus / Takeaway\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar pakai apa?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cashier\",\r\n            option: \"Pembayaran di kasir\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    if (e.foodAmount > 1) {\r\n      e.foodAmount -= 1;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    e.foodAmount += 1;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDelete(e, ind, mid) {\r\n    let filteredCart;\r\n    let addedMerchants = []\r\n    let newAllCart = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === mid) {\r\n        let filteredStore = store.food.filter((data, index) => {\r\n          return index !== ind\r\n        })\r\n\r\n        if (filteredStore.length === 0) {\r\n          filteredCart = cart.filter((filterStore) => {\r\n            return filterStore.mid !== store.mid;\r\n          });\r\n          localStorage.setItem(\"cart\", JSON.stringify(filteredCart))\r\n          filteredCart.forEach((cart) => {\r\n            addedMerchants.push(cart.mid)\r\n            Cookies.set(\"addedMerchants\", addedMerchants)\r\n          })\r\n        } else {\r\n          let newFilter = store.food\r\n          newFilter = []\r\n          filteredStore.forEach((val) => {\r\n            console.log(val);\r\n            newFilter.push(val)\r\n          })\r\n          store.food = newFilter\r\n          newAllCart.push(store)\r\n        }\r\n      } else {\r\n        newAllCart.push(store)\r\n      }\r\n    });\r\n\r\n    if (newAllCart.length < 2) {\r\n      cart.splice(1)\r\n      localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n      window.history.back()\r\n      // window.location.href = Cookies.get(\"lastProduct\")\r\n    } else {\r\n      let filterMerchantCart = newAllCart.filter(valueCart=> {\r\n        return valueCart.mid === mid\r\n      })\r\n      localStorage.setItem(\"cart\", JSON.stringify(newAllCart))\r\n      if (filterMerchantCart.length) {\r\n        window.location.reload()\r\n      } else {\r\n        window.history.back()\r\n      }\r\n    }\r\n\r\n    // cart.forEach((store) => {\r\n    //   let filteredStore = store.food.filter((data) => {\r\n    //     if (data.productId === e.productId) {\r\n    //       if (data.foodNote !== e.foodNote) {\r\n    //         return data\r\n    //       }\r\n    //     } else {\r\n    //       return data\r\n    //     }\r\n    //   });\r\n    //   console.log(filteredStore);\r\n    //   store.food = filteredStore;\r\n    //   if (store.food.length === 0) {\r\n    //     filteredCart = cart.filter((filterStore) => {\r\n    //       return filterStore.mid !== store.mid;\r\n    //     });\r\n    //     console.log(filteredCart);\r\n    //     localStorage.setItem(\"cart\", JSON.stringify(filteredCart))\r\n    //     let addedMerchants = []\r\n    //     filteredCart.forEach((cart) => {\r\n    //       addedMerchants.push(cart.mid)\r\n    //       Cookies.set(\"addedMerchants\", addedMerchants)\r\n    //     })\r\n    //     console.log(addedMerchants);\r\n    //     if (addedMerchants.length < 2) {\r\n    //       window.history.back()\r\n    //       // window.location.href = Cookies.get(\"lastProduct\")\r\n    //     } else {\r\n    //       console.log('ntaps bro');\r\n    //       window.location.reload()\r\n    //     }\r\n    //   } else {\r\n    //     console.log('ntaps mantaapp');\r\n    //   }\r\n    // });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleOption = (data) => {\r\n    if (this.props.noTable.table !== \"\") {\r\n      if (data == 1) {\r\n        let newUrl = window.location.search\r\n        let changeTable = newUrl.slice(0, -1)\r\n        changeTable += 0\r\n        window.location.href = changeTable\r\n      } else {\r\n        let value = Cookies.get(\"lastProduct\")\r\n        console.log(value);\r\n        let getPrevTable = value.charAt(value.length - 1)\r\n        let newUrl = window.location.search\r\n        let changeTable = newUrl.slice(0, -1)\r\n        changeTable += getPrevTable\r\n        window.location.href = changeTable\r\n      }\r\n    }\r\n    if (this.state.currentModalTitle === \"Cara makan anda?\") {\r\n      if (data === 0 || this.props.noTable.table > 0) {\r\n        this.setState({ biz_type: \"DINE_IN\" })\r\n        this.setState({ eat_type: \"Makan di tempat\" })\r\n      } else {\r\n        this.setState({ biz_type: \"TAKE_AWAY\" })\r\n        this.setState({ eat_type: \"Bungkus / Takeaway\" })\r\n      }\r\n    } else if (this.state.currentModalTitle === \"Bayar pakai apa?\") {\r\n      if (data === 0) {\r\n        this.setState({ paymentType: \"PAY_BY_CASHIER\" })\r\n        this.setState({ paymentOption: \"Pembayaran di kasir\" })\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePayment = () => {\r\n    this.setState({ loadButton: false })\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n      window.location.href = \"/login\"\r\n    }\r\n    let totalAmount = 0;\r\n    let data = cart;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n\r\n    let merchantIds = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n    merchantIds = merchantIds.filter((merchant) => {\r\n      return merchant !== \"\"\r\n    })\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n\r\n    merchantIds.forEach((merchant) => {\r\n      var requestData = {\r\n        products: [{\r\n          product_id: \"\",\r\n          notes: \"\",\r\n          qty: 0\r\n        }],\r\n        payment_with: this.state.paymentType,\r\n        mid: merchant,\r\n        prices: totalAmount,\r\n        biz_type: this.state.biz_type,\r\n        table_no: \"1\"\r\n      }\r\n      requestData.products.pop()\r\n      cart.forEach((merchant) => {\r\n        let addedMerchants = Cookies.get(\"addedMerchants\")\r\n        if (addedMerchants.includes(merchant.mid)) {\r\n          merchant.food.forEach((data) => {\r\n            if (data.productId !== \"\") {\r\n              requestData.products.push({\r\n                product_id: data.productId,\r\n                notes: data.foodNote,\r\n                qty: data.foodAmount,\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      Axios(address + \"/txn/v1/txn-post/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"x-signature\": signature,\r\n          \"token\": auth.token,\r\n        },\r\n        method: \"POST\",\r\n        data: requestData,\r\n      })\r\n        .then((res) => {\r\n          localStorage.removeItem(\"cart\")\r\n          alert(\"Pembelian telah berhasil.\")\r\n          window.location.href = \"/status\"\r\n        })\r\n        .catch((err) => {\r\n          if (err.response.data !== undefined) {\r\n            alert(err.response.data.err_message)\r\n            this.setState({ loadButton: true })\r\n          }\r\n        });\r\n    })\r\n  };\r\n\r\n  newListCheck = (food) => {\r\n    let newlistArr = ''\r\n    food.foodListCheckbox.forEach((val) => {\r\n      val.forEach((val2) => {\r\n        return newlistArr += `${val2.name},`\r\n      })\r\n    })\r\n    return <p>{newlistArr}</p>\r\n  }\r\n\r\n  newListRadio = (food) => {\r\n    let newlistArr = ''\r\n    food.foodListRadio.forEach((val) => {\r\n      val.forEach((val2) => {\r\n        return newlistArr += `${val2.name},`\r\n      })\r\n    })\r\n    return <p>{newlistArr}</p>\r\n  }\r\n\r\n  onEditCart = (ind, mid) => {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === mid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === ind\r\n        })\r\n      }\r\n    });\r\n\r\n    var objFilteredCart = {\r\n      productId: filteredStore[0].productId,\r\n      foodName: filteredStore[0].foodName,\r\n      foodDesc: \"\",\r\n      foodCategory: filteredStore[0].foodCategory,\r\n      foodPrice: filteredStore[0].foodPrice,\r\n      foodImage: filteredStore[0].foodImage,\r\n      foodNote: filteredStore[0].foodNote,\r\n      foodListCheckbox: filteredStore[0].foodListCheckbox,\r\n      foodListRadio: filteredStore[0].foodListRadio,\r\n      foodExt: [\r\n        {\r\n          name: \"\",\r\n          amount: filteredStore[0].foodAmount,\r\n        },\r\n      ],\r\n    }\r\n\r\n    this.setState({ showMenuDet: true, filteredCart: filteredStore, currentData: objFilteredCart, indexEdit: ind, themid: mid })\r\n    this.props.EditMenuCart(true)\r\n    document.body.style.overflowY = 'hidden'\r\n  }\r\n\r\n  setMenuDetail(isShow) {\r\n    this.setState({ showMenuDet: isShow })\r\n    document.body.style.overflowY = ''\r\n  }\r\n\r\n  menuDetail = () => {\r\n    if (this.state.showMenuDet === true) {\r\n      return (\r\n        <MenuDetail\r\n          isShow={this.state.showMenuDet}\r\n          onHide={() => this.setMenuDetail(false)}\r\n          datas={this.state.currentData}\r\n          handleClick={this.handleSaveCart}\r\n          handleData={this.handleCart}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCart = (data) => {\r\n    currentExt = data\r\n  }\r\n\r\n  handleSaveCart = () => {\r\n    let filteredStore = []\r\n    let allCart = JSON.parse(localStorage.getItem('cart'))\r\n    allCart.forEach((store) => {\r\n      if (store.mid === this.state.themid) {\r\n        filteredStore = store.food.filter((data, index) => {\r\n          return index === this.state.indexEdit\r\n        })\r\n\r\n        console.log(currentExt);\r\n\r\n        filteredStore[0].foodAmount = currentExt.detailCategory[0].amount\r\n        filteredStore[0].foodListCheckbox = currentExt.listcheckbox\r\n        filteredStore[0].foodListRadio = currentExt.listradio\r\n        filteredStore[0].foodNote = currentExt.note\r\n\r\n        console.log(filteredStore[0]);\r\n\r\n        store.food[this.state.indexEdit] = filteredStore[0]\r\n      }\r\n    });\r\n    localStorage.setItem('cart', JSON.stringify(allCart))\r\n    window.location.reload()\r\n  }\r\n\r\n  render() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if (Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if (auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href }\r\n      Cookies.set(\"lastLink\", lastLink, { expires: 1 })\r\n      window.location.href = \"/login\"\r\n    }\r\n    let modal;\r\n    let paymentButton;\r\n    if (auth.isLoggedIn === false) {\r\n      paymentButton = (\r\n        <Link to={\"/login\"} className={\"iconButton\"}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      if (this.state.loadButton) {\r\n        paymentButton = (\r\n          <button className={\"iconButton\"} onClick={() => this.handlePayment()}>\r\n            <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n            <img src={frontIcon} alt={\"checklist\"} />\r\n          </button>\r\n        );\r\n      } else {\r\n        paymentButton = (\r\n          <Loader loaded={this.state.loadButton} options={options} className=\"spinner\" />\r\n        )\r\n      }\r\n    }\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n          handleData={this.handleOption}\r\n          notable={this.props.noTable}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n\r\n    let data = cart;\r\n    let totalAmount = 0;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n    let storeList = data.filter((store) => {\r\n      if (store.mid !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    const currentCartMerchant = JSON.parse(Cookies.get(\"currentMerchant\"))\r\n    let contentView = storeList.map((store) => {\r\n      if (store.mid === currentCartMerchant.mid) {\r\n        let itemListView = data.map((cartData) => {\r\n          if (cartData.mid === store.mid) {\r\n            return store.food.map((food, index) => {\r\n              return (\r\n                <Row>\r\n                  <Col xs={0} md={3} />\r\n                  <Col xs={3} md={1}>\r\n                    <img\r\n                      src={food.foodImage}\r\n                      alt={\"food\"}\r\n                      className={\"cartFoodImage\"}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col>\r\n                        <p className={\"cartContentFood\"}>{food.foodName}</p>\r\n                        <p>List Check: {this.newListCheck(food)}</p>\r\n                        <p>List Option: {this.newListRadio(food)}</p>\r\n                        <p className={\"cartContentPrice\"}>Catatan:</p>\r\n                        <p className={\"cartContentPrice\"}>{food.foodNote}</p>\r\n                        <p className={\"cartContentPrice\"}>\r\n                          {Intl.NumberFormat(\"id-ID\", {\r\n                            style: \"currency\",\r\n                            currency: \"IDR\",\r\n                          }).format(food.foodPrice)}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col>\r\n                        <button\r\n                          className={\"iconButton\"}\r\n                          onClick={() => this.handleDelete(food, index, store.mid)}\r\n                        >\r\n                          <img src={removeIcon} alt={\"remove icon\"} />\r\n                        </button>\r\n                        <button onClick={() => this.onEditCart(index, store.mid)}>EDIT</button>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <ButtonGroup className={\"cartModalButtonGroup\"}>\r\n                          <Button\r\n                            onClick={() => this.handleDecrease(food)}\r\n                            variant=\"cartModalMiniButton\"\r\n                          >\r\n                            -\r\n                        </Button>\r\n                          <Form.Control\r\n                            value={food.foodAmount}\r\n                            className=\"cartModalField\"\r\n                            disabled\r\n                          ></Form.Control>\r\n                          <Button\r\n                            onClick={() => this.handleIncrease(food)}\r\n                            variant=\"cartModalMiniButton\"\r\n                          >\r\n                            +\r\n                        </Button>\r\n                        </ButtonGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              )\r\n            })\r\n          }\r\n        });\r\n        return (\r\n          <>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>{store.storeName}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col xs={1} md={1}>\r\n                <img src={storeIcon} className={\"cartIcon\"} alt={\"store icon\"} />\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartNote\"}>Store Location</p>\r\n                    <p className={\"cartTitle\"}>{store.storeDesc}</p>\r\n                    <p className={\"cartNote\"}>\r\n                      <b>{store.storeDistance}</b>\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col xs={2} md={3}>\r\n                <button className={\"iconButton\"}>\r\n                  <img\r\n                    src={chevronImage}\r\n                    onClick={() => this.handleDetail()}\r\n                    alt={\"chevron right\"}\r\n                  />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n            {itemListView}\r\n          </>\r\n        );\r\n      }\r\n    });\r\n\r\n    let paymentImage;\r\n    let eatImage;\r\n    if (this.state.biz_type === \"DINE_IN\") {\r\n      eatImage = dineinIcon;\r\n    } else if (this.state.biz_type === \"TAKE_AWAY\") {\r\n      eatImage = takeawayIcon;\r\n    }\r\n    if (this.state.paymentType === \"PAY_BY_CASHIER\") {\r\n      paymentImage = cashierIcon\r\n    }\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <Row>\r\n              <Col><p className={\"cartTitle\"}>Pilih cara makan anda</p></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={1}>\r\n                <img src={eatImage} class=\"cartModalImage\" alt=\"icon\" />\r\n              </Col>\r\n              <Col>{this.state.eat_type}</Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"eat-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Bayar pakai apa?</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={1}>\r\n                <img src={paymentImage} class=\"cartModalImage\" alt=\"icon\" />\r\n              </Col>\r\n              <Col>\r\n                {this.state.paymentOption}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"pay-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        {contentView}\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Rincian Pembayaran</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Total harga barang:</p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Diskon:</p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(totalAmount)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(0)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className={\"cartPayment\"}>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Total Belanja Kamu</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartFinalPrice\"}>\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(totalAmount)}\r\n                </p>\r\n              </Col>\r\n              <Col className={\"cartFinalButton\"}>{paymentButton}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n        {this.menuDetail()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst Mapstatetoprops = (state) => {\r\n  return {\r\n    AllRedu: state.AllRedu\r\n  }\r\n}\r\n\r\nexport default connect(Mapstatetoprops, { EditMenuCart })(CartView)","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js",["230","231","232","233"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js",["234","235","236","237","238","239","240","241"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../Asset/scss/MenuSelection.scss'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Autosize from 'autosize'\r\nimport { ValidQty } from '../../Redux/Actions'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nconst checkboxDummyData = [\r\n    { additionname: 'topping', maxchoice: 3, isMandat: true, listaddition: [{ name: 'coklat', price: 5000, isChecked: false }, { name: 'keju', price: 6000, isChecked: false }, { name: 'pisang', price: 7000, isChecked: false }, { name: 'wijen', price: 8000, isChecked: false }] },\r\n    { additionname: 'boba', maxchoice: 2, isMandat: false, listaddition: [{ name: 'rainbow', price: 1000, isChecked: false }, { name: 'jelly', price: 2000, isChecked: false }, { name: 'pudding', price: 3000, isChecked: false }, { name: 'pearl', price: 4000, isChecked: false }] },\r\n]\r\n\r\nconst radioDummyData = [\r\n    { additionname: 'level pedas', isMandat: true, listaddition: [{ name: 'tidak pedas', isChecked: false }, { name: 'pedas', isChecked: false }, { name: 'pedas mampus', isChecked: false }] },\r\n    { additionname: 'level dingin', isMandat: false, listaddition: [{ name: 'tidak dingin', isChecked: false }, { name: 'dingin', isChecked: false }, { name: 'dingin mampus', isChecked: false }] },\r\n]\r\n\r\nconst MenuSelection = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [detailCategory, setdetailCategory] = useState([\r\n        {\r\n            name: \"\",\r\n            amount: 1,\r\n        },\r\n    ])\r\n    const [note, setnote] = useState('')\r\n    const [checkboxVal, setcheckboxVal] = useState([])\r\n    const [checkboxData, setcheckboxData] = useState([])\r\n    const [indexCheckMandat, setindexCheckMandat] = useState(null)\r\n\r\n    const [radioVal, setradioVal] = useState([])\r\n    const [radioData, setradioData] = useState([])\r\n\r\n    const [updateDataEdit, setupdateDataEdit] = useState(false)\r\n    const [updateEditChoice, setupdateEditChoice] = useState(false)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    useEffect(() => {\r\n        Autosize(document.getElementById('note'))\r\n\r\n        //hit API in order to get response of product detail v2\r\n        let uuid = uuidV4()\r\n        uuid = uuid.replaceAll(\"-\", \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(`${address}/home/v2/detail/product/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\": \"PUBLIC\",\r\n                \"pid\": props.datas.productId,\r\n            },\r\n            method: 'GET'\r\n        }).then(productRes => {\r\n            let productDet = productRes.data.results.extra_menus.extra_menu\r\n            let radioResponse = []\r\n            let checkboxResponse = []\r\n            productDet.forEach(valProduct => {\r\n                if (valProduct.menu_type === 'RADIO') {\r\n                    radioResponse.push(valProduct)\r\n                } else {\r\n                    checkboxResponse.push(valProduct)\r\n                }\r\n            })\r\n\r\n            let radioData = []\r\n            let radioValData = []\r\n            radioResponse.forEach(valRadRes => {\r\n                let listadditionradio = []\r\n                valRadRes.menu_extra_item.forEach(valList => {\r\n                    listadditionradio.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                radioData.push({\r\n                    additionname: valRadRes.menu_name,\r\n                    isMandat: valRadRes.menu_extra_item[0].is_mandatory,\r\n                    listaddition: listadditionradio\r\n                })\r\n                radioValData.push([])\r\n            })\r\n\r\n            let checkboxData = []\r\n            let checkValData = []\r\n            checkboxResponse.forEach(valCheckRes => {\r\n                let listadditioncheckbox = []\r\n                valCheckRes.menu_extra_item.forEach(valList => {\r\n                    listadditioncheckbox.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                checkboxData.push({\r\n                    additionname: valCheckRes.menu_name,\r\n                    maxchoice: valCheckRes.menu_extra_item[0].max_choice,\r\n                    isMandat: valCheckRes.menu_extra_item[0].is_mandatory,\r\n                    listaddition: listadditioncheckbox\r\n                })\r\n                checkValData.push([])\r\n            })\r\n\r\n            //set mandatory for checkboxes\r\n            let mandatCheckAvailability = checkboxData.length\r\n            let mandatCheckLength = checkboxData.length\r\n            checkboxData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    mandatCheckAvailability = checkboxData.length - 1\r\n                }\r\n            })\r\n            if (mandatCheckLength === mandatCheckAvailability) {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: true })\r\n            }\r\n\r\n            //set mandatory for radio\r\n            let mandatRadioAvailability = radioData.length\r\n            let mandatRadioLength = radioData.length\r\n            radioData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    mandatRadioAvailability = radioData.length - 1\r\n                }\r\n            })\r\n            if (mandatRadioLength === mandatRadioAvailability) {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: true })\r\n            }\r\n\r\n            if (!AllRedu.openMenuCart) {\r\n                var datas = props.datas\r\n                var list = []\r\n                if (datas.foodExt !== undefined) {\r\n                    datas.foodExt.map((data) => {\r\n                        return list.push({\r\n                            name: data.name,\r\n                            amount: data.amount + 1,\r\n                        });\r\n                    });\r\n                    props.ValidQty(1)\r\n                    setdetailCategory(list);\r\n                    setradioData(radioData)\r\n                    setcheckboxData(checkboxData)\r\n                    setradioVal(radioValData)\r\n                    setcheckboxVal(checkValData)\r\n                }\r\n            } else {\r\n                let amountofProd = props.datas.foodExt\r\n                amountofProd.forEach((val) => {\r\n                    props.ValidQty(val.amount)\r\n                })\r\n                setdetailCategory(props.datas.foodExt)\r\n                setnote(props.datas.foodNote)\r\n                setradioData(radioData)\r\n                setcheckboxData(checkboxData)\r\n                setupdateDataEdit(true)\r\n                dispatch({ type: 'CHECKBOXES', payload: props.datas.foodListCheckbox })\r\n                dispatch({ type: 'RADIOBUTTON', payload: props.datas.foodListRadio })\r\n                setradioVal(props.datas.foodListRadio)\r\n                setcheckboxVal(props.datas.foodListCheckbox)\r\n            }\r\n        }).catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (AllRedu.openMenuCart && updateDataEdit) {\r\n            //this function is used for replace api data with edit data (CHECKBOX)\r\n            let editCheckbox = []\r\n            let newlistcheckboxAddition = []\r\n            let foodListCheckbox = props.datas.foodListCheckbox\r\n\r\n            checkboxData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListCheckbox.forEach((foodfirstVal, indfoodFirst) => {\r\n                        let countNoMatch = 1\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistcheckboxAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    if (countNoMatch === foodfirstVal.length) {\r\n                                        newlistcheckboxAddition.push({\r\n                                            name: secondVal.name,\r\n                                            price: secondVal.price,\r\n                                            isChecked: false\r\n                                        })\r\n                                        countNoMatch = 1\r\n                                    } else {\r\n                                        countNoMatch++\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListCheckbox[indfirstVal].length === 0) {\r\n                        newlistcheckboxAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editCheckbox.push({\r\n                    additionname: firstVal.additionname,\r\n                    maxchoice: firstVal.maxchoice,\r\n                    listaddition: newlistcheckboxAddition\r\n                })\r\n                newlistcheckboxAddition = []\r\n            })\r\n\r\n            //this function is used for replace api data with edit data (RADIO)\r\n            let editRadio = []\r\n            let newlistradioAddition = []\r\n            let foodListRadio = props.datas.foodListRadio\r\n\r\n            radioData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListRadio.forEach((foodfirstVal, indfoodFirst) => {\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: false\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListRadio[indfirstVal].length === 0) {\r\n                        newlistradioAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editRadio.push({\r\n                    additionname: firstVal.additionname,\r\n                    listaddition: newlistradioAddition\r\n                })\r\n                newlistradioAddition = []\r\n            })\r\n            setcheckboxData(editCheckbox)\r\n            setradioData(editRadio)\r\n            setupdateDataEdit(false)\r\n            setupdateEditChoice(true)\r\n        }\r\n    }, [radioVal, checkboxVal])\r\n\r\n    const checkboxArrData = () => {\r\n        return checkboxData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='checkbox-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>Tambah {listname.additionname.toUpperCase().toLowerCase()}</div>\r\n                        <div className='optionSelection'>Optional, Max {listname.maxchoice} items {listname.isMandat ? '*wajib' : null}</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='box-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} defaultChecked={listadd.isChecked} id={listadd.name} type='checkbox' name={`${listname.additionname}` + `${indlistadd}`} className={`${listname.additionname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `${listname.additionname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='checkBox-side'>\r\n                                                        <div className='check-box' />\r\n                                                        <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='box-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} defaultChecked={listadd.isChecked} id={listadd.name} type='checkbox' name={`${listname.additionname}` + `${indlistadd}`} className={`${listname.additionname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `${listname.additionname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='checkBox-side'>\r\n                                                    <div className='check-box' />\r\n                                                    <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const radioArrData = () => {\r\n        return radioData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='radio-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname}</div>\r\n                        <div className='optionSelection'>Pilih Salah Satu {listname.isMandat ? '*wajib' : null}</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='radiobox-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='radio-side'>\r\n                                                        <div className='radio-circle' />\r\n                                                        <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='radiobox-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='radio-side'>\r\n                                                    <div className='radio-circle' />\r\n                                                    <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const onCheckboxChange = (e, indexlistname, listprice, name, max, mandat) => {\r\n        var checkedChecks = document.querySelectorAll(`.${name}:checked`)\r\n        if (checkedChecks.length > max) {\r\n            e.target.checked = false\r\n        } else {\r\n            if (mandat) {\r\n                dispatch({ type: 'MANDATCHECK', payload: mandat })\r\n                setindexCheckMandat(indexlistname)\r\n            }\r\n            let checkboxArr = [...checkboxVal]\r\n            if (e.target.checked) {\r\n                checkboxArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n                setcheckboxVal(checkboxArr)\r\n                dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n            } else {\r\n                checkboxArr[indexlistname] = checkboxArr[indexlistname].filter(val => val.name !== e.target.value)\r\n                setcheckboxVal(checkboxArr)\r\n                let sizeArr = 0\r\n                checkboxArr.forEach((firstVal) => {\r\n                    firstVal.forEach((nestedVal) => {\r\n                        if (nestedVal.name) {\r\n                            sizeArr += 1\r\n                        }\r\n                    })\r\n                })\r\n                if (sizeArr > 0) {\r\n                    dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n                    if (indexCheckMandat === indexlistname) {\r\n                        if (checkboxArr[indexCheckMandat].length === 0) {\r\n                            dispatch({ type: 'MANDATCHECK', payload: false })\r\n                        }\r\n                    }\r\n                } else {\r\n                    dispatch({ type: 'CHECKBOXES', payload: [] })\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onRadioChange = (e, indexlistname, mandat, listprice) => {\r\n        if (mandat) {\r\n            dispatch({ type: 'MANDATRADIO', payload: mandat })\r\n        }\r\n        let radiobuttonArr = [...radioVal]\r\n        radiobuttonArr[indexlistname].pop()\r\n        radiobuttonArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n        setradioVal(radiobuttonArr)\r\n        dispatch({ type: 'RADIOBUTTON', payload: radiobuttonArr })\r\n    }\r\n\r\n    const handleDecrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e && food.amount > 1) {\r\n                food.amount = food.amount - 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleIncrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e) {\r\n                food.amount = food.amount + 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        return detailCategory.map((food, ind) => {\r\n            return (\r\n                <div key={ind} className='amount-box-inside'>\r\n                    <div className='minus-box' style={{ backgroundColor: AllRedu.validQTY > 1 ? '#4bb7ac' : '#767676' }} onClick={() => handleDecrease(food)}>\r\n                        <div className='minus-sym'>\r\n                            -\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='number-area'>\r\n                        {food.amount}\r\n                    </div>\r\n\r\n                    <div className='plus-box' onClick={() => handleIncrease(food)}>\r\n                        <div className='plus-sym'>\r\n                            +\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        setnote(e.target.value)\r\n    }\r\n\r\n    var thedata = {\r\n        detailCategory: detailCategory,\r\n        note: note ? note : '',\r\n        foodCategory: AllRedu.openMenuCart ? props.datas.foodCategory : AllRedu.foodCateg,\r\n        listcheckbox: checkboxVal,\r\n        listradio: radioVal\r\n    }\r\n    props.handleData(thedata)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isMobile ?\r\n                    <div className='menuSelection-layout'>\r\n                        <div className='checkbox-layout'>\r\n                            {checkboxArrData()}\r\n                        </div>\r\n\r\n                        <div className='radio-layout'>\r\n                            {radioArrData()}\r\n                        </div>\r\n\r\n                        <div className='amount-section'>\r\n                            <div className='titleSelection'>\r\n                                Jumlah\r\n                            </div>\r\n\r\n                            <div className='amount-box'>\r\n                                {handleAmount()}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='note-section'>\r\n                            <div className='titleSelection'>\r\n                                Catatan\r\n                            </div>\r\n\r\n                            <div className='note-box'>\r\n                                <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className='menuSelection-layout'>\r\n                        <div className='checkbox-layout'>\r\n                            {checkboxArrData()}\r\n                        </div>\r\n\r\n                        <div className='radio-layout'>\r\n                            {radioArrData()}\r\n                        </div>\r\n\r\n                        <div className='amount-section'>\r\n                            <div className='titleSelection'>\r\n                                Jumlah\r\n                            </div>\r\n\r\n                            <div className='amount-box'>\r\n                                {handleAmount()}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='note-section'>\r\n                            <div className='titleSelection'>\r\n                                Catatan\r\n                            </div>\r\n\r\n                            <div className='note-box'>\r\n                                <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { ValidQty })(MenuSelection)","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Modal\\CartModalDev.js",["242","243","244"],"import React, { useState } from 'react'\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png'\r\nimport diningTableColor from '../../Asset/Icon/diningTableColor.png'\r\nimport takeawayColor from '../../Asset/Icon/takeawayColor.png'\r\nimport CashierPayment from '../../Asset/Icon/CashierPayment.png'\r\nimport OvoPayment from '../../Asset/Icon/ovo_icon.png'\r\nimport '../../Asset/scss/CartModal.scss'\r\n\r\nconst CartModal = (props) => {\r\n    const [radioNumEat, setradioNumEat] = useState(props.indexOptionEat)\r\n    const [radioNumPay, setradioNumPay] = useState(props.indexOptionPay)\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHide()\r\n    }\r\n\r\n    const onChangeRadio = (num, title) => {\r\n        if (title === 'Pilih Cara Makan Anda') {\r\n            setradioNumEat(num)\r\n            props.handleData(num)\r\n            props.onHide()\r\n        } else if(title === 'Bayar Pakai Apa') {\r\n            setradioNumPay(num)\r\n            props.handleData(num)\r\n            props.onHide()\r\n        }\r\n    }\r\n\r\n    const choicesCartModal = () => {\r\n        let optionList = props.detailOptions\r\n        let choicesModal = optionList.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"dineIn\") {\r\n                imageOption = diningTableColor;\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                imageOption = takeawayColor;\r\n            } else if (optionVal.image === \"cashier\") {\r\n                imageOption = CashierPayment;\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            }\r\n\r\n            if (props.title === 'Pilih Cara Makan Anda') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'EATMETHOD'} defaultChecked={radioNumEat === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Bayar Pakai Apa') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'PAYMETHOD'} defaultChecked={radioNumPay === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Rincian Pembayaran') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailTotalPrice'>\r\n                        <div className='modalCart-totalPrice'>\r\n                            <h2 className='modalCart-totalPrice-left'>Total Harga Barang</h2>\r\n                            <h2 className='modalCart-totalPrice-right'>{optionVal.totalPrice}</h2>\r\n                        </div>\r\n\r\n                        <div className='modalCart-discount'>\r\n                            <h2 className='modalCart-discount-left'>Diskon</h2>\r\n                            <h2 className='modalCart-discount-right'>{optionVal.discountPrice}</h2>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return choicesModal\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modalCartPage' style={{\r\n                display: props.isShow ? 'block' : 'none'\r\n            }} onClick={closeModal}>\r\n                <div className='modalCartContent' onClick={e => e.stopPropagation()}>\r\n                    <span className='iconCloseNarrow' onClick={closeModal}>\r\n                        <img src={closeNarrow} className='closeLogoNarrow' alt='' />\r\n                    </span>\r\n\r\n                    <div className='modalCart-detail'>\r\n                        <h1 className='modalCart-title'>{props.title}</h1>\r\n\r\n                        {choicesCartModal()}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartModal","D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js",["245","246","247","248"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js",["249","250","251","252","253","254","255","256","257","258"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js",["259","260","261","262","263"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js",["264","265","266","267","268"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js",["269","270","271","272","273","274"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js",["275"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Master\\ResetPinLayout.js",[],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js",["276"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js",["277","278","279","280","281"],"D:\\02 WORK\\PikApp\\Project\\frontend\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js",["282","283","284","285"],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":24,"column":10,"nodeType":"292","messageId":"293","endLine":24,"endColumn":18},{"ruleId":"290","severity":1,"message":"294","line":24,"column":20,"nodeType":"292","messageId":"293","endLine":24,"endColumn":31},{"ruleId":"295","severity":1,"message":"296","line":37,"column":6,"nodeType":"297","endLine":37,"endColumn":8,"suggestions":"298"},{"ruleId":"290","severity":1,"message":"299","line":5,"column":5,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"300","line":9,"column":5,"nodeType":"292","messageId":"293","endLine":9,"endColumn":17},{"ruleId":"290","severity":1,"message":"301","line":12,"column":5,"nodeType":"292","messageId":"293","endLine":12,"endColumn":18},{"ruleId":"290","severity":1,"message":"302","line":19,"column":10,"nodeType":"292","messageId":"293","endLine":19,"endColumn":19},{"ruleId":"290","severity":1,"message":"303","line":22,"column":10,"nodeType":"292","messageId":"293","endLine":22,"endColumn":14},{"ruleId":"290","severity":1,"message":"304","line":23,"column":10,"nodeType":"292","messageId":"293","endLine":23,"endColumn":17},{"ruleId":"290","severity":1,"message":"305","line":23,"column":19,"nodeType":"292","messageId":"293","endLine":23,"endColumn":25},{"ruleId":"290","severity":1,"message":"306","line":23,"column":27,"nodeType":"292","messageId":"293","endLine":23,"endColumn":35},{"ruleId":"290","severity":1,"message":"307","line":24,"column":16,"nodeType":"292","messageId":"293","endLine":24,"endColumn":22},{"ruleId":"290","severity":1,"message":"308","line":25,"column":8,"nodeType":"292","messageId":"293","endLine":25,"endColumn":14},{"ruleId":"290","severity":1,"message":"309","line":26,"column":8,"nodeType":"292","messageId":"293","endLine":26,"endColumn":13},{"ruleId":"290","severity":1,"message":"310","line":28,"column":8,"nodeType":"292","messageId":"293","endLine":28,"endColumn":14},{"ruleId":"290","severity":1,"message":"311","line":33,"column":5,"nodeType":"292","messageId":"293","endLine":33,"endColumn":12},{"ruleId":"312","severity":1,"message":"313","line":244,"column":18,"nodeType":"314","messageId":"315","endLine":244,"endColumn":20},{"ruleId":"312","severity":1,"message":"313","line":256,"column":16,"nodeType":"314","messageId":"315","endLine":256,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":525,"column":41,"nodeType":"318","messageId":"319","endLine":525,"endColumn":43},{"ruleId":"316","severity":1,"message":"320","line":583,"column":51,"nodeType":"318","messageId":"319","endLine":583,"endColumn":53},{"ruleId":"316","severity":1,"message":"320","line":607,"column":48,"nodeType":"318","messageId":"319","endLine":607,"endColumn":50},{"ruleId":"316","severity":1,"message":"320","line":345,"column":49,"nodeType":"318","messageId":"319","endLine":345,"endColumn":51},{"ruleId":"316","severity":1,"message":"320","line":423,"column":38,"nodeType":"318","messageId":"319","endLine":423,"endColumn":40},{"ruleId":"316","severity":1,"message":"320","line":508,"column":38,"nodeType":"318","messageId":"319","endLine":508,"endColumn":40},{"ruleId":"316","severity":1,"message":"320","line":593,"column":38,"nodeType":"318","messageId":"319","endLine":593,"endColumn":40},{"ruleId":"290","severity":1,"message":"321","line":61,"column":9,"nodeType":"292","messageId":"293","endLine":61,"endColumn":18},{"ruleId":"290","severity":1,"message":"322","line":62,"column":9,"nodeType":"292","messageId":"293","endLine":62,"endColumn":17},{"ruleId":"286","replacedBy":"323"},{"ruleId":"288","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":17,"column":1,"nodeType":"327","endLine":52,"endColumn":2},{"ruleId":"286","replacedBy":"328"},{"ruleId":"288","replacedBy":"329"},{"ruleId":"312","severity":1,"message":"313","line":140,"column":35,"nodeType":"314","messageId":"315","endLine":140,"endColumn":37},{"ruleId":"312","severity":1,"message":"313","line":169,"column":35,"nodeType":"314","messageId":"315","endLine":169,"endColumn":37},{"ruleId":"312","severity":1,"message":"313","line":350,"column":20,"nodeType":"314","messageId":"315","endLine":350,"endColumn":22},{"ruleId":"312","severity":1,"message":"313","line":364,"column":21,"nodeType":"314","messageId":"315","endLine":364,"endColumn":23},{"ruleId":"312","severity":1,"message":"313","line":823,"column":31,"nodeType":"314","messageId":"315","endLine":823,"endColumn":33},{"ruleId":"312","severity":1,"message":"313","line":216,"column":16,"nodeType":"314","messageId":"315","endLine":216,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":499,"column":41,"nodeType":"318","messageId":"319","endLine":499,"endColumn":43},{"ruleId":"316","severity":1,"message":"320","line":506,"column":45,"nodeType":"318","messageId":"319","endLine":506,"endColumn":47},{"ruleId":"316","severity":1,"message":"320","line":508,"column":48,"nodeType":"318","messageId":"319","endLine":508,"endColumn":50},{"ruleId":"330","severity":1,"message":"331","line":270,"column":77,"nodeType":"314","messageId":"332","endLine":270,"endColumn":78},{"ruleId":"330","severity":1,"message":"331","line":272,"column":77,"nodeType":"314","messageId":"332","endLine":272,"endColumn":78},{"ruleId":"330","severity":1,"message":"331","line":366,"column":83,"nodeType":"314","messageId":"332","endLine":366,"endColumn":84},{"ruleId":"330","severity":1,"message":"331","line":368,"column":83,"nodeType":"314","messageId":"332","endLine":368,"endColumn":84},{"ruleId":"290","severity":1,"message":"333","line":12,"column":7,"nodeType":"292","messageId":"293","endLine":12,"endColumn":24},{"ruleId":"290","severity":1,"message":"334","line":17,"column":7,"nodeType":"292","messageId":"293","endLine":17,"endColumn":21},{"ruleId":"295","severity":1,"message":"335","line":174,"column":8,"nodeType":"297","endLine":174,"endColumn":10,"suggestions":"336"},{"ruleId":"295","severity":1,"message":"337","line":275,"column":8,"nodeType":"297","endLine":275,"endColumn":31,"suggestions":"338"},{"ruleId":"330","severity":1,"message":"331","line":293,"column":192,"nodeType":"314","messageId":"332","endLine":293,"endColumn":193},{"ruleId":"339","severity":1,"message":"340","line":293,"column":404,"nodeType":"341","endLine":293,"endColumn":438},{"ruleId":"330","severity":1,"message":"331","line":309,"column":188,"nodeType":"314","messageId":"332","endLine":309,"endColumn":189},{"ruleId":"339","severity":1,"message":"340","line":309,"column":400,"nodeType":"341","endLine":309,"endColumn":434},{"ruleId":"316","severity":1,"message":"320","line":32,"column":66,"nodeType":"318","messageId":"319","endLine":32,"endColumn":68},{"ruleId":"342","severity":1,"message":"343","line":51,"column":37,"nodeType":"344","endLine":51,"endColumn":95},{"ruleId":"342","severity":1,"message":"343","line":65,"column":37,"nodeType":"344","endLine":65,"endColumn":95},{"ruleId":"290","severity":1,"message":"345","line":19,"column":12,"nodeType":"292","messageId":"293","endLine":19,"endColumn":21},{"ruleId":"290","severity":1,"message":"346","line":19,"column":23,"nodeType":"292","messageId":"293","endLine":19,"endColumn":35},{"ruleId":"290","severity":1,"message":"347","line":21,"column":11,"nodeType":"292","messageId":"293","endLine":21,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":29,"column":11,"nodeType":"292","messageId":"293","endLine":29,"endColumn":20},{"ruleId":"290","severity":1,"message":"346","line":23,"column":23,"nodeType":"292","messageId":"293","endLine":23,"endColumn":35},{"ruleId":"290","severity":1,"message":"349","line":24,"column":12,"nodeType":"292","messageId":"293","endLine":24,"endColumn":26},{"ruleId":"290","severity":1,"message":"350","line":24,"column":28,"nodeType":"292","messageId":"293","endLine":24,"endColumn":45},{"ruleId":"290","severity":1,"message":"351","line":26,"column":12,"nodeType":"292","messageId":"293","endLine":26,"endColumn":15},{"ruleId":"290","severity":1,"message":"352","line":26,"column":17,"nodeType":"292","messageId":"293","endLine":26,"endColumn":23},{"ruleId":"290","severity":1,"message":"353","line":27,"column":12,"nodeType":"292","messageId":"293","endLine":27,"endColumn":15},{"ruleId":"290","severity":1,"message":"354","line":27,"column":17,"nodeType":"292","messageId":"293","endLine":27,"endColumn":23},{"ruleId":"290","severity":1,"message":"347","line":29,"column":11,"nodeType":"292","messageId":"293","endLine":29,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":37,"column":11,"nodeType":"292","messageId":"293","endLine":37,"endColumn":20},{"ruleId":"290","severity":1,"message":"355","line":144,"column":11,"nodeType":"292","messageId":"293","endLine":144,"endColumn":25},{"ruleId":"290","severity":1,"message":"345","line":25,"column":12,"nodeType":"292","messageId":"293","endLine":25,"endColumn":21},{"ruleId":"290","severity":1,"message":"346","line":25,"column":23,"nodeType":"292","messageId":"293","endLine":25,"endColumn":35},{"ruleId":"290","severity":1,"message":"356","line":27,"column":12,"nodeType":"292","messageId":"293","endLine":27,"endColumn":23},{"ruleId":"290","severity":1,"message":"347","line":30,"column":11,"nodeType":"292","messageId":"293","endLine":30,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":38,"column":11,"nodeType":"292","messageId":"293","endLine":38,"endColumn":20},{"ruleId":"290","severity":1,"message":"345","line":23,"column":12,"nodeType":"292","messageId":"293","endLine":23,"endColumn":21},{"ruleId":"290","severity":1,"message":"346","line":23,"column":23,"nodeType":"292","messageId":"293","endLine":23,"endColumn":35},{"ruleId":"290","severity":1,"message":"347","line":27,"column":11,"nodeType":"292","messageId":"293","endLine":27,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":35,"column":11,"nodeType":"292","messageId":"293","endLine":35,"endColumn":20},{"ruleId":"290","severity":1,"message":"357","line":47,"column":11,"nodeType":"292","messageId":"293","endLine":47,"endColumn":26},{"ruleId":"290","severity":1,"message":"358","line":15,"column":21,"nodeType":"292","messageId":"293","endLine":15,"endColumn":31},{"ruleId":"290","severity":1,"message":"345","line":17,"column":12,"nodeType":"292","messageId":"293","endLine":17,"endColumn":21},{"ruleId":"290","severity":1,"message":"346","line":17,"column":23,"nodeType":"292","messageId":"293","endLine":17,"endColumn":35},{"ruleId":"290","severity":1,"message":"347","line":19,"column":11,"nodeType":"292","messageId":"293","endLine":19,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":27,"column":11,"nodeType":"292","messageId":"293","endLine":27,"endColumn":20},{"ruleId":"290","severity":1,"message":"359","line":43,"column":11,"nodeType":"292","messageId":"293","endLine":43,"endColumn":21},{"ruleId":"325","severity":1,"message":"326","line":8,"column":1,"nodeType":"327","endLine":21,"endColumn":2},{"ruleId":"290","severity":1,"message":"360","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":13},{"ruleId":"290","severity":1,"message":"361","line":15,"column":11,"nodeType":"292","messageId":"293","endLine":15,"endColumn":19},{"ruleId":"290","severity":1,"message":"345","line":19,"column":12,"nodeType":"292","messageId":"293","endLine":19,"endColumn":21},{"ruleId":"290","severity":1,"message":"346","line":19,"column":23,"nodeType":"292","messageId":"293","endLine":19,"endColumn":35},{"ruleId":"290","severity":1,"message":"347","line":22,"column":11,"nodeType":"292","messageId":"293","endLine":22,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":30,"column":11,"nodeType":"292","messageId":"293","endLine":30,"endColumn":20},{"ruleId":"290","severity":1,"message":"345","line":17,"column":12,"nodeType":"292","messageId":"293","endLine":17,"endColumn":21},{"ruleId":"290","severity":1,"message":"346","line":17,"column":23,"nodeType":"292","messageId":"293","endLine":17,"endColumn":35},{"ruleId":"290","severity":1,"message":"347","line":20,"column":11,"nodeType":"292","messageId":"293","endLine":20,"endColumn":19},{"ruleId":"290","severity":1,"message":"348","line":28,"column":11,"nodeType":"292","messageId":"293","endLine":28,"endColumn":20},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"no-unused-vars","'pageCond' is assigned a value but never used.","Identifier","unusedVar","'setpageCond' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.coords'. Either include it or remove the dependency array.","ArrayExpression",["364"],"'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'CartModal' is defined but never used.","'Link' is defined but never used.","'address' is defined but never used.","'secret' is defined but never used.","'clientId' is defined but never used.","'uuidV4' is defined but never used.","'sha256' is defined but never used.","'Axios' is defined but never used.","'Loader' is defined but never used.","'options' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'longitude' is assigned a value but never used.","'latitude' is assigned a value but never used.",["362"],["363"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["362"],["363"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'checkboxDummyData' is assigned a value but never used.","'radioDummyData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["365"],"React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'checkboxData', 'props.datas.foodListCheckbox', 'props.datas.foodListRadio', 'radioData', and 'updateDataEdit'. Either include them or remove the dependency array.",["366"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isCaptcha' is assigned a value but never used.","'setIsCaptcha' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'backModal' is assigned a value but never used.","'captchaCounter' is assigned a value but never used.","'setCaptchaCounter' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lon' is assigned a value but never used.","'setLon' is assigned a value but never used.","'handleRegister' is assigned a value but never used.","'isLoginStep' is assigned a value but never used.","'openLoginDialog' is assigned a value but never used.","'setIsValid' is assigned a value but never used.","'checkEmail' is assigned a value but never used.","'Paper' is defined but never used.","'AuthRedu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [props.coords]",{"range":"373","text":"374"},"Update the dependencies array to be: [AllRedu.openMenuCart, dispatch, props]",{"range":"375","text":"376"},"Update the dependencies array to be: [radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, radioData]",{"range":"377","text":"378"},[1159,1161],"[props.coords]",[7679,7681],"[AllRedu.openMenuCart, dispatch, props]",[12261,12284],"[radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, radioData]"]