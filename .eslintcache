[{"D:\\PIKAPP\\pikapp-frontend\\src\\index.js":"1","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Store.js":"2","D:\\PIKAPP\\pikapp-frontend\\src\\App.js":"3","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js":"4","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js":"5","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js":"6","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js":"7","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js":"8","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js":"9","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js":"10","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\FoodCourtQR.js":"11","D:\\PIKAPP\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js":"12","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js":"13","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js":"14","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js":"15","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js":"16","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js":"17","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js":"18","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js":"19","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js":"20","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js":"21","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js":"22","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js":"23","D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js":"24","D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js":"25","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js":"26","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js":"27","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js":"28","D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js":"29","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js":"30","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js":"31","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js":"32","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js":"33","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js":"34","D:\\PIKAPP\\pikapp-frontend\\src\\firebaseConfig.js":"35","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js":"36","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js":"37","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js":"38","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js":"39","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js":"40","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js":"41","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js":"42","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js":"43","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js":"44","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js":"45","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js":"46"},{"size":456,"mtime":1622711666473,"results":"47","hashOfConfig":"48"},{"size":169,"mtime":1618911481708,"results":"49","hashOfConfig":"48"},{"size":2896,"mtime":1623640677427,"results":"50","hashOfConfig":"48"},{"size":865,"mtime":1614170607873,"results":"51","hashOfConfig":"48"},{"size":532,"mtime":1618911481701,"results":"52","hashOfConfig":"48"},{"size":2443,"mtime":1618911481700,"results":"53","hashOfConfig":"48"},{"size":274,"mtime":1617790499497,"results":"54","hashOfConfig":"48"},{"size":1227,"mtime":1622193700666,"results":"55","hashOfConfig":"48"},{"size":656,"mtime":1617686402109,"results":"56","hashOfConfig":"48"},{"size":1737,"mtime":1622193700665,"results":"57","hashOfConfig":"48"},{"size":675,"mtime":1623640241052,"results":"58","hashOfConfig":"48"},{"size":1858,"mtime":1621238036596,"results":"59","hashOfConfig":"48"},{"size":367,"mtime":1623640241053,"results":"60","hashOfConfig":"48"},{"size":246,"mtime":1618911481707,"results":"61","hashOfConfig":"48"},{"size":860,"mtime":1618911481703,"results":"62","hashOfConfig":"48"},{"size":1964,"mtime":1622193700664,"results":"63","hashOfConfig":"48"},{"size":26806,"mtime":1623640281954,"results":"64","hashOfConfig":"48"},{"size":80,"mtime":1614170607813,"results":"65","hashOfConfig":"48"},{"size":43752,"mtime":1623652101365,"results":"66","hashOfConfig":"48"},{"size":13806,"mtime":1623640281949,"results":"67","hashOfConfig":"48"},{"size":831,"mtime":1614170607877,"results":"68","hashOfConfig":"48"},{"size":9040,"mtime":1623640281952,"results":"69","hashOfConfig":"48"},{"size":36135,"mtime":1623640281951,"results":"70","hashOfConfig":"48"},{"size":20635,"mtime":1623652069153,"results":"71","hashOfConfig":"48"},{"size":17591,"mtime":1623640241060,"results":"72","hashOfConfig":"48"},{"size":11319,"mtime":1621238036580,"results":"73","hashOfConfig":"48"},{"size":931,"mtime":1622193700669,"results":"74","hashOfConfig":"48"},{"size":1908,"mtime":1623640241057,"results":"75","hashOfConfig":"48"},{"size":785,"mtime":1622712797776,"results":"76","hashOfConfig":"48"},{"size":11231,"mtime":1621238036565,"results":"77","hashOfConfig":"48"},{"size":991,"mtime":1617686402096,"results":"78","hashOfConfig":"48"},{"size":21745,"mtime":1622193700660,"results":"79","hashOfConfig":"48"},{"size":862,"mtime":1618910090714,"results":"80","hashOfConfig":"48"},{"size":1360,"mtime":1622193700661,"results":"81","hashOfConfig":"48"},{"size":492,"mtime":1623640281956,"results":"82","hashOfConfig":"48"},{"size":18158,"mtime":1621315324094,"results":"83","hashOfConfig":"48"},{"size":2411,"mtime":1623640241050,"results":"84","hashOfConfig":"48"},{"size":5147,"mtime":1621238036580,"results":"85","hashOfConfig":"48"},{"size":650,"mtime":1617686402101,"results":"86","hashOfConfig":"48"},{"size":30,"mtime":1617686402113,"results":"87","hashOfConfig":"48"},{"size":8867,"mtime":1621315305025,"results":"88","hashOfConfig":"48"},{"size":12739,"mtime":1621315316893,"results":"89","hashOfConfig":"48"},{"size":15690,"mtime":1621315295158,"results":"90","hashOfConfig":"48"},{"size":6427,"mtime":1621238036565,"results":"91","hashOfConfig":"48"},{"size":32865,"mtime":1621315263701,"results":"92","hashOfConfig":"48"},{"size":1113,"mtime":1623640241055,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1xfhsff",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PIKAPP\\pikapp-frontend\\src\\index.js",[],["202","203"],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Store.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\App.js",["204","205"],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProductLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\StoreLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MerchantQR.js",["206","207"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst MerchantResto = (props) => {\r\n  const merchantID = props.match.params.mid\r\n  const [longlat, setlonglat] = useState({});\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // const _isMounted = useRef(true)\r\n\r\n  useEffect(() => {\r\n    // if (navigator.geolocation) { //SHUTDOWN FOR A WHILE\r\n    //   navigator.geolocation.getCurrentPosition(showPosition)\r\n    // } else {\r\n    //   alert('Geolocation is not supported by this browser.')\r\n    // }\r\n    // return () => {\r\n    //   _isMounted.current = false\r\n    // }\r\n\r\n    let latitude = -6.28862\r\n    let longitude = 106.71789\r\n    let longlat = { lat: latitude, lon: longitude }\r\n    console.log(latitude, longitude);\r\n    localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n    if (!props.match.params.address) {\r\n      setlonglat({ lat: latitude, lon: longitude })\r\n    }\r\n    dispatch({ type: 'ISMERCHANTQR', payload: true });\r\n  }, []);\r\n\r\n  // const showPosition = (position) => { //SHUTDOWN FOR A WHILE\r\n  //   let latitude = position.coords.latitude\r\n  //   let longitude = position.coords.longitude\r\n  //   let longlat = { lat: latitude, lon: longitude }\r\n  //   console.log(latitude, longitude);\r\n  //   localStorage.setItem(\"longlat\", JSON.stringify(longlat))\r\n  //   if (!props.match.params.address) {\r\n  //     setlonglat({ lat: latitude, lon: longitude })\r\n  //   }\r\n  // }\r\n\r\n  if (longlat.lat) {\r\n    history.push(\r\n      \"/store?mid=\" +\r\n      merchantID +\r\n      \"&table=\" +\r\n      props.match.params.notab\r\n    );\r\n  }\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default MerchantResto\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\FoodCourtQR.js",["208"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\ResetPin\\ResetPinView.js",["209","210","211"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux'\r\nimport \"../../Asset/scss/AuthenticationLayout.scss\";\r\nimport ResetPinDialog from '../../Component/Authentication/ResetPin/ResetPinDialog';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ResetPin = (props) => {\r\n    const dispatch = useDispatch();\r\n    const pintoken = props.match.params.pintoken;\r\n    const [showResetDialog, setShowResetDialog] = useState(true);\r\n\r\n    console.log(pintoken);\r\n    // const setMenuDetail = () => {\r\n        // setShowResetDialog(true);\r\n    // }\r\n\r\n    const resetPin = () => {\r\n        dispatch({ type: 'PINTOKEN', payload: pintoken });\r\n        if (showResetDialog) {\r\n            return (\r\n            <ResetPinDialog\r\n                isShowResetPin={showResetDialog}\r\n                onHideResetPin={() => setShowResetDialog(true)}\r\n            />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {resetPin()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPin\r\n// class ResetPinView extends React.Component {\r\n\r\n//     state = {\r\n//         showResetDialog : true\r\n//     }\r\n\r\n//     setMenuDetail(isShow) {\r\n//         this.setState({ showResetDialog: isShow })\r\n//         document.body.style.overflowY = ''\r\n//     }\r\n\r\n//     resetPin = () => {\r\n//         if (this.state.showResetDialog === true) {\r\n//           return (\r\n//             <ResetPinDialog\r\n//                 isShowResetPin={this.state.showResetDialog}\r\n//                 onHideResetPin={() => this.setMenuDetail(true)}\r\n//             />\r\n//           );\r\n//         }\r\n//     }\r\n\r\n//     render() { \r\n//         return (\r\n//             <>\r\n//             {this.resetPin()}\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n// export default connect(null, {LoadingButton, DoneLoad })(ResetPinView)","D:\\PIKAPP\\pikapp-frontend\\src\\Master\\OrderConfirmationLayout.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\DetailNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Master\\MainNavigation.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Status\\StatusView.js",["212","213","214","215"],"D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Product\\ProductView.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Auth\\FormView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Cart\\CartView.js",["230","231","232","233","234","235"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\Store\\StoreView.js",["236"],"D:\\PIKAPP\\pikapp-frontend\\src\\View\\OrderConfirmation\\OrderConfirmationView.js",["237","238","239","240","241","242","243","244","245","246","247"],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ResetPinDialog.js",["248","249","250","251","252"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Button/PikaButton\";\r\nimport ConfirmResetPinDialog from \"../ResetPin/ConfirmResetPinDialog\";\r\n\r\nconst ResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPinDialog, setConfirmResetPin] = useState(false);\r\n    const [resetPin, setResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleResetPin = (e) => {\r\n        setResetPin(e);\r\n    }\r\n\r\n    const checkResetPin = () => {\r\n        if (resetPin.length < 6) {\r\n          setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n    };\r\n\r\n    const openConfirmPinDialog = (e) => {\r\n        if (checkResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            currentPin : resetPin\r\n        };\r\n\r\n        dispatch({ type: 'RESETPIN', payload: data });\r\n\r\n        setConfirmResetPin(true);\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if(confirmResetPinDialog) {\r\n            return (\r\n                <ConfirmResetPinDialog \r\n                    isShowConfirmResetPin={confirmResetPinDialog}\r\n                    onHideConfirmResetPin={() =>setConfirmResetPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    <div className='menu-name-auth'>\r\n                                        Perbarui PIN Anda \r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-category-auth'>\r\n                                        Ketik 6 digit nomor PIN baru Anda\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <Form>\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                    <PinInput\r\n                                                    length={6}\r\n                                                    focus\r\n                                                    // disabled\r\n                                                    secret\r\n                                                    ref={p => (pin => p)}\r\n                                                    type=\"number\"\r\n                                                    inputMode=\"numeric\"\r\n                                                    onChange={handleResetPin}\r\n                                                    />\r\n                                                    <div></div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col xs={11}>\r\n                                                {isValid || (\r\n                                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                )}\r\n                                                </Col>\r\n                                                <Col />\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                        \r\n                                        <div className='buttonSide-auth'>\r\n                                            <p className=\"linkWords colorWhite\">KEMBALI</p>\r\n                                            <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                                <div className=\"wordsButton-auth txtLine\">\r\n                                                    NEXT\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                        <div className='bottomSide-auth'>\r\n                                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                            <div className='reqSide-auth'>\r\n                                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {showConfirmPinDialog()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AuthenticationReducers.js",["253"],"const INITIAL_STATE = {\r\n    dataRegister : {},\r\n    dataLogin : {},\r\n    isLoginStep : false,\r\n    dataResetPin : {},\r\n    dataPin : '',\r\n    dataPinToken: '',\r\n    isMerchantQR: false,\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"REGISTER\" :\r\n            return {...state, dataRegister: action.payload}\r\n        case \"LOGIN\" :\r\n            return {...state, dataLogin: action.payload}\r\n        case \"LOGINSTEP\" :\r\n            return {...state, isLoginStep: action.payload}\r\n        case \"RESETPIN\" :\r\n            return {...state, dataResetPin: action.payload}\r\n        case \"PIN\" :\r\n            return {...state, dataPin: action.payload}\r\n        case \"PINTOKEN\" :\r\n            return {...state, dataPinToken: action.payload}\r\n        case \"ISMERCHANTQR\":\r\n            return { ...state, isMerchantQR: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Reducers\\AllReducers.js",["254"],"D:\\PIKAPP\\pikapp-frontend\\src\\Asset\\Constant\\APIConstant.js",["255","256","257"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\RegisterDialog.js",["258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport PinDialog from \"./PinDialog\";\r\nimport ConfirmPinDialog from \"./ConfirmPinDialog\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\n\r\nconst RegisterDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false);\r\n    const [pinDialog, setPin] = useState(false);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [lat, setLat] = useState('');\r\n    const [lon, setLon] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    // if(AuthRedu.dataRegister) {\r\n    //     setName(AuthRedu.dataRegister.full_name);\r\n    //     setEmail(AuthRedu.dataRegister.email);\r\n    //     setPhone(AuthRedu.dataRegister.phone_number);\r\n    // }\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideRegister()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideRegister()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openLoginDialog = () => {\r\n        setLogin(true);\r\n    }\r\n\r\n    const showLoginDialog = () => {\r\n        if (loginDialog) {\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = (e) => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkName() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        if (checkPhone() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        // this.props.LoadingButton()\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: name,\r\n            phone_number: phone,\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: false });\r\n\r\n        setPin(true);\r\n        // setConfirmPin(true);\r\n        // setForgotPin(true);\r\n        // props.onHideRegister();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const checkName = () => {\r\n        if (name.length > 0) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Name cannot be empty.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const checkPhone = () => {\r\n        if (phone.startsWith(\"08\")) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Phone not valid.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onChange = (value) => {\r\n        console.log(value);\r\n    }\r\n\r\n    const closeRegisterFlowDialog = () => {\r\n        setConfirmPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeLoginFlowDialog = () => {\r\n        setPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const closeForgotFlowDialog = () => {\r\n        setForgotPin(false);\r\n        props.onHideRegister();\r\n    }\r\n\r\n    const showDialog = (value) => {\r\n        if(pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                    onShowConfirm={() => setConfirmPin(true)}\r\n                    onShowForgotPin={() => setForgotPin(true)}\r\n                    onHideLoginFlow={closeLoginFlowDialog}\r\n                />\r\n            )\r\n        } else if(loginDialog){\r\n            return (\r\n                <LoginDialog\r\n                    isShowLogin={loginDialog}\r\n                    onHideLogin={() => setLogin(false)}\r\n                    onShowPin={() => setPin(true)}\r\n                />\r\n            )\r\n        } \r\n        else if(confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                    onHideRegisterFlow={closeRegisterFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                    onHideForgotFlow={closeForgotFlowDialog}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='text' className='textfieldinput-auth' placeholder=\"Nama Lengkap\" onChange={handleName} />\r\n                        <input type='tel' className='textfieldinput-auth' placeholder=\"Nomor Handphone (Whatsapp)\" onChange={handlePhone} />\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {!isCaptcha || (\r\n                                        <ReCAPTCHA sitekey=\"asd\" onChange={onChange} />\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={6}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                        \r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={openLoginDialog}>LOGIN SAJA</p>\r\n                                <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                    <div className=\"wordsButton-auth\">\r\n                                        NEXT\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowRegister ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                {showDialog()}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuDetail.js",["271","272"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/MenuDetail.scss'\r\n// import prodPhoto from '../../Asset/Illustration/samplefood.jpg'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport backLogo from '../../Asset/Icon/arrow-left.png'\r\nimport StarIcon from '../../Asset/Icon/star.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport MenuSelection from './MenuSelection'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport RegisterDialog from '../Authentication/RegisterDialog';\r\nimport Cookies from \"js-cookie\"\r\nimport PinDialog from \"../Authentication/PinDialog\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MenuDetail = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const menuCateg = props.handleCateg\r\n    const [menuSelect, setmenuSelect] = useState(false)\r\n    const [menuCondition, setmenuCondition] = useState(false)\r\n    const [registerDialog, setRegister] = useState(false)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [loadingButton, setloadingButton] = useState(true)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHide()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHide()\r\n        } else {\r\n            setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const addtoCart = () => {\r\n        if (!loadingButton) {\r\n            console.log('waitbro');\r\n        } else {\r\n            if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else if (!AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond) {\r\n                props.handleClick()\r\n                dispatch({ type: 'DEFAULTSTATE' })\r\n                props.onHide()\r\n            } else {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'error',\r\n                    text: 'Pilih terlebih dahulu pilihan yang wajib',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"Close\",\r\n                    closeOnConfirm: false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const countTotalPrice = () => {\r\n        let totalCheckPrice = 0\r\n        let totalRadioPrice = 0\r\n        let totalPrice = 0\r\n        let sumCheckPrice = AllRedu.checkboxes\r\n        sumCheckPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalCheckPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        let sumRadioPrice = AllRedu.radiobutton\r\n        sumRadioPrice.forEach(firstVal => {\r\n            firstVal.forEach(nestedVal => {\r\n                totalRadioPrice += nestedVal.price\r\n            })\r\n        });\r\n\r\n        totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n        totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n        totalPrice += totalCheckPrice + totalRadioPrice\r\n        totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n        return totalPrice\r\n    }\r\n\r\n    let auth;\r\n\r\n    const openMenuSelect = () => {\r\n\r\n        if (Cookies.get(\"auth\") === undefined) {\r\n            // props.onHide();\r\n            setRegister(true);\r\n            // showRegisterDialog();\r\n        } else {\r\n            auth = JSON.parse(Cookies.get(\"auth\"));\r\n            if (auth.isLogged === false) {\r\n                openPinDialog();\r\n            } else {\r\n                setloadingButton(false)\r\n                dispatch({ type: 'LOADING' })\r\n                setmenuSelect(true)\r\n                dispatch({ type: 'FOODCATEG', payload: findCateg })\r\n            }\r\n            // openPinDialog();\r\n\r\n        }\r\n    }\r\n\r\n    let findCateg\r\n    if (AllRedu.openMenuCart) {\r\n        findCateg = props.datas.foodCategory\r\n        if (!menuCondition) {\r\n            setmenuSelect(true)\r\n            setmenuCondition(true)\r\n        }\r\n    } else {\r\n        findCateg = menuCateg.filter((val) => {\r\n            return props.datas.category === parseInt(val.category_id)\r\n        })\r\n        findCateg = findCateg[0].category_name.toLowerCase()\r\n    }\r\n\r\n    let totalCheckPrice = 0\r\n    let totalRadioPrice = 0\r\n    let totalPrice = 0\r\n    let sumCheckPrice = AllRedu.checkboxes\r\n    sumCheckPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalCheckPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    let sumRadioPrice = AllRedu.radiobutton\r\n    sumRadioPrice.forEach(firstVal => {\r\n        firstVal.forEach(nestedVal => {\r\n            totalRadioPrice += nestedVal.price\r\n        })\r\n    });\r\n\r\n    totalCheckPrice = totalCheckPrice * AllRedu.validQTY\r\n    totalRadioPrice = totalRadioPrice * AllRedu.validQTY\r\n    totalPrice += totalCheckPrice + totalRadioPrice\r\n    totalPrice += AllRedu.validQTY * props.datas.foodPrice\r\n    props.handleAmount(totalPrice)\r\n\r\n    const showRegisterDialog = () => {\r\n        if (registerDialog) {\r\n            return (\r\n                <RegisterDialog\r\n                    isShowRegister={registerDialog}\r\n                    onHideRegister={() => setRegister(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        setEmail(auth.email);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        setPin(true);\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    // onHidePin={closeAuthDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const closeAuthDialog = () => {\r\n        setPin(false);\r\n        setRegister(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                    <div className='modalMenuDetail' style={{\r\n                        display: props.isShow ? 'block' : 'none'\r\n                    }} onClick={closeModal}\r\n                    >\r\n                        <div className='modal-content-menudetail' onClick={e => e.stopPropagation()}>\r\n                            {\r\n                                menuSelect ?\r\n                                    <span className='iconBack' onClick={backModal}>\r\n                                        <img src={backLogo} className='backLogo' alt='' />\r\n                                    </span>\r\n                                    :\r\n                                    <span className='iconClose' onClick={closeModal}>\r\n                                        <img src={closeLogo} className='closeLogo' alt='' />\r\n                                    </span>\r\n                            }\r\n\r\n                            <div className='menuDetail-layout'>\r\n                                <div className='menuContain-left'>\r\n                                    <div className='menuBanner'>\r\n                                        <img className='menuimg' src={props.datas.foodImage} alt='' />\r\n                                    </div>\r\n\r\n                                    <div className='menu-detail'>\r\n                                        {/* <div className='menu-star'>\r\n                                            <img className='menu-star-img' src={StarIcon} alt='' />\r\n                                            <h6 className='menu-star-rating'>5.0</h6>\r\n                                        </div> */}\r\n\r\n                                        <div className='menu-name'>\r\n                                            {props.datas.foodName}\r\n                                        </div>\r\n\r\n                                        <div className='menu-category'>\r\n                                            {findCateg}\r\n                                        </div>\r\n\r\n                                        <div className='menu-price'>\r\n                                            {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='menuContain-right'>\r\n                                    {\r\n                                        menuSelect ?\r\n                                            <Scrollbars style={{ height: \"calc(100% - 133px)\" }}>\r\n                                                <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                                            </Scrollbars>\r\n                                            :\r\n                                            <div className='menuDesc'>\r\n                                                <div className='menuDesc-title'>\r\n                                                    Description\r\n                                                </div>\r\n                                                <div className='menuDesc-content'>\r\n                                                    {props.datas.foodDesc}\r\n                                                </div>\r\n                                            </div>\r\n                                    }\r\n\r\n                                    <div className='menuButton'>\r\n                                        {\r\n                                            menuSelect ?\r\n                                                <div className='openMenuSelection' style={{\r\n                                                    backgroundColor:\r\n                                                        AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                            '#4bb7ac'\r\n                                                            :\r\n                                                            !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                '#4bb7ac'\r\n                                                                :\r\n                                                                AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                    '#4bb7ac'\r\n                                                                    :\r\n                                                                    !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                                        '#4bb7ac'\r\n                                                                        :\r\n                                                                        '#aaaaaa'\r\n                                                }} onClick={addtoCart}>\r\n                                                    {\r\n                                                        !loadingButton ?\r\n                                                            <Loader\r\n                                                                type=\"ThreeDots\"\r\n                                                                color=\"#ffffff\"\r\n                                                                height={70}\r\n                                                                width={70}\r\n                                                            />\r\n                                                            :\r\n                                                            <h2 className='add-words'>\r\n                                                                {\r\n                                                                    AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                                                                        `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                                                                        :\r\n                                                                        `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                                                                }\r\n                                                            </h2>\r\n                                                    }\r\n                                                </div>\r\n                                                :\r\n                                                <div onClick={openMenuSelect} className='openMenuSelection'>\r\n                                                    <h2 className='add-words'>\r\n                                                        PESAN\r\n                                                    </h2>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className='mob-modalMenuDetail' style={{\r\n                        display: props.isShow ? 'block' : 'none'\r\n                    }} onClick={closeModal}\r\n                    >\r\n                        <div className='mob-modal-content-menudetail' onClick={e => e.stopPropagation()} style={{ height: menuSelect ? '88vh' : 'auto' }}>\r\n                            <div className='mob-menuBanner'>\r\n                                <img className='mob-menuimg' src={props.datas.foodImage} alt='' />\r\n                                {\r\n                                    menuSelect ?\r\n                                        <span className='mob-iconClose' onClick={backModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                        :\r\n                                        <span className='mob-iconClose' onClick={closeModal}>\r\n                                            <img src={closeLogo} className='mob-closeLogo' alt='' />\r\n                                        </span>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='mob-menuContain'>\r\n                                <div className='mob-inside-menuContain' style={{ boxShadow: menuSelect ? \"0px 5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n                                    <div className='mob-menu-detail'>\r\n                                        {/* <div className='mob-menu-star'>\r\n                                            <img className='mob-menu-star-img' src={StarIcon} alt='' />\r\n                                            <h6 className='mob-menu-star-rating'>{props.datas.foodRating}</h6>\r\n                                        </div> */}\r\n\r\n                                        <div className='mob-menu-name'>\r\n                                            {props.datas.foodName}\r\n                                        </div>\r\n\r\n                                        <div className='mob-menu-category'>\r\n                                            {findCateg}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='mob-menu-price'>\r\n                                        {Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {\r\n                                    menuSelect ?\r\n                                        <Scrollbars style={{ height: \"calc(88vh - 375px)\" }}>\r\n                                            <MenuSelection handleData={props.handleData} datas={props.datas} handleClick={props.handleClick} loadingButton={() => setloadingButton(true)} />\r\n                                        </Scrollbars>\r\n                                        :\r\n                                        <div className='mob-menuDesc'>\r\n                                            <div className='mob-menu-desc'>\r\n                                                {props.datas.foodDesc}\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n\r\n                                <div className='mob-menuButton' style={{ boxShadow: menuSelect ? \"0px -5px 4px rgba(0, 0, 0, 0.1)\" : \"none\" }}>\r\n\r\n                                    {\r\n                                        menuSelect ?\r\n                                            <div className='mob-openMenuSelection' style={{\r\n                                                backgroundColor:\r\n                                                    AllRedu.mandatCheck && AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                        '#4bb7ac'\r\n                                                        :\r\n                                                        !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                            '#4bb7ac'\r\n                                                            :\r\n                                                            AllRedu.mandatCheck && AllRedu.mandatCheckCond && !AllRedu.mandatRadio && !AllRedu.mandatRadioCond ?\r\n                                                                '#4bb7ac'\r\n                                                                :\r\n                                                                !AllRedu.mandatCheck && !AllRedu.mandatCheckCond && AllRedu.mandatRadio && AllRedu.mandatRadioCond ?\r\n                                                                    '#4bb7ac'\r\n                                                                    :\r\n                                                                    '#aaaaaa'\r\n                                            }} onClick={addtoCart}>\r\n                                                {\r\n                                                    !loadingButton ?\r\n                                                        <Loader\r\n                                                            type=\"ThreeDots\"\r\n                                                            color=\"#ffffff\"\r\n                                                            height={70}\r\n                                                            width={70}\r\n                                                        />\r\n                                                        :\r\n                                                        <h2 className='mob-add-words'>\r\n                                                            {\r\n                                                                AllRedu.checkboxes.length || AllRedu.radiobutton.length || AllRedu.validQTY ?\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(countTotalPrice())}`\r\n                                                                    :\r\n                                                                    `TAMBAH - ${Intl.NumberFormat(\"id-ID\").format(props.datas.foodPrice)}`\r\n                                                            }\r\n                                                        </h2>\r\n                                                }\r\n                                            </div>\r\n                                            :\r\n                                            <div onClick={openMenuSelect} className='mob-openMenuSelection' style={{ backgroundColor: '#4bb7ac' }}>\r\n                                                <h2 className='mob-add-words'>\r\n                                                    PESAN\r\n                                                </h2>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n            }\r\n            {showRegisterDialog()}\r\n            {showPinDialog()}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MenuDetail","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\NotifModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Tour\\TourPage.js",["273"],"import React, {useState} from \"react\";\r\nimport Tour from 'reactour';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../../Asset/scss/TourPage.scss';\r\n\r\n// const tour_steps = [\r\n//     {\r\n//         selector: '.merchantList-layout',\r\n//         content: 'This is my first Step'\r\n//     }\r\n// ];\r\n\r\nconst TourPage = (props) => {\r\n    // const [isTourOpen, setIsTourOpen] = useState(false);\r\n    const tour_steps = props.stepsContent;\r\n    const isTourOpen = props.isShowTour;\r\n    const isTourClose = props.isHideTour;\r\n\r\n    return (\r\n        <>\r\n            <Tour\r\n                steps={tour_steps}\r\n                isOpen={isTourOpen}\r\n                onRequestClose={isTourClose}\r\n                showNumber={false}\r\n                rounded={10}\r\n                nextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selanjutnya</Button>}\r\n                prevButton={<Button style={{ backgroundColor: \"#4056C6\" }} onClick={isTourClose}>Lewati</Button>}\r\n                lastStepNextButton={<Button style={{ backgroundColor: \"#4056C6\" }}>Selesai</Button>}\r\n                onAfterOpen={target => (document.body.style.overflowY = 'hidden')}\r\n                onBeforeClose={target => (document.body.style.overflowY = 'auto')}\r\n                className={\"tourpage\"}\r\n            />\r\n        </>\r\n      );\r\n    };\r\n    \r\nexport default TourPage;\r\n","D:\\PIKAPP\\pikapp-frontend\\src\\firebaseConfig.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ResetPin\\ConfirmResetPinDialog.js",["274","275","276","277"],"import React, { useState } from \"react\";\r\nimport '../../../Asset/scss/AuthenticationDialog.scss';\r\nimport closeLogo from '../../../Asset/Icon/close.png';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport Cookies from \"js-cookie\";\r\nimport PikaButton from \"../../../Component/Button/PikaButton\";\r\n\r\nconst ConfirmResetPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmResetPin, setConfirmResetPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [successStatus, setSuccessStatus] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmResetPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmResetPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const backToHome = (e) => {\r\n        window.location.href = '/'\r\n    }\r\n\r\n    const handleConfirmResetPin = (e) => {\r\n        setConfirmResetPin(e);\r\n    }\r\n\r\n    const checkConfirmResetPin = () => {\r\n        if (AuthRedu.dataResetPin.currentPin === confirmResetPin) {\r\n            return true;\r\n          } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n          }\r\n    };\r\n\r\n    const handleResetPin = (e) => {\r\n        if (checkConfirmResetPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            // email: email\r\n            pin : confirmResetPin\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/reset-pin/\" + AuthRedu.dataPinToken + \"/\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                setSuccessStatus(true);\r\n                var lastLink = { value: window.location.origin}\r\n                Cookies.set(\"lastLink\", lastLink,{ expires: 1});\r\n                localStorage.clear();\r\n                Cookies.remove(\"auth\");\r\n                dispatch({ type: 'DONELOAD' });\r\n                // props.DoneLoad();\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message);\r\n                    // setSuccessStatus(true);\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className=\"blankSpace\">\r\n\r\n                                            </div>\r\n\r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='modalMenuDetail-auth' style={{\r\n                    display: props.isShowConfirmResetPin ? 'block' : 'none'\r\n                }} onClick={closeModal}\r\n                >\r\n                    <div className='modal-content-menudetail-auth' onClick={e => e.stopPropagation()}>\r\n                        {\r\n                            <span className='iconClose-auth' onClick={closeModal}>\r\n                                <img src={closeLogo} className='closeLogo-auth' alt='' />\r\n                            </span>\r\n                        }\r\n\r\n                        <div className='menuDetail-layout-auth'>\r\n                            <div className='menuContain-all-auth'>\r\n                                <img src={pikappLogo} className='menuimg-auth' alt='' />\r\n\r\n                                <div className='menu-detail-auth'>\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='menu-name-auth'>\r\n                                            Perbarui PIN Anda \r\n                                        </div>\r\n                                        :\r\n                                        <div className='menu-name-auth'>\r\n                                            PIN Anda Berhasil Diubah! \r\n                                        </div>\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Konfirmasi 6 digit nomor PIN baru Anda\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mob-menu-category-auth'>\r\n                                            Silahkan lakukan login kembali untuk memesan\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    {\r\n                                        !successStatus ?\r\n                                        <div>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                        <PinInput\r\n                                                        length={6}\r\n                                                        focus\r\n                                                        // disabled\r\n                                                        secret\r\n                                                        ref={p => (pin => p)}\r\n                                                        type=\"number\"\r\n                                                        inputMode=\"numeric\"\r\n                                                        onChange={handleConfirmResetPin}\r\n                                                        />\r\n                                                        <div></div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Row>\r\n                                                    <Col xs={11}>\r\n                                                    {isValid || (\r\n                                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                                    )}\r\n                                                    </Col>\r\n                                                    <Col />\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                            \r\n                                            <div className='buttonSide-auth'>\r\n                                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                                {/* <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <div className=\"wordsButton-auth\">\r\n                                                        SUBMIT\r\n                                                    </div>\r\n                                                </div> */}\r\n\r\n                                                <div className=\"submitButton-auth\" onClick={handleResetPin}>\r\n                                                    <PikaButton \r\n                                                        title=\"SUBMIT\" \r\n                                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                                        handleClick={handleResetPin}\r\n                                                        >\r\n                                                    </PikaButton>\r\n                                                </div>\r\n\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <div className='buttonSide-auth top270'>\r\n                                                <p className=\"linkWords\" onClick={backToHome}>KEMBALI KE HOME</p>\r\n                                            </div>\r\n        \r\n                                            <div className='bottomSide-auth'>\r\n                                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                                <div className='reqSide-auth'>\r\n                                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmResetPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\PaymentModal.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Modal\\CartModal.js",["278"],"import React, { useState } from 'react'\r\nimport closeNarrow from '../../Asset/Icon/closeNarrow.png'\r\nimport diningTableColor from '../../Asset/Icon/diningTableColor.png'\r\nimport takeawayColor from '../../Asset/Icon/takeawayColor.png'\r\nimport CashierPayment from '../../Asset/Icon/CashierPayment.png'\r\nimport OvoPayment from '../../Asset/Icon/ovo_icon.png'\r\nimport '../../Asset/scss/CartModal.scss'\r\n\r\nconst CartModal = (props) => {\r\n    const [radioNumEat, setradioNumEat] = useState(props.indexOptionEat)\r\n    const [radioNumPay, setradioNumPay] = useState(props.indexOptionPay)\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        props.onHide()\r\n    }\r\n\r\n    const onChangeRadio = (num, title) => {\r\n        if (title === 'Pilih Cara Makan Anda') {\r\n            setradioNumEat(num)\r\n            props.handleData(num)\r\n            props.onHide()\r\n        } else if(title === 'Bayar Pakai Apa') {\r\n            setradioNumPay(num)\r\n            props.handleData(num)\r\n            props.onHide()\r\n        }\r\n    }\r\n\r\n    const choicesCartModal = () => {\r\n        let optionList = props.detailOptions\r\n        let choicesModal = optionList.map((optionVal, keyOption) => {\r\n            let imageOption;\r\n            if (optionVal.image === \"dineIn\") {\r\n                imageOption = diningTableColor;\r\n            } else if (optionVal.image === \"takeaway\") {\r\n                imageOption = takeawayColor;\r\n            } else if (optionVal.image === \"cashier\") {\r\n                imageOption = CashierPayment;\r\n            } else if (optionVal.image === \"ovo\") {\r\n                imageOption = OvoPayment;\r\n            }\r\n\r\n            if (props.title === 'Pilih Cara Makan Anda') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'EATMETHOD'} defaultChecked={radioNumEat === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Bayar Pakai Apa') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailContent'>\r\n                        <div className='modalCart-radioSection'>\r\n                            <input type='radio' id={optionVal.image} onChange={() => onChangeRadio(keyOption, props.title)} name={'PAYMETHOD'} defaultChecked={radioNumPay === keyOption ? true : false} />\r\n                            <label htmlFor={optionVal.image}>\r\n                                <div className='modalCart-radioSide'>\r\n                                    <img className='modalCartradio-image' src={imageOption} alt='' />\r\n                                    <div className='modalCart-radioTitle'>{optionVal.option}</div>\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else if (props.title === 'Rincian Pembayaran') {\r\n                return (\r\n                    <div key={keyOption} className='modalCart-detailTotalPrice'>\r\n                        <div className='modalCart-totalPrice'>\r\n                            <h2 className='modalCart-totalPrice-left'>Total Harga Barang</h2>\r\n                            <h2 className='modalCart-totalPrice-right'>{Intl.NumberFormat(\"id-ID\").format(optionVal.totalPrice)}</h2>\r\n                        </div>\r\n\r\n                        <div className='modalCart-discount'>\r\n                            <h2 className='modalCart-discount-left'>Diskon</h2>\r\n                            <h2 className='modalCart-discount-right'>{optionVal.discountPrice}</h2>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n        return choicesModal\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='modalCartPage' style={{\r\n                display: props.isShow ? 'block' : 'none'\r\n            }} onClick={closeModal}>\r\n                <div className='modalCartContent' onClick={e => e.stopPropagation()}>\r\n                    <span className='iconCloseNarrow' onClick={closeModal}>\r\n                        <img src={closeNarrow} className='closeLogoNarrow' alt='' />\r\n                    </span>\r\n\r\n                    <div className='modalCart-detail'>\r\n                        <h1 className='modalCart-title'>{props.title}</h1>\r\n\r\n                        {choicesCartModal()}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartModal","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\index.js",[],"D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ForgotPinDialog.js",["279","280","281","282","283"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\n\r\nconst ForgotPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideForgotPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideForgotPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/forget-pin\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    text: 'Link verifikasi telah dikirim ke alamat email Anda. Segera lakukan reset PIN untuk melanjutkan proses ini.',\r\n                    showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    closeOnConfirm: false,\r\n                    // timer: 3000\r\n                }).then(() => {\r\n                    props.onHideForgotFlow();\r\n                    dispatch({ type: 'DONELOAD' });\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                            \r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Lupa PIN ?\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Silahkan masukkan email Anda yang terdaftar.\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                    <Col />\r\n                                </Row>\r\n                                \r\n                            </Form>\r\n\r\n                            <div className='buttonSide-auth'>\r\n                                <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                                {/* <div className=\"submitButton-auth\">\r\n                                    <div className=\"wordsButton-auth\" onClick={handleSubmit}>\r\n                                        SUBMIT\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                <div className=\"submitButton-auth\">\r\n                                    <PikaButton \r\n                                        title=\"SUBMIT\" \r\n                                        buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                        handleClick={handleSubmit}\r\n                                        >\r\n                                    </PikaButton>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='bottomSide-auth'>\r\n                                <h4 className='countrySide-auth'>Indonesia</h4>\r\n                                <div className='reqSide-auth'>\r\n                                    <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                    <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ForgotPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\ConfirmPinDialog.js",["284","285","286","287","288","289","290","291","292","293"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport Cookies from \"js-cookie\";\r\nimport LoginDialog from \"../Authentication/LoginDialog\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst ConfirmPinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [loginDialog, setLogin] = useState(false)\r\n    const [confirmPin, setConfirmPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideConfirmPin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideConfirmPin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const handleConfirmPin = (e) => {\r\n        setConfirmPin(e);\r\n    }\r\n\r\n    const checkConfirmPin = () => {\r\n        if (AuthRedu.dataRegister.pin === confirmPin) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"PIN does not match.\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        if (checkConfirmPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            password: confirmPin,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            gender: \"MALE\",\r\n            birth_day: \"01011970\",\r\n            token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/register\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n            },\r\n            method: \"POST\",\r\n            data: data,\r\n        })\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'success',\r\n                    title: 'Register Berhasil.',\r\n                    // showConfirmButton: true,\r\n                    confirmButtonColor: \"#4bb7ac\",\r\n                    confirmButtonText: \"OK\",\r\n                    // closeOnConfirm: false,\r\n                    timer: 3000\r\n                }).then(() => {\r\n                    handleLogin();\r\n                })\r\n                // window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data !== undefined) {\r\n                    alert(err.response.data.err_message)\r\n                    // props.DoneLoad()\r\n                    dispatch({ type: 'DONELOAD' });\r\n                }\r\n                setCaptchaCounter(captchaCounter + 1);\r\n            });\r\n\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        const data = {\r\n            username: AuthRedu.dataRegister.email,\r\n            pin: confirmPin,\r\n            fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            auth.isLogged = true;\r\n            auth.token = res.data.token;\r\n            auth.new_event = res.data.new_event;\r\n            auth.recommendation_status = res.data.recommendation_status;\r\n            auth.is_email_verified = res.data.is_email_verified;\r\n            auth.email = AuthRedu.dataRegister.email;\r\n            Cookies.set(\"auth\", auth, { expires: 1 });\r\n            var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n            var latitude = getLocation.lat\r\n            var longitude = getLocation.lon\r\n            // props.onHideConfirmPin()\r\n            props.onHideRegisterFlow();\r\n            dispatch({ type: 'DONELOAD' });\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value;\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            //     window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        }) \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Konfirmasi PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Konfirmasi 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    onChange={handleConfirmPin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                {isValid || (\r\n                                    <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                        \r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n\r\n                            {/* <div className=\"submitButton-auth\" onClick={handleRegister}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"submitButton-auth\">\r\n                                <PikaButton \r\n                                    title=\"SUBMIT\" \r\n                                    buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                    handleClick={handleRegister}\r\n                                    >\r\n                                </PikaButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmPinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\PinDialog.js",["294","295","296","297","298","299","300","301","302","303","304"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PinInput from \"react-pin-input\";\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport ConfirmPinDialog from './ConfirmPinDialog';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ForgotPin from \"./ForgotPinDialog\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NotifModal from '../Modal/NotifModal';\r\n\r\nconst PinDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const AuthRedu = useSelector(state => state.AuthRedu);\r\n    const [confirmPinDialog, setConfirmPin] = useState(false);\r\n    const [forgotPinDialog, setForgotPin] = useState(false);\r\n    const [pin, setPin] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isLoginStep, setIsLoginStep] = useState(false);\r\n    const [captchaCounter, setCaptchaCounter] = useState(0);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHidePin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHidePin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openConfirmPinDialog = () => {\r\n\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            full_name: AuthRedu.dataRegister.full_name,\r\n            phone_number: AuthRedu.dataRegister.phone_number,\r\n            email: AuthRedu.dataRegister.email,\r\n            pin: pin\r\n        };\r\n\r\n        dispatch({ type: 'REGISTER', payload: data });\r\n        setIsLoginStep(false);\r\n        // setConfirmPin(true);\r\n        props.onHidePin();\r\n        props.onShowConfirm();\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        if (checkPin() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        dispatch({ type: 'LOADING' });\r\n\r\n        const data = {\r\n            username: AuthRedu.dataLogin.email,\r\n            pin: pin,\r\n            fcm_token: \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\",\r\n        };\r\n        const auth = {\r\n            isLogged: false,\r\n            token: \"\",\r\n            new_event: true,\r\n            recommendation_status: false,\r\n            email: \"\",\r\n            is_email_verified: true\r\n        };\r\n\r\n        let uuid = uuidV4();\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        axios(address + \"auth/v2/login\", {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-request-id\": uuid,\r\n            \"x-request-timestamp\": date,\r\n            \"x-client-id\": clientId,\r\n        },\r\n        method: \"POST\",\r\n        data: data,\r\n        })\r\n        .then((res) => {\r\n            setSuccessMessage(\"Login Berhasil.\");\r\n            setTimeout(() => {\r\n                auth.isLogged = true;\r\n                auth.token = res.data.token;\r\n                auth.new_event = res.data.new_event;\r\n                auth.recommendation_status = res.data.recommendation_status;\r\n                auth.is_email_verified = res.data.is_email_verified;\r\n                auth.email = AuthRedu.dataLogin.email;\r\n                Cookies.set(\"auth\", auth, { expires: 1 });\r\n                var getLocation = JSON.parse(localStorage.getItem(\"longlat\"))\r\n                var latitude = getLocation.lat\r\n                var longitude = getLocation.lon\r\n                // props.onHidePin()\r\n                props.onHideLoginFlow()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }, 1000);\r\n            // if (Cookies.get(\"lastLink\") !== undefined) {\r\n            //     var lastlink = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // }\r\n            // window.location.reload();\r\n            // if (lastlink.includes(\"?latitude\") || lastlink.includes(\"store?\")) {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value\r\n            // } else {\r\n            //     window.location.href = JSON.parse(Cookies.get(\"lastLink\")).value + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n            // } else {\r\n            // window.location.href = window.location.origin + `?latitude=${latitude}&longitude=${longitude}`\r\n            // }\r\n        })  \r\n        .catch((err) => {\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.err_message)\r\n                // props.DoneLoad()\r\n                dispatch({ type: 'DONELOAD' });\r\n            }\r\n            setCaptchaCounter(captchaCounter + 1);\r\n        });\r\n    }\r\n\r\n    const showConfirmPinDialog = () => {\r\n        if (confirmPinDialog) {\r\n            return (\r\n                <ConfirmPinDialog\r\n                    isShowConfirmPin={confirmPinDialog}\r\n                    onHideConfirmPin={() => setConfirmPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const openForgotPinDialog = () => {\r\n        props.onHidePin();\r\n        props.onShowForgotPin();\r\n        // setForgotPin(true);\r\n    }\r\n\r\n    const showForgotPinDialog = () => {\r\n        if (forgotPinDialog) {\r\n            return (\r\n                <ForgotPin\r\n                    isShowForgotPin={forgotPinDialog}\r\n                    onHideForgotPin={() => setForgotPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handlePin = (e) => {\r\n        setPin(e);\r\n    }\r\n\r\n    const checkPin = () => {\r\n        if (pin.length < 6) {\r\n            setErrorMsg(\"PIN must be within 6 digit numeric.\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const showNotifModal = () => {\r\n        if (AllRedu.buttonLoad === false) {\r\n            return <NotifModal isShowNotif={AllRedu.buttonLoad} responseMessage={successMessage} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Ketik PIN Anda\r\n                    </div>\r\n\r\n                    <div className='mob-menu-category-auth'>\r\n                        Ketik 6 digit nomor PIN Anda\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    <PinInput\r\n                                    length={6}\r\n                                    focus\r\n                                    // disabled\r\n                                    secret\r\n                                    ref={p => (pin => p)}\r\n                                    type=\"number\"\r\n                                    inputMode=\"numeric\"\r\n                                    // onChange={handlePin}\r\n                                    onComplete={handlePin}\r\n                                    />\r\n                                    <div></div>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                </Col>\r\n                                <Col />\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {\r\n                                    !AuthRedu.isLoginStep ?\r\n                                    \r\n                                    <div className='menu-category-auth btm30'>\r\n                                        \r\n                                    </div>\r\n                                    :\r\n                                    <div className='menu-category-auth btm30' onClick={openForgotPinDialog}>\r\n                                        LUPA PIN ?\r\n                                    </div>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>KEMBALI</p>\r\n                            {\r\n                                !AuthRedu.isLoginStep ?\r\n                                    <div className=\"submitButton-auth\" onClick={openConfirmPinDialog}>\r\n                                        <div className=\"wordsButton-auth\">\r\n                                            NEXT\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    // <div className=\"submitButton-auth\" onClick={handleLogin}>\r\n                                    //     <div className=\"wordsButton-auth\">\r\n                                    //         SUBMIT\r\n                                    //     </div>\r\n                                    // </div>\r\n\r\n                                    <div className=\"submitButton-auth\">\r\n                                        <PikaButton \r\n                                            title=\"SUBMIT\" \r\n                                            buttonStyle=\"submitButton-auth wordsButton-auth\"\r\n                                            handleClick={handleLogin}\r\n                                            >\r\n                                        </PikaButton>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                    </div>\r\n                </div>\r\n            }\r\n            {showNotifModal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PinDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Authentication\\LoginDialog.js",["305","306","307","308","309","310","311","312"],"import React, { useState } from \"react\";\r\nimport '../../Asset/scss/AuthenticationDialog.scss'\r\nimport closeLogo from '../../Asset/Icon/close.png'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport pikappLogo from '../../Asset/Logo/logo4x.png';\r\nimport { Alert, Col, Form, Row } from \"react-bootstrap\";\r\nimport PikaButton from \"../../Component/Button/PikaButton\";\r\nimport PikaTextField from \"../../Component/TextField/PikaTextField\";\r\nimport PinDialog from \"./PinDialog\";\r\n\r\nconst LoginDialog = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [pinDialog, setPin] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [isCaptcha, setIsCaptcha] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    const closeModal = (e) => {\r\n        e.stopPropagation()\r\n        dispatch({ type: 'DEFAULTSTATE' })\r\n        props.onHideLogin()\r\n    }\r\n\r\n    const backModal = (e) => {\r\n        if (AllRedu.openMenuCart) {\r\n            // setmenuSelect(false)\r\n            e.stopPropagation()\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n            props.onHideLogin()\r\n        } else {\r\n            // setmenuSelect(false)\r\n            dispatch({ type: 'DEFAULTSTATE' })\r\n        }\r\n    }\r\n\r\n    const openPinDialog = () => {\r\n        if (checkEmail() === false) {\r\n            setIsValid(false);\r\n            return;\r\n        }\r\n\r\n        setIsValid(true);\r\n\r\n        const data = {\r\n            email: email\r\n        };\r\n\r\n        dispatch({ type: 'LOGIN', payload: data });\r\n        dispatch({ type: 'LOGINSTEP', payload: true });\r\n\r\n        // setPin(true);\r\n        props.onHideLogin();\r\n        props.onShowPin();\r\n    }\r\n\r\n    const showPinDialog = () => {\r\n        if (pinDialog) {\r\n            return (\r\n                <PinDialog\r\n                    isShowPin={pinDialog}\r\n                    onHidePin={() => setPin(false)}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        let emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (emailRegex.test(email)) {\r\n            return true;\r\n        } else {\r\n            setErrorMsg(\"Email is not valid.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isMobile ?\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n\r\n                <div className='menu-detail-auth'>\r\n                    <div className='menu-name-auth'>\r\n                        Selangkah Lagi Sebelum Memesan!\r\n                    </div>\r\n\r\n                    <div className='textfield-auth'>\r\n                        <input type='email' className='textfieldinput-auth' placeholder=\"Alamat Email\" onChange={handleEmail} />\r\n                        \r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={11}>\r\n                                    {isValid || (\r\n                                        <Alert variant=\"danger\">{errorMsg}</Alert>\r\n                                    )}\r\n                                    </Col>\r\n                                <Col />\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n\r\n                        <div className='buttonSide-auth'>\r\n                            <p className=\"linkWords\" onClick={closeModal}>DAFTAR SAJA</p>\r\n                            <div className=\"submitButton-auth\" onClick={openPinDialog}>\r\n                                <div className=\"wordsButton-auth\">\r\n                                    SUBMIT\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='bottomSide-auth'>\r\n                            <h4 className='countrySide-auth'>Indonesia</h4>\r\n                            <div className='reqSide-auth'>\r\n                                <h4 className='reqSideWord-auth'>Privasi</h4>\r\n                                <h4 className='reqSideWord-auth'>Persyaratan</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginDialog","D:\\PIKAPP\\pikapp-frontend\\src\\Component\\Menu\\MenuSelection.js",["313","314","315"],"import React, { useEffect, useState } from \"react\";\r\nimport '../../Asset/scss/MenuSelection.scss'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Autosize from 'autosize'\r\nimport { ValidQty } from '../../Redux/Actions'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Axios from 'axios'\r\nimport { address, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport Loader from 'react-loader-spinner'\r\n\r\n// const checkboxDummyData = [\r\n//     { additionname: 'topping', maxchoice: 3, isMandat: true, listaddition: [{ name: 'coklat', price: 5000, isChecked: false }, { name: 'keju', price: 6000, isChecked: false }, { name: 'pisang', price: 7000, isChecked: false }, { name: 'wijen', price: 8000, isChecked: false }] },\r\n//     { additionname: 'boba', maxchoice: 2, isMandat: false, listaddition: [{ name: 'rainbow', price: 1000, isChecked: false }, { name: 'jelly', price: 2000, isChecked: false }, { name: 'pudding', price: 3000, isChecked: false }, { name: 'pearl', price: 4000, isChecked: false }] },\r\n// ]\r\n\r\n// const radioDummyData = [\r\n//     { additionname: 'level pedas', isMandat: true, listaddition: [{ name: 'tidak pedas', isChecked: false }, { name: 'pedas', isChecked: false }, { name: 'pedas mampus', isChecked: false }] },\r\n//     { additionname: 'level dingin', isMandat: false, listaddition: [{ name: 'tidak dingin', isChecked: false }, { name: 'dingin', isChecked: false }, { name: 'dingin mampus', isChecked: false }] },\r\n// ]\r\n\r\nconst MenuSelection = (props) => {\r\n    const dispatch = useDispatch()\r\n    const AllRedu = useSelector(state => state.AllRedu)\r\n    const [detailCategory, setdetailCategory] = useState([\r\n        {\r\n            name: \"\",\r\n            amount: 1,\r\n        },\r\n    ])\r\n    const [note, setnote] = useState('')\r\n    const [checkboxVal, setcheckboxVal] = useState([])\r\n    const [checkboxData, setcheckboxData] = useState([])\r\n    const [checkboxMatch, setcheckboxMatch] = useState([])\r\n    const [totalCheckMandat, settotalCheckMandat] = useState(0)\r\n    const [indexCheckMandat, setindexCheckMandat] = useState(null)\r\n\r\n    const [radioVal, setradioVal] = useState([])\r\n    const [radioData, setradioData] = useState([])\r\n    const [radioMatch, setradioMatch] = useState([])\r\n    const [totalRadioMandat, settotalRadioMandat] = useState(0)\r\n    // const [indexGroupRadioMandat, setindexGroupRadioMandat] = useState(null)\r\n    // const [indexEachRadioMandat, setindexEachRadioMandat] = useState(null)\r\n\r\n    const [updateDataEdit, setupdateDataEdit] = useState(false)\r\n    const [updateEditChoice, setupdateEditChoice] = useState(false)\r\n\r\n    const isMobile = useMediaQuery({ maxWidth: 768 })\r\n\r\n    useEffect(() => {\r\n        Autosize(document.getElementById('note'))\r\n\r\n        //hit API in order to get response of product detail v2\r\n        let uuid = uuidV4()\r\n        uuid = uuid.replace(/-/g, \"\");\r\n        const date = new Date().toISOString();\r\n        Axios(`${address}/home/v2/detail/product/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-request-id\": uuid,\r\n                \"x-request-timestamp\": date,\r\n                \"x-client-id\": clientId,\r\n                \"token\": \"PUBLIC\",\r\n                \"pid\": props.datas.productId,\r\n            },\r\n            method: 'GET'\r\n        }).then(productRes => {\r\n            let productDet = productRes.data.results.extra_menus.extra_menu\r\n            let radioResponse = []\r\n            let checkboxResponse = []\r\n            productDet.forEach(valProduct => {\r\n                if (valProduct.menu_type === 'RADIO') {\r\n                    radioResponse.push(valProduct)\r\n                } else {\r\n                    checkboxResponse.push(valProduct)\r\n                }\r\n            })\r\n\r\n            let radioData = []\r\n            let radioValData = []\r\n            radioResponse.forEach(valRadRes => {\r\n                let listadditionradio = []\r\n                valRadRes.menu_extra_item.forEach(valList => {\r\n                    listadditionradio.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                radioData.push({\r\n                    additionname: valRadRes.menu_name,\r\n                    isMandat: valRadRes.is_mandatory,\r\n                    listaddition: listadditionradio\r\n                })\r\n                radioValData.push([])\r\n            })\r\n\r\n            let checkboxData = []\r\n            let checkValData = []\r\n            checkboxResponse.forEach(valCheckRes => {\r\n                let listadditioncheckbox = []\r\n                valCheckRes.menu_extra_item.forEach(valList => {\r\n                    listadditioncheckbox.push({\r\n                        name: valList.item_name,\r\n                        price: valList.extra_fee,\r\n                        isChecked: false\r\n                    })\r\n                })\r\n                checkboxData.push({\r\n                    additionname: valCheckRes.menu_name,\r\n                    maxchoice: valCheckRes.max_choice,\r\n                    isMandat: valCheckRes.is_mandatory,\r\n                    listaddition: listadditioncheckbox\r\n                })\r\n                checkValData.push([])\r\n            })\r\n\r\n            //set mandatory for checkboxes\r\n            let mandatCheckAvailability = checkboxData.length\r\n            let mandatCheckLength = checkboxData.length\r\n            let checkboxMandat = []\r\n            let totalMandatforCheck = 0\r\n            checkboxData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    checkboxMandat.push(false)\r\n                    totalMandatforCheck++\r\n                    mandatCheckAvailability = mandatCheckAvailability - 1\r\n                } else {\r\n                    checkboxMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatCheckLength === mandatCheckAvailability) {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECKCOND', payload: true })\r\n            }\r\n            setcheckboxMatch(checkboxMandat)\r\n            settotalCheckMandat(totalMandatforCheck)\r\n\r\n            //set mandatory for radio\r\n            let mandatRadioAvailability = radioData.length\r\n            let mandatRadioLength = radioData.length\r\n            let radioMandat = []\r\n            let totalMandatforRadio = 0\r\n            radioData.forEach(valCheck => {\r\n                if (valCheck.isMandat) {\r\n                    radioMandat.push(false)\r\n                    totalMandatforRadio++\r\n                    mandatRadioAvailability = mandatRadioAvailability - 1\r\n                } else {\r\n                    radioMandat.push(false)\r\n                }\r\n            })\r\n            if (mandatRadioLength === mandatRadioAvailability) {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIOCOND', payload: true })\r\n            }\r\n            setradioMatch(radioMandat)\r\n            settotalRadioMandat(totalMandatforRadio)\r\n\r\n            if (!AllRedu.openMenuCart) {\r\n                var datas = props.datas\r\n                var list = []\r\n                if (datas.foodExt !== undefined) {\r\n                    datas.foodExt.map((data) => {\r\n                        return list.push({\r\n                            name: data.name,\r\n                            amount: data.amount + 1,\r\n                        });\r\n                    });\r\n                    props.ValidQty(1)\r\n                    setdetailCategory(list);\r\n                    setradioData(radioData)\r\n                    setcheckboxData(checkboxData)\r\n                    setradioVal(radioValData)\r\n                    setcheckboxVal(checkValData)\r\n                }\r\n            } else {\r\n                let amountofProd = props.datas.foodExt\r\n                amountofProd.forEach((val) => {\r\n                    props.ValidQty(val.amount)\r\n                })\r\n                setdetailCategory(props.datas.foodExt)\r\n                setnote(props.datas.foodNote)\r\n                setradioData(radioData)\r\n                setcheckboxData(checkboxData)\r\n                dispatch({ type: 'CHECKBOXES', payload: props.datas.foodListCheckbox })\r\n                dispatch({ type: 'RADIOBUTTON', payload: props.datas.foodListRadio })\r\n                setupdateDataEdit(true)\r\n                setradioVal(props.datas.foodListRadio)\r\n                setcheckboxVal(props.datas.foodListCheckbox)\r\n            }\r\n            dispatch({ type: 'DONELOAD' })\r\n            props.loadingButton()\r\n        }).catch(err => console.log(err))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (AllRedu.openMenuCart && updateDataEdit) {\r\n            //this function is used for replace api data with edit data (CHECKBOX)\r\n            let editCheckbox = []\r\n            let newlistcheckboxAddition = []\r\n            let foodListCheckbox = props.datas.foodListCheckbox\r\n\r\n            checkboxData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListCheckbox.forEach((foodfirstVal, indfoodFirst) => {\r\n                        let countNoMatch = 1\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistcheckboxAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    if (countNoMatch === foodfirstVal.length) {\r\n                                        newlistcheckboxAddition.push({\r\n                                            name: secondVal.name,\r\n                                            price: secondVal.price,\r\n                                            isChecked: false\r\n                                        })\r\n                                        countNoMatch = 1\r\n                                    } else {\r\n                                        countNoMatch++\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListCheckbox[indfirstVal].length === 0) {\r\n                        newlistcheckboxAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editCheckbox.push({\r\n                    additionname: firstVal.additionname,\r\n                    maxchoice: firstVal.maxchoice,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistcheckboxAddition\r\n                })\r\n                newlistcheckboxAddition = []\r\n            })\r\n            let editTotalcheckMandat = 0\r\n            let editArraycheckMandat = []\r\n            editCheckbox.forEach(valEdit => {\r\n                editArraycheckMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalcheckMandat++\r\n                }\r\n            })\r\n            if (editTotalcheckMandat === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(editArraycheckMandat)\r\n\r\n            //this function is used for replace api data with edit data (RADIO)\r\n            let editRadio = []\r\n            let newlistradioAddition = []\r\n            let foodListRadio = props.datas.foodListRadio\r\n\r\n            radioData.forEach((firstVal, indfirstVal) => {\r\n                firstVal.listaddition.forEach(secondVal => {\r\n\r\n                    foodListRadio.forEach((foodfirstVal, indfoodFirst) => {\r\n                        foodfirstVal.forEach((foodsecondVal) => {\r\n                            if (indfirstVal === indfoodFirst) {\r\n                                if (secondVal.name === foodsecondVal.name) {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: true\r\n                                    })\r\n                                } else {\r\n                                    newlistradioAddition.push({\r\n                                        name: secondVal.name,\r\n                                        price: secondVal.price,\r\n                                        isChecked: false\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n\r\n                    if (foodListRadio[indfirstVal].length === 0) {\r\n                        newlistradioAddition.push({\r\n                            name: secondVal.name,\r\n                            price: secondVal.price,\r\n                            isChecked: false\r\n                        })\r\n                    }\r\n                })\r\n                editRadio.push({\r\n                    additionname: firstVal.additionname,\r\n                    isMandat: firstVal.isMandat,\r\n                    listaddition: newlistradioAddition\r\n                })\r\n                newlistradioAddition = []\r\n            })\r\n            let editTotalradioMandat = 0\r\n            let editArrayradioMandat = []\r\n            editRadio.forEach(valEdit => {\r\n                editArrayradioMandat.push(valEdit.isMandat)\r\n                if (valEdit.isMandat) {\r\n                    editTotalradioMandat++\r\n                }\r\n            })\r\n            if (editTotalradioMandat === totalRadioMandat) {\r\n                if (totalRadioMandat === 0) {\r\n                    dispatch({ type: 'MANDATRADIO', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATRADIO', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            }\r\n            setradioMatch(editArrayradioMandat)\r\n\r\n            setcheckboxData(editCheckbox)\r\n            setradioData(editRadio)\r\n            setupdateDataEdit(false)\r\n            setupdateEditChoice(true)\r\n        }\r\n    }, [radioVal, checkboxVal])\r\n\r\n    const checkboxArrData = () => {\r\n        return checkboxData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='checkbox-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname.toUpperCase().toLowerCase()}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Max {listname.maxchoice} items</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='box-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='checkBox-side'>\r\n                                                        <div className='check-box' />\r\n                                                        <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='box-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} id={listadd.name} type='checkbox' name={`${listname.additionname}${indlistadd}`} className={`CHECKDOT${indlistname}`} value={listadd.name} onChange={(e) => onCheckboxChange(e, indlistname, listadd.price, `CHECKDOT${indlistname}`, listname.maxchoice, listname.isMandat)} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='checkBox-side'>\r\n                                                    <div className='check-box' />\r\n                                                    <div className='check-box-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const radioArrData = () => {\r\n        return radioData.map((listname, indlistname) => {\r\n            return (\r\n                <div key={indlistname} className='radio-section'>\r\n                    <div className='title-section'>\r\n                        <div className='titleSelection'>{listname.additionname}</div>\r\n                        <div className='optionSelection'>{listname.isMandat ? 'Wajib' : 'Optional'}, Pilih Salah Satu</div>\r\n                    </div>\r\n\r\n                    <div className='boxContainer'>\r\n                        {\r\n                            listname.listaddition.map((listadd, indlistadd) => {\r\n                                return (\r\n                                    AllRedu.openMenuCart ?\r\n                                        updateEditChoice ?\r\n                                            <div key={indlistadd} className='radiobox-section'>\r\n                                                <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                                <label htmlFor={listadd.name}>\r\n                                                    <div className='radio-side'>\r\n                                                        <div className='radio-circle' />\r\n                                                        <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                    </div>\r\n\r\n                                                    <div className='additon-amount'>\r\n                                                        +{listadd.price}\r\n                                                    </div>\r\n                                                </label>\r\n                                            </div>\r\n                                            :\r\n                                            null\r\n                                        :\r\n                                        <div key={indlistadd} className='radiobox-section'>\r\n                                            <input disabled={AllRedu.validQTY === 0} onChange={(e) => onRadioChange(e, indlistname, listname.isMandat, listadd.price, indlistadd)} id={listadd.name} type='radio' name={listname.additionname} value={listadd.name} defaultChecked={listadd.isChecked} />\r\n                                            <label htmlFor={listadd.name}>\r\n                                                <div className='radio-side'>\r\n                                                    <div className='radio-circle' />\r\n                                                    <div className='radio-circle-name'>{listadd.name.toUpperCase().toLowerCase()}</div>\r\n                                                </div>\r\n\r\n                                                <div className='additon-amount'>\r\n                                                    +{listadd.price}\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const onCheckboxChange = (e, indexlistname, listprice, name, max, mandat) => {\r\n        var checkedChecks = document.querySelectorAll(`.${name}:checked`)\r\n        if (checkedChecks.length > max) {\r\n            e.target.checked = false\r\n        } else {\r\n            let checkMandat = [...checkboxMatch]\r\n            if (mandat) {\r\n                checkMandat[indexlistname] = mandat\r\n                setindexCheckMandat(indexlistname)\r\n            }\r\n\r\n            let checkboxArr = [...checkboxVal]\r\n            if (e.target.checked) {\r\n                checkboxArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n                setcheckboxVal(checkboxArr)\r\n                dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n            } else {\r\n                checkboxArr[indexlistname] = checkboxArr[indexlistname].filter(val => val.name !== e.target.value)\r\n                setcheckboxVal(checkboxArr)\r\n                let sizeArr = 0\r\n                checkboxArr.forEach((firstVal) => {\r\n                    firstVal.forEach((nestedVal) => {\r\n                        if (nestedVal.name) {\r\n                            sizeArr += 1\r\n                        }\r\n                    })\r\n                })\r\n                if (sizeArr > 0) {\r\n                    dispatch({ type: 'CHECKBOXES', payload: checkboxArr })\r\n                    if (checkboxArr[indexlistname].length === 0) {\r\n                        checkMandat[indexlistname] = false\r\n                        // dispatch({ type: 'MANDATCHECK', payload: false })\r\n\r\n                    }\r\n                } else {\r\n                    checkMandat[indexlistname] = false\r\n                    dispatch({ type: 'CHECKBOXES', payload: [] })\r\n                    // dispatch({ type: 'MANDATCHECK', payload: false })\r\n                }\r\n            }\r\n\r\n            // console.log(checkMandat);\r\n            let totalMandatCheck = 0\r\n            checkMandat.forEach(valMandat => {\r\n                if (valMandat) {\r\n                    totalMandatCheck++\r\n                }\r\n            })\r\n            if (totalMandatCheck === totalCheckMandat) {\r\n                if (totalCheckMandat === 0) {\r\n                    dispatch({ type: 'MANDATCHECK', payload: false })\r\n                } else {\r\n                    dispatch({ type: 'MANDATCHECK', payload: true })\r\n                }\r\n            } else {\r\n                dispatch({ type: 'MANDATCHECK', payload: false })\r\n            }\r\n            setcheckboxMatch(checkMandat)\r\n        }\r\n    }\r\n\r\n    const onRadioChange = (e, indexlistname, mandat, listprice, indexlistadd) => {\r\n        let radioMandat = [...radioMatch]\r\n        if (mandat) {\r\n            radioMandat[indexlistname] = mandat\r\n        }\r\n        // console.log(indexlistname, indexGroupRadioMandat, 'selectGroupRadio');\r\n        // console.log(indexlistadd, indexEachRadioMandat, 'selectEachRadio');\r\n        // if (indexlistname === indexGroupRadioMandat) {\r\n        //     if (indexlistadd === indexEachRadioMandat) {\r\n        //         console.log('yoo');\r\n        //         if (e.target.checked) {\r\n        //             e.target.checked = false\r\n        //         }\r\n        //     }\r\n        // }\r\n        let radiobuttonArr = [...radioVal]\r\n        radiobuttonArr[indexlistname].pop()\r\n        radiobuttonArr[indexlistname].push({ name: e.target.value, price: listprice, isChecked: true })\r\n        setradioVal(radiobuttonArr)\r\n        dispatch({ type: 'RADIOBUTTON', payload: radiobuttonArr })\r\n\r\n        // console.log(radioMandat);\r\n        let totalMandatRadio = 0\r\n        radioMandat.forEach(valMandat => {\r\n            if (valMandat) {\r\n                totalMandatRadio++\r\n            }\r\n        })\r\n        if (totalMandatRadio === totalRadioMandat) {\r\n            if (totalRadioMandat === 0) {\r\n                dispatch({ type: 'MANDATRADIO', payload: false })\r\n            } else {\r\n                dispatch({ type: 'MANDATRADIO', payload: true })\r\n            }\r\n        } else {\r\n            dispatch({ type: 'MANDATRADIO', payload: false })\r\n        }\r\n        setradioMatch(radioMandat)\r\n        // setindexGroupRadioMandat(indexlistname)\r\n        // setindexEachRadioMandat(indexlistadd)\r\n    }\r\n\r\n    const handleDecrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e && food.amount > 1) {\r\n                food.amount = food.amount - 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleIncrease = (e) => {\r\n        let updatedFoodlist = detailCategory.map((food) => {\r\n            if (food === e) {\r\n                food.amount = food.amount + 1;\r\n                props.ValidQty(food.amount)\r\n            }\r\n            return food;\r\n        })\r\n        setdetailCategory(updatedFoodlist)\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        return detailCategory.map((food, ind) => {\r\n            return (\r\n                <div key={ind} className='amount-box-inside'>\r\n                    <div className='minus-box' style={{ backgroundColor: AllRedu.validQTY > 1 ? '#4bb7ac' : '#767676' }} onClick={() => handleDecrease(food)}>\r\n                        <div className='minus-sym'>\r\n                            -\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='number-area'>\r\n                        {food.amount}\r\n                    </div>\r\n\r\n                    <div className='plus-box' onClick={() => handleIncrease(food)}>\r\n                        <div className='plus-sym'>\r\n                            +\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        setnote(e.target.value)\r\n    }\r\n\r\n    var thedata = {\r\n        detailCategory: detailCategory,\r\n        note: note ? note : '',\r\n        foodCategory: AllRedu.openMenuCart ? props.datas.foodCategory : AllRedu.foodCateg,\r\n        listcheckbox: checkboxVal,\r\n        listradio: radioVal\r\n    }\r\n    props.handleData(thedata)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isMobile ?\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className='menuSelection-layout'>\r\n                        {\r\n                            !AllRedu.buttonLoad ?\r\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Loader\r\n                                        type=\"ThreeDots\"\r\n                                        color=\"#4bb7ac\"\r\n                                        height={70}\r\n                                        width={70}\r\n                                    />\r\n                                </div>\r\n                                :\r\n                                <>\r\n                                    <div className='checkbox-layout'>\r\n                                        {checkboxArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='radio-layout'>\r\n                                        {radioArrData()}\r\n                                    </div>\r\n\r\n                                    <div className='amount-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Jumlah\r\n                                        </div>\r\n\r\n                                        <div className='amount-box'>\r\n                                            {handleAmount()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='note-section'>\r\n                                        <div className='titleSelection'>\r\n                                            Catatan\r\n                                        </div>\r\n\r\n                                        <div className='note-box'>\r\n                                            <textarea id=\"note\" placeholder={\"Tambahkan Catatanmu\"} defaultValue={props.datas.foodNote} className='note-area' onChange={handleNote} />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { ValidQty })(MenuSelection)","D:\\PIKAPP\\pikapp-frontend\\src\\Redux\\Actions\\ButtonAction.js",[],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":1,"column":17,"nodeType":"322","messageId":"323","endLine":1,"endColumn":26},{"ruleId":"320","severity":1,"message":"324","line":1,"column":28,"nodeType":"322","messageId":"323","endLine":1,"endColumn":36},{"ruleId":"320","severity":1,"message":"325","line":1,"column":28,"nodeType":"322","messageId":"323","endLine":1,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":31,"column":6,"nodeType":"328","endLine":31,"endColumn":8,"suggestions":"329"},{"ruleId":"326","severity":1,"message":"330","line":17,"column":8,"nodeType":"328","endLine":17,"endColumn":10,"suggestions":"331"},{"ruleId":"320","severity":1,"message":"321","line":1,"column":17,"nodeType":"322","messageId":"323","endLine":1,"endColumn":26},{"ruleId":"320","severity":1,"message":"325","line":1,"column":28,"nodeType":"322","messageId":"323","endLine":1,"endColumn":34},{"ruleId":"320","severity":1,"message":"332","line":5,"column":10,"nodeType":"322","messageId":"323","endLine":5,"endColumn":19},{"ruleId":"333","severity":1,"message":"334","line":406,"column":49,"nodeType":"335","messageId":"336","endLine":406,"endColumn":51},{"ruleId":"333","severity":1,"message":"334","line":484,"column":38,"nodeType":"335","messageId":"336","endLine":484,"endColumn":40},{"ruleId":"333","severity":1,"message":"334","line":569,"column":38,"nodeType":"335","messageId":"336","endLine":569,"endColumn":40},{"ruleId":"333","severity":1,"message":"334","line":654,"column":38,"nodeType":"335","messageId":"336","endLine":654,"endColumn":40},{"ruleId":"320","severity":1,"message":"337","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":16},{"ruleId":"320","severity":1,"message":"338","line":14,"column":8,"nodeType":"322","messageId":"323","endLine":14,"endColumn":20},{"ruleId":"320","severity":1,"message":"339","line":18,"column":8,"nodeType":"322","messageId":"323","endLine":18,"endColumn":20},{"ruleId":"320","severity":1,"message":"340","line":19,"column":8,"nodeType":"322","messageId":"323","endLine":19,"endColumn":16},{"ruleId":"320","severity":1,"message":"341","line":22,"column":8,"nodeType":"322","messageId":"323","endLine":22,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":248,"column":39,"nodeType":"344","messageId":"345","endLine":248,"endColumn":41},{"ruleId":"342","severity":1,"message":"343","line":278,"column":39,"nodeType":"344","messageId":"345","endLine":278,"endColumn":41},{"ruleId":"342","severity":1,"message":"343","line":324,"column":53,"nodeType":"344","messageId":"345","endLine":324,"endColumn":55},{"ruleId":"342","severity":1,"message":"343","line":330,"column":60,"nodeType":"344","messageId":"345","endLine":330,"endColumn":62},{"ruleId":"342","severity":1,"message":"343","line":345,"column":53,"nodeType":"344","messageId":"345","endLine":345,"endColumn":55},{"ruleId":"342","severity":1,"message":"343","line":351,"column":60,"nodeType":"344","messageId":"345","endLine":351,"endColumn":62},{"ruleId":"342","severity":1,"message":"343","line":385,"column":20,"nodeType":"344","messageId":"345","endLine":385,"endColumn":22},{"ruleId":"342","severity":1,"message":"343","line":399,"column":21,"nodeType":"344","messageId":"345","endLine":399,"endColumn":23},{"ruleId":"342","severity":1,"message":"343","line":822,"column":31,"nodeType":"344","messageId":"345","endLine":822,"endColumn":33},{"ruleId":"342","severity":1,"message":"343","line":145,"column":42,"nodeType":"344","messageId":"345","endLine":145,"endColumn":44},{"ruleId":"342","severity":1,"message":"343","line":147,"column":54,"nodeType":"344","messageId":"345","endLine":147,"endColumn":56},{"ruleId":"342","severity":1,"message":"343","line":310,"column":18,"nodeType":"344","messageId":"345","endLine":310,"endColumn":20},{"ruleId":"342","severity":1,"message":"343","line":322,"column":16,"nodeType":"344","messageId":"345","endLine":322,"endColumn":18},{"ruleId":"333","severity":1,"message":"346","line":818,"column":41,"nodeType":"335","messageId":"336","endLine":818,"endColumn":43},{"ruleId":"333","severity":1,"message":"334","line":875,"column":51,"nodeType":"335","messageId":"336","endLine":875,"endColumn":53},{"ruleId":"342","severity":1,"message":"343","line":88,"column":43,"nodeType":"344","messageId":"345","endLine":88,"endColumn":45},{"ruleId":"320","severity":1,"message":"347","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":17},{"ruleId":"320","severity":1,"message":"348","line":2,"column":19,"nodeType":"322","messageId":"323","endLine":2,"endColumn":25},{"ruleId":"320","severity":1,"message":"349","line":2,"column":27,"nodeType":"322","messageId":"323","endLine":2,"endColumn":35},{"ruleId":"320","severity":1,"message":"350","line":3,"column":16,"nodeType":"322","messageId":"323","endLine":3,"endColumn":22},{"ruleId":"320","severity":1,"message":"351","line":4,"column":8,"nodeType":"322","messageId":"323","endLine":4,"endColumn":14},{"ruleId":"320","severity":1,"message":"352","line":5,"column":8,"nodeType":"322","messageId":"323","endLine":5,"endColumn":13},{"ruleId":"320","severity":1,"message":"353","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":15},{"ruleId":"320","severity":1,"message":"354","line":8,"column":8,"nodeType":"322","messageId":"323","endLine":8,"endColumn":14},{"ruleId":"320","severity":1,"message":"355","line":9,"column":10,"nodeType":"322","messageId":"323","endLine":9,"endColumn":18},{"ruleId":"320","severity":1,"message":"356","line":11,"column":8,"nodeType":"322","messageId":"323","endLine":11,"endColumn":12},{"ruleId":"342","severity":1,"message":"357","line":45,"column":24,"nodeType":"344","messageId":"345","endLine":45,"endColumn":26},{"ruleId":"320","severity":1,"message":"358","line":9,"column":8,"nodeType":"322","messageId":"323","endLine":9,"endColumn":18},{"ruleId":"320","severity":1,"message":"359","line":15,"column":11,"nodeType":"322","messageId":"323","endLine":15,"endColumn":19},{"ruleId":"320","severity":1,"message":"360","line":19,"column":12,"nodeType":"322","messageId":"323","endLine":19,"endColumn":21},{"ruleId":"320","severity":1,"message":"361","line":19,"column":23,"nodeType":"322","messageId":"323","endLine":19,"endColumn":35},{"ruleId":"320","severity":1,"message":"362","line":30,"column":11,"nodeType":"322","messageId":"323","endLine":30,"endColumn":20},{"ruleId":"363","severity":1,"message":"364","line":11,"column":1,"nodeType":"365","endLine":30,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":18,"column":1,"nodeType":"365","endLine":55,"endColumn":2},{"ruleId":"320","severity":1,"message":"366","line":5,"column":5,"nodeType":"322","messageId":"323","endLine":5,"endColumn":15},{"ruleId":"320","severity":1,"message":"367","line":9,"column":5,"nodeType":"322","messageId":"323","endLine":9,"endColumn":17},{"ruleId":"320","severity":1,"message":"368","line":12,"column":5,"nodeType":"322","messageId":"323","endLine":12,"endColumn":18},{"ruleId":"320","severity":1,"message":"358","line":8,"column":8,"nodeType":"322","messageId":"323","endLine":8,"endColumn":18},{"ruleId":"320","severity":1,"message":"369","line":9,"column":8,"nodeType":"322","messageId":"323","endLine":9,"endColumn":21},{"ruleId":"320","severity":1,"message":"359","line":19,"column":11,"nodeType":"322","messageId":"323","endLine":19,"endColumn":19},{"ruleId":"320","severity":1,"message":"361","line":28,"column":23,"nodeType":"322","messageId":"323","endLine":28,"endColumn":35},{"ruleId":"320","severity":1,"message":"370","line":29,"column":12,"nodeType":"322","messageId":"323","endLine":29,"endColumn":26},{"ruleId":"320","severity":1,"message":"371","line":29,"column":28,"nodeType":"322","messageId":"323","endLine":29,"endColumn":45},{"ruleId":"320","severity":1,"message":"372","line":31,"column":12,"nodeType":"322","messageId":"323","endLine":31,"endColumn":15},{"ruleId":"320","severity":1,"message":"373","line":31,"column":17,"nodeType":"322","messageId":"323","endLine":31,"endColumn":23},{"ruleId":"320","severity":1,"message":"374","line":32,"column":12,"nodeType":"322","messageId":"323","endLine":32,"endColumn":15},{"ruleId":"320","severity":1,"message":"375","line":32,"column":17,"nodeType":"322","messageId":"323","endLine":32,"endColumn":23},{"ruleId":"320","severity":1,"message":"362","line":48,"column":11,"nodeType":"322","messageId":"323","endLine":48,"endColumn":20},{"ruleId":"320","severity":1,"message":"376","line":64,"column":11,"nodeType":"322","messageId":"323","endLine":64,"endColumn":26},{"ruleId":"320","severity":1,"message":"377","line":107,"column":11,"nodeType":"322","messageId":"323","endLine":107,"endColumn":24},{"ruleId":"320","severity":1,"message":"341","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":16},{"ruleId":"320","severity":1,"message":"378","line":203,"column":11,"nodeType":"322","messageId":"323","endLine":203,"endColumn":26},{"ruleId":"320","severity":1,"message":"324","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":24},{"ruleId":"320","severity":1,"message":"356","line":12,"column":8,"nodeType":"322","messageId":"323","endLine":12,"endColumn":12},{"ruleId":"320","severity":1,"message":"360","line":22,"column":12,"nodeType":"322","messageId":"323","endLine":22,"endColumn":21},{"ruleId":"320","severity":1,"message":"361","line":22,"column":23,"nodeType":"322","messageId":"323","endLine":22,"endColumn":35},{"ruleId":"320","severity":1,"message":"362","line":34,"column":11,"nodeType":"322","messageId":"323","endLine":34,"endColumn":20},{"ruleId":"333","severity":1,"message":"334","line":32,"column":66,"nodeType":"335","messageId":"336","endLine":32,"endColumn":68},{"ruleId":"320","severity":1,"message":"379","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":17},{"ruleId":"320","severity":1,"message":"380","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":18},{"ruleId":"320","severity":1,"message":"360","line":20,"column":12,"nodeType":"322","messageId":"323","endLine":20,"endColumn":21},{"ruleId":"320","severity":1,"message":"361","line":20,"column":23,"nodeType":"322","messageId":"323","endLine":20,"endColumn":35},{"ruleId":"320","severity":1,"message":"362","line":30,"column":11,"nodeType":"322","messageId":"323","endLine":30,"endColumn":20},{"ruleId":"320","severity":1,"message":"379","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":17},{"ruleId":"320","severity":1,"message":"380","line":7,"column":8,"nodeType":"322","messageId":"323","endLine":7,"endColumn":18},{"ruleId":"320","severity":1,"message":"381","line":11,"column":8,"nodeType":"322","messageId":"323","endLine":11,"endColumn":19},{"ruleId":"320","severity":1,"message":"382","line":21,"column":12,"nodeType":"322","messageId":"323","endLine":21,"endColumn":23},{"ruleId":"320","severity":1,"message":"383","line":21,"column":25,"nodeType":"322","messageId":"323","endLine":21,"endColumn":33},{"ruleId":"320","severity":1,"message":"360","line":24,"column":12,"nodeType":"322","messageId":"323","endLine":24,"endColumn":21},{"ruleId":"320","severity":1,"message":"361","line":24,"column":23,"nodeType":"322","messageId":"323","endLine":24,"endColumn":35},{"ruleId":"320","severity":1,"message":"362","line":36,"column":11,"nodeType":"322","messageId":"323","endLine":36,"endColumn":20},{"ruleId":"320","severity":1,"message":"384","line":157,"column":17,"nodeType":"322","messageId":"323","endLine":157,"endColumn":25},{"ruleId":"320","severity":1,"message":"385","line":158,"column":17,"nodeType":"322","messageId":"323","endLine":158,"endColumn":26},{"ruleId":"320","severity":1,"message":"379","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":17},{"ruleId":"320","severity":1,"message":"380","line":7,"column":8,"nodeType":"322","messageId":"323","endLine":7,"endColumn":18},{"ruleId":"320","severity":1,"message":"386","line":16,"column":8,"nodeType":"322","messageId":"323","endLine":16,"endColumn":14},{"ruleId":"320","severity":1,"message":"360","line":27,"column":12,"nodeType":"322","messageId":"323","endLine":27,"endColumn":21},{"ruleId":"320","severity":1,"message":"361","line":27,"column":23,"nodeType":"322","messageId":"323","endLine":27,"endColumn":35},{"ruleId":"320","severity":1,"message":"387","line":29,"column":12,"nodeType":"322","messageId":"323","endLine":29,"endColumn":23},{"ruleId":"320","severity":1,"message":"362","line":41,"column":11,"nodeType":"322","messageId":"323","endLine":41,"endColumn":20},{"ruleId":"320","severity":1,"message":"384","line":124,"column":21,"nodeType":"322","messageId":"323","endLine":124,"endColumn":29},{"ruleId":"320","severity":1,"message":"385","line":125,"column":21,"nodeType":"322","messageId":"323","endLine":125,"endColumn":30},{"ruleId":"320","severity":1,"message":"388","line":153,"column":11,"nodeType":"322","messageId":"323","endLine":153,"endColumn":31},{"ruleId":"320","severity":1,"message":"389","line":170,"column":11,"nodeType":"322","messageId":"323","endLine":170,"endColumn":30},{"ruleId":"320","severity":1,"message":"379","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":17},{"ruleId":"320","severity":1,"message":"380","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":18},{"ruleId":"320","severity":1,"message":"358","line":8,"column":8,"nodeType":"322","messageId":"323","endLine":8,"endColumn":18},{"ruleId":"320","severity":1,"message":"369","line":9,"column":8,"nodeType":"322","messageId":"323","endLine":9,"endColumn":21},{"ruleId":"320","severity":1,"message":"360","line":19,"column":12,"nodeType":"322","messageId":"323","endLine":19,"endColumn":21},{"ruleId":"320","severity":1,"message":"361","line":19,"column":23,"nodeType":"322","messageId":"323","endLine":19,"endColumn":35},{"ruleId":"320","severity":1,"message":"362","line":29,"column":11,"nodeType":"322","messageId":"323","endLine":29,"endColumn":20},{"ruleId":"320","severity":1,"message":"377","line":61,"column":11,"nodeType":"322","messageId":"323","endLine":61,"endColumn":24},{"ruleId":"320","severity":1,"message":"390","line":37,"column":12,"nodeType":"322","messageId":"323","endLine":37,"endColumn":28},{"ruleId":"326","severity":1,"message":"391","line":199,"column":8,"nodeType":"328","endLine":199,"endColumn":10,"suggestions":"392"},{"ruleId":"326","severity":1,"message":"393","line":339,"column":8,"nodeType":"328","endLine":339,"endColumn":31,"suggestions":"394"},"no-native-reassign",["395"],"no-negated-in-lhs",["396"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.address'. Either include them or remove the dependency array.","ArrayExpression",["397"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'props.match.params.address', and 'props.match.params.notab'. Either include them or remove the dependency array.",["398"],"'useParams' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'cartIcon' is defined but never used.","'Productimage' is defined but never used.","'OpenHourIcon' is defined but never used.","'CoinIcon' is defined but never used.","'StarIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'address' is defined but never used.","'secret' is defined but never used.","'clientId' is defined but never used.","'uuidV4' is defined but never used.","'sha256' is defined but never used.","'Axios' is defined but never used.","'Cookies' is defined but never used.","'Loader' is defined but never used.","'Redirect' is defined but never used.","'Swal' is defined but never used.","Expected '!==' and instead saw '!='.","'PikaButton' is defined but never used.","'AuthRedu' is assigned a value but never used.","'isCaptcha' is assigned a value but never used.","'setIsCaptcha' is assigned a value but never used.","'backModal' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'PikaTextField' is defined but never used.","'captchaCounter' is assigned a value but never used.","'setCaptchaCounter' is assigned a value but never used.","'lat' is assigned a value but never used.","'setLat' is assigned a value but never used.","'lon' is assigned a value but never used.","'setLon' is assigned a value but never used.","'showLoginDialog' is assigned a value but never used.","'showPinDialog' is assigned a value but never used.","'closeAuthDialog' is assigned a value but never used.","'closeLogo' is defined but never used.","'pikappLogo' is defined but never used.","'LoginDialog' is defined but never used.","'loginDialog' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'Button' is defined but never used.","'isLoginStep' is assigned a value but never used.","'showConfirmPinDialog' is assigned a value but never used.","'showForgotPinDialog' is assigned a value but never used.","'indexCheckMandat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'dispatch', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["399"],"React Hook useEffect has missing dependencies: 'AllRedu.openMenuCart', 'checkboxData', 'dispatch', 'props.datas.foodListCheckbox', 'props.datas.foodListRadio', 'radioData', 'totalCheckMandat', 'totalRadioMandat', and 'updateDataEdit'. Either include them or remove the dependency array.",["400"],"no-global-assign","no-unsafe-negation",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},"Update the dependencies array to be: [dispatch, props.match.params.address]",{"range":"409","text":"410"},"Update the dependencies array to be: [dispatch, history, props.match.params.address, props.match.params.notab]",{"range":"411","text":"412"},"Update the dependencies array to be: [AllRedu.openMenuCart, dispatch, props]",{"range":"413","text":"414"},"Update the dependencies array to be: [radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]",{"range":"415","text":"416"},[1074,1076],"[dispatch, props.match.params.address]",[610,612],"[dispatch, history, props.match.params.address, props.match.params.notab]",[8852,8854],"[AllRedu.openMenuCart, dispatch, props]",[15058,15081],"[radioVal, checkboxVal, AllRedu.openMenuCart, updateDataEdit, props.datas.foodListCheckbox, props.datas.foodListRadio, checkboxData, totalCheckMandat, radioData, totalRadioMandat, dispatch]"]