[{"D:\\PIKAPP\\pikapp-web\\src\\index.js":"1","D:\\PIKAPP\\pikapp-web\\src\\Master\\StoreLayout.js":"2","D:\\PIKAPP\\pikapp-web\\src\\Master\\StatusLayout.js":"3","D:\\PIKAPP\\pikapp-web\\src\\Master\\AuthLayout.js":"4","D:\\PIKAPP\\pikapp-web\\src\\Master\\CartLayout.js":"5","D:\\PIKAPP\\pikapp-web\\src\\Master\\ProductLayout.js":"6","D:\\PIKAPP\\pikapp-web\\src\\Master\\ProfileLayout.js":"7","D:\\PIKAPP\\pikapp-web\\src\\Master\\MainNavigation.js":"8","D:\\PIKAPP\\pikapp-web\\src\\Master\\DetailNavigation.js":"9","D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js":"10","D:\\PIKAPP\\pikapp-web\\src\\View\\Status\\StatusView.js":"11","D:\\PIKAPP\\pikapp-web\\src\\View\\Cart\\CartView.js":"12","D:\\PIKAPP\\pikapp-web\\src\\View\\Store\\StoreView.js":"13","D:\\PIKAPP\\pikapp-web\\src\\View\\Auth\\FormView.js":"14","D:\\PIKAPP\\pikapp-web\\src\\View\\Main\\JumbotronView.js":"15","D:\\PIKAPP\\pikapp-web\\src\\View\\Product\\ProductView.js":"16","D:\\PIKAPP\\pikapp-web\\src\\View\\Profile\\ProfileView.js":"17","D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js":"18","D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\PikaModal.js":"19","D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\CartModal.js":"20","D:\\PIKAPP\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js":"21","D:\\PIKAPP\\pikapp-web\\src\\Component\\Button\\PikaButton.js":"22","D:\\PIKAPP\\pikapp-web\\src\\Master\\MerchantQR.js":"23","D:\\PIKAPP\\pikapp-web\\src\\Master\\ProductLayoutDev.js":"24","D:\\PIKAPP\\pikapp-web\\src\\View\\Product\\ProductViewDev.js":"25"},{"size":1876,"mtime":1613964497290,"results":"26","hashOfConfig":"27"},{"size":650,"mtime":1613639488753,"results":"28","hashOfConfig":"27"},{"size":865,"mtime":1612764764407,"results":"29","hashOfConfig":"27"},{"size":1283,"mtime":1613964497275,"results":"30","hashOfConfig":"27"},{"size":1002,"mtime":1613964497276,"results":"31","hashOfConfig":"27"},{"size":657,"mtime":1612974647029,"results":"32","hashOfConfig":"27"},{"size":660,"mtime":1613704716159,"results":"33","hashOfConfig":"27"},{"size":1089,"mtime":1612764764403,"results":"34","hashOfConfig":"27"},{"size":803,"mtime":1612764764402,"results":"35","hashOfConfig":"27"},{"size":80,"mtime":1613624163792,"results":"36","hashOfConfig":"27"},{"size":25071,"mtime":1612764764423,"results":"37","hashOfConfig":"27"},{"size":16857,"mtime":1613964497283,"results":"38","hashOfConfig":"27"},{"size":7560,"mtime":1614076389879,"results":"39","hashOfConfig":"27"},{"size":12973,"mtime":1614075325620,"results":"40","hashOfConfig":"27"},{"size":831,"mtime":1612767468534,"results":"41","hashOfConfig":"27"},{"size":15313,"mtime":1613017864447,"results":"42","hashOfConfig":"27"},{"size":5909,"mtime":1613704800802,"results":"43","hashOfConfig":"27"},{"size":785,"mtime":1613964497180,"results":"44","hashOfConfig":"27"},{"size":4960,"mtime":1612764764394,"results":"45","hashOfConfig":"27"},{"size":2200,"mtime":1613964497274,"results":"46","hashOfConfig":"27"},{"size":415,"mtime":1612764764396,"results":"47","hashOfConfig":"27"},{"size":298,"mtime":1612764764390,"results":"48","hashOfConfig":"27"},{"size":4091,"mtime":1614075625306,"results":"49","hashOfConfig":"27"},{"size":392,"mtime":1613964497279,"results":"50","hashOfConfig":"27"},{"size":28230,"mtime":1614050741576,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"gu5h4g",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PIKAPP\\pikapp-web\\src\\index.js",[],["108","109"],"D:\\PIKAPP\\pikapp-web\\src\\Master\\StoreLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\StatusLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\AuthLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\CartLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\ProductLayout.js",[],["110","111"],"D:\\PIKAPP\\pikapp-web\\src\\Master\\ProfileLayout.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\MainNavigation.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\DetailNavigation.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\ColorConstant.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Status\\StatusView.js",["112","113","114","115"],"import React from \"react\";\r\nimport { Row, Col, Nav, Card, Modal } from \"react-bootstrap\";\r\nimport unpaidIcon from \"../../Asset/Icon/unpaid_status.png\";\r\nimport unpaidActiveIcon from \"../../Asset/Icon/unpaid_active_status.png\";\r\nimport packIcon from \"../../Asset/Icon/pack_status.png\";\r\nimport packActiveIcon from \"../../Asset/Icon/pack_active_status.png\";\r\nimport sendIcon from \"../../Asset/Icon/send_status.png\";\r\nimport sendActiveIcon from \"../../Asset/Icon/send_active_status.png\";\r\nimport reviewIcon from \"../../Asset/Icon/review_status.png\";\r\nimport reviewActiveIcon from \"../../Asset/Icon/review_active_status.png\";\r\nimport placeholderIcon from \"../../Asset/Icon/placeholder_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport categoryFoodIcon from \"../../Asset/Icon/category_food_icon.png\";\r\nimport pickupStatusIcon from \"../../Asset/Icon/pickup_status_icon.png\";\r\nimport cashierStatusIcon from \"../../Asset/Icon/cashier_icon.png\"\r\nimport ovoIcon from \"../../Asset/Icon/ovo_icon.png\";\r\nimport { PikaButton } from \"../../Component/Button/PikaButton\";\r\nimport Axios from \"axios\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport { address, clientId, secret } from \"../../Asset/Constant/APIConstant\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport class StatusView extends React.Component {\r\n  state = {\r\n    showModal: false,\r\n    activeTab: 1,\r\n    data: [\r\n      {\r\n        title: \"\",\r\n        distance: \"\",\r\n        quantity: \"\",\r\n        status: \"\",\r\n        biz_type: \"\",\r\n        payment: \"\",\r\n        transactionId: \"\",\r\n        transactionTime: \"\",\r\n      },\r\n    ],\r\n    currentModal: {\r\n      transactionId: \"\",\r\n      transactionTime:\"\",\r\n      storeName: \"Store\",\r\n      storeLocation: \"Location\",\r\n      storeDistance: \"Distance\",\r\n      status: \"Status\",\r\n      payment: \"Cash\",\r\n      biz_type: \"\",\r\n      food: [\r\n        {\r\n          productId: \"\",\r\n          name: \"\",\r\n          price: 0,\r\n          image: \"\",\r\n          note: \"\",\r\n          quantity: 1,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n  handleDetail(transId) {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/\" + transId + \"/txn-detail/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var resultModal = {...this.currentModal}\r\n        resultModal.transactionId = results.transaction_id\r\n        resultModal.transactionTime = results.transaction_time\r\n        resultModal.storeName = results.merchant_name\r\n        resultModal.storeDistance = \"\"\r\n        resultModal.storeLocation = \"\"\r\n        resultModal.status = results.status\r\n        resultModal.biz_type = results.biz_type\r\n        resultModal.payment = results.payment_with\r\n        resultModal.food = []\r\n        results.detail_products.forEach((product) => {\r\n          resultModal.food.push({\r\n            name: product.product_name,\r\n            price: product.price,\r\n            quantity: product.qty,\r\n            image: product.image,\r\n            note: product.notes\r\n          })\r\n        })\r\n        this.setState({\r\n          currentModal: resultModal\r\n        })\r\n      })\r\n      .catch((err) => {\r\n      });\r\n      \r\n    this.setModal(true);\r\n  }\r\n\r\n  handleSelect(tabIndex) {\r\n    this.setState({ activeTab: tabIndex });\r\n  }\r\n\r\n  componentDidMount() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n    Axios(address + \"txn/v1/txn-history/\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-request-id\": uuid,\r\n        \"x-request-timestamp\": date,\r\n        \"x-client-id\": clientId,\r\n        \"x-signature\": signature,\r\n        \"token\": auth.token,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        var results = res.data.results;\r\n        var stateData = {...this.state}\r\n        stateData.data.pop()\r\n        results.forEach((result) => {\r\n          stateData.data.push({\r\n            title: result.merchant_name,\r\n            distance: \"\",\r\n            quantity: result.total_product,\r\n            status: result.status,\r\n            biz_type: result.biz_type,\r\n            payment: result.payment_with,\r\n            transactionId: result.transaction_id,\r\n            transactionTime: result.transaction_time,\r\n          })\r\n        })\r\n        this.setState({data: stateData.data});\r\n      })\r\n      .catch((err) => {\r\n      });\r\n    // var state = { ...this.state };\r\n    // state.data.pop();\r\n    // state.data.push({\r\n    //   title: \"Food1\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food4\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"unpaid\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food2\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"pick\",\r\n    // });\r\n    // state.data.push({\r\n    //   title: \"Food3\",\r\n    //   distance: \"dist1\",\r\n    //   quantity: \"qty1\",\r\n    //   status: \"send\",\r\n    // });\r\n    // this.setState({ data: state.data });\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let modalList = this.state.currentModal.food;\r\n\r\n    let modalListView = modalList.map((data) => {\r\n      return (\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={placeholderIcon} class=\"statusFoodIcon\" alt=\"food icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodname\">{data.name}</p>\r\n                <p class=\"statusFoodPrice\">\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(data.price)}\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusFoodQuantity\">{data.quantity}x</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p class=\"statusFoodNote\">Catatan: {data.note}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    });\r\n    let currentTotal = 0;\r\n    modalList.forEach((data) => {\r\n      currentTotal = currentTotal + data.price * data.quantity;\r\n    });\r\n    if (this.state.showModal === true) {\r\n      let payImage;\r\n      let payLabel;\r\n      if(this.state.currentModal.payment === \"PAY_BY_CASHIER\") {\r\n        payImage = cashierStatusIcon;\r\n        payLabel = \"Cashier\"\r\n      } else if(this.state.currentModal.payment === \"WALLET\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Cash\"\r\n      } else if(this.state.currentModal.payment === \"VA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"Virtual\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_OVO\") {\r\n        payImage = ovoIcon;\r\n        payLabel = \"OVO\"\r\n      } else if(this.state.currentModal.payment === \"WALLET_DANA\") {\r\n        payImage = placeholderIcon;\r\n        payLabel = \"DANA\"\r\n      } \r\n      modal = (\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              <p class=\"statusNoteLabel\">No Pesanan.</p>\r\n              <p class=\"statusNoteHeader\">{this.state.currentModal.transactionId}</p>\r\n              <p class=\"statusNoteLabel\">{this.state.currentModal.transactionTime}</p>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={categoryFoodIcon} class=\"statusStoreIcon\" alt=\"category icon\"/>\r\n              </Col>\r\n              <Col>\r\n                <p class=\"statusStoreName\">\r\n                  {this.state.currentModal.storeName}\r\n                </p>\r\n                <p class=\"statusStoreLabel\">store location</p>\r\n                <p class=\"statusStoreLocation\">\r\n                  {this.state.currentModal.storeLocation}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={2} md={1}>\r\n                <img src={pickupStatusIcon} class=\"statusStoreStatusIcon\"  alt=\"pickup status\"/>\r\n              </Col>\r\n              <Col>\r\n                <span class=\"statusStoreLabel\">status: </span>\r\n                <span class=\"statusStoreStatus\">\r\n                  {this.state.currentModal.status}\r\n                </span>\r\n                <span class=\"statusStoreDistance\">\r\n                  {this.state.currentModal.storeDistance}\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStorePaymentLabel\">Metode Pembayaran</p>\r\n                <img src={payImage} class=\"statusFoodIcon\" alt=\"status icon\"></img>\r\n                <span class=\"statusStorePayment\">\r\n                      {payLabel}\r\n                    </span>\r\n              </Col>\r\n            </Row>\r\n            {modalListView}\r\n            <Row>\r\n              <Col>\r\n                <p class=\"statusStoreTotal\">Total Pembayaran</p>\r\n              </Col>\r\n              <Col>\r\n                {Intl.NumberFormat(\"id-ID\", {\r\n                  style: \"currency\",\r\n                  currency: \"IDR\",\r\n                }).format(currentTotal)}\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer />\r\n        </Modal>\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n    let notPaidImage;\r\n    let contentView;\r\n\r\n    let currentState = this.state.activeTab;\r\n    if (currentState === 1) {\r\n      notPaidImage = unpaidActiveIcon;\r\n      contentView = this.state.data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = cashierStatusIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"OPEN\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      notPaidImage = unpaidIcon;\r\n    }\r\n\r\n    let packImage;\r\n    if (currentState === 2) {\r\n      packImage = packActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"PAID\" || value.status === \"MERCHANT_CONFIRM\" || value.status === \"CUSTOMER_ACCEPTED\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt=\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      packImage = packIcon;\r\n    }\r\n\r\n    let sendImage;\r\n    if (currentState === 3) {\r\n      sendImage = sendActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        let bizImage;\r\n        let bizLabel;\r\n        let payImage;\r\n        let payLabel;\r\n        if(value.payment === \"PAY_BY_CASHIER\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cashier\"\r\n        } else if(value.payment === \"WALLET\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Cash\"\r\n        } else if(value.payment === \"VA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"Virtual\"\r\n        } else if(value.payment === \"WALLET_OVO\") {\r\n          payImage = ovoIcon;\r\n          payLabel = \"OVO\"\r\n        } else if(value.payment === \"WALLET_DANA\") {\r\n          payImage = placeholderIcon;\r\n          payLabel = \"DANA\"\r\n        } \r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if(value.biz_type === \"DINE_IN\") {\r\n          bizImage = dineinIcon\r\n          bizLabel = \"Dine in\"\r\n        } else if(value.biz_type === \"TAKE_AWAY\") {\r\n          bizImage = takeawayIcon;\r\n          bizLabel = \"Take away\"\r\n        }\r\n        if (value.status === \"DELIVER\" || value.status === \"ON_PROCESS\") {\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt=\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt =\"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      sendImage = sendIcon;\r\n    }\r\n\r\n    let reviewImage;\r\n    if (currentState === 4) {\r\n      reviewImage = reviewActiveIcon;\r\n      let data = this.state.data;\r\n      contentView = data.map((value) => {\r\n        if (value.status === \"CLOSE\" || value.status === \"FINALIZE\") {\r\n          let bizImage;\r\n          let bizLabel;\r\n          let payImage;\r\n          let payLabel;\r\n          if(value.payment === \"PAY_BY_CASHIER\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cashier\"\r\n          } else if(value.payment === \"WALLET\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Cash\"\r\n          } else if(value.payment === \"VA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"Virtual\"\r\n          } else if(value.payment === \"WALLET_OVO\") {\r\n            payImage = ovoIcon;\r\n            payLabel = \"OVO\"\r\n          } else if(value.payment === \"WALLET_DANA\") {\r\n            payImage = placeholderIcon;\r\n            payLabel = \"DANA\"\r\n          } \r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          if(value.biz_type === \"DINE_IN\") {\r\n            bizImage = dineinIcon\r\n            bizLabel = \"Dine in\"\r\n          } else if(value.biz_type === \"TAKE_AWAY\") {\r\n            bizImage = takeawayIcon;\r\n            bizLabel = \"Take away\"\r\n          }\r\n          return (\r\n            <Row className={\"statusCard\"}>\r\n              <Col xs={1} md={1} />\r\n              <Col>\r\n                <Card>\r\n                  <Row className={\"statusCard\"}>\r\n                    <Col xs={1} md={1}>\r\n                      <img\r\n                        src={categoryFoodIcon}\r\n                        class=\"statusIcon\"\r\n                        alt={\"statusIcon\"}\r\n                      ></img>\r\n                    </Col>\r\n                    <Col>\r\n                      <p class=\"statusTitle\">{value.title}</p>\r\n                      <p class=\"statusDistance\">{value.distance}</p>\r\n                      <p class=\"statusQty\">{value.quantity} produk</p>\r\n                      <PikaButton\r\n                        title={\"Detail\"}\r\n                        buttonStyle={\"statusPika\"}\r\n                        handleClick={() => this.handleDetail(value.transactionId)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className={\"statusLeftImg\"}>\r\n                      <img src={bizImage} alt =\"biz icon\"></img>\r\n                      <span class=\"statusLeftText\">{bizLabel}</span>\r\n                    </Col>\r\n                    <Col className={\"statusRightImg\"}>\r\n                      <img src={payImage} alt = \"pay icon\"></img>\r\n                      <span class=\"statusRightText\">{payLabel}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n              <Col xs={1} md={1} />\r\n            </Row>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      reviewImage = reviewIcon;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Nav variant=\"tabs\" defaultActiveKey={\"not-paid\"}>\r\n          <Nav.Item>\r\n            <Nav.Link\r\n              eventKey={\"not-paid\"}\r\n              onClick={() => this.handleSelect(1)}\r\n            >\r\n              <Row>\r\n                <img\r\n                  src={notPaidImage}\r\n                  alt={\"unpaid\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Belum Bayar</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"pack\"} onClick={() => this.handleSelect(2)}>\r\n              <Row>\r\n                <img src={packImage} alt={\"pack\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Dikemas</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"send\"} onClick={() => this.handleSelect(3)}>\r\n              <Row>\r\n                <img src={sendImage} alt={\"send\"} className={\"statusTabIcon\"} />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Siap / Dikirim</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey={\"review\"} onClick={() => this.handleSelect(4)}>\r\n              <Row>\r\n                <img\r\n                  src={reviewImage}\r\n                  alt={\"review\"}\r\n                  className={\"statusTabIcon\"}\r\n                />\r\n              </Row>\r\n              <Row className={\"statusTabTitle\"}>Beri Penilaian</Row>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {contentView}\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-web\\src\\View\\Cart\\CartView.js",["116","117","118","119"],"import React from \"react\";\r\nimport { Row, Col, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport chevronImage from \"../../Asset/Icon/chevron_right.png\";\r\nimport removeIcon from \"../../Asset/Icon/remove_icon.png\";\r\nimport storeIcon from \"../../Asset/Icon/store_icon.png\";\r\nimport checklistIcon from \"../../Asset/Icon/checklist_icon.png\";\r\nimport frontIcon from \"../../Asset/Icon/front_icon.png\";\r\nimport cashierIcon from \"../../Asset/Icon/cashier_icon.png\";\r\nimport dineinIcon from \"../../Asset/Icon/dinein_icon.png\";\r\nimport takeawayIcon from \"../../Asset/Icon/takeaway_icon.png\";\r\nimport { CartModal } from \"../../Component/Modal/CartModal\";\r\nimport { cart } from \"../../index.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { address, secret, clientId } from \"../../Asset/Constant/APIConstant\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport sha256 from \"crypto-js/hmac-sha256\";\r\nimport Axios from \"axios\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nexport class CartView extends React.Component {\r\n  state = {\r\n    notable: \"\",\r\n    showModal: false,\r\n    currentModalTitle: \"\",\r\n    paymentOption: \"Pembayaran di kasir\",\r\n    paymentType: \"PAY_BY_CASHIER\",\r\n    biz_type: this.props.noTable.table !== \"\"? this.props.noTable.table > 0 ? \"DINE_IN\" : \"TAKE_AWAY\" : \"DINE_IN\",\r\n    eat_type: this.props.noTable.table !== \"\"? this.props.noTable.table > 0 ? \"Makan di tempat\" : \"Bungkus / Takeaway\" : \"Makan di tempat\",\r\n    currentModal: [\r\n      {\r\n        image: \"\",\r\n        option: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n  //  console.log(); \r\n  }\r\n\r\n  handleDetail(data) {\r\n    if (data === \"eat-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Cara makan anda?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"dineIn\",\r\n            option: \"Makan di tempat\",\r\n          },\r\n          {\r\n            image: \"takeaway\",\r\n            option: \"Bungkus / Takeaway\",\r\n          },\r\n        ],\r\n      });\r\n    } else if (data === \"pay-method\") {\r\n      this.setState({ showModal: true });\r\n      this.setState({ currentModalTitle: \"Bayar pakai apa?\" });\r\n      this.setState({\r\n        currentModal: [\r\n          {\r\n            image: \"cashier\",\r\n            option: \"Pembayaran di kasir\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  setModal(isShow) {\r\n    this.setState({ showModal: isShow });\r\n  }\r\n\r\n  handleDecrease(e) {\r\n    if (e.foodAmount > 1) {\r\n      e.foodAmount -= 1;\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleIncrease(e) {\r\n    e.foodAmount += 1;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDelete(e) {\r\n    let filteredCart;\r\n    cart.forEach((store) => {\r\n      let filteredStore = store.food.filter((data) => {\r\n        if(data.productId === e.productId) {\r\n          if(data.foodNote !== e.foodNote) {\r\n            return data\r\n          }\r\n        } else {\r\n          return data\r\n        }\r\n      });\r\n      store.food = filteredStore;\r\n      if(store.food.length === 0) {\r\n        filteredCart = cart.filter((filterStore) => {\r\n          return filterStore.mid !== store.mid;\r\n        });\r\n        localStorage.setItem(\"cart\",JSON.stringify(filteredCart))\r\n        let addedMerchants = []\r\n        filteredCart.forEach((cart) => {\r\n          addedMerchants.push(cart.mid)\r\n          Cookies.set(\"addedMerchants\", addedMerchants)\r\n        })\r\n        if(addedMerchants.length < 2) {\r\n          window.location.href = Cookies.get(\"lastProduct\")\r\n        } else {\r\n          window.location.reload()\r\n        }\r\n      }\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n  handleOption = (data) => {\r\n    if(this.props.noTable.table !== \"\") {\r\n      if(data == 1) {\r\n        let newUrl = window.location.search\r\n        let changeTable = newUrl.slice(0, -1)\r\n        changeTable += 0\r\n        window.location.href = changeTable \r\n      } else {\r\n        let value = Cookies.get(\"lastProduct\")\r\n        console.log(value);\r\n        let getPrevTable = value.charAt(value.length - 1)\r\n        let newUrl = window.location.search\r\n        let changeTable = newUrl.slice(0, -1)\r\n        changeTable += getPrevTable\r\n        window.location.href = changeTable \r\n      }\r\n    }\r\n    if(this.state.currentModalTitle === \"Cara makan anda?\") {\r\n      if(data === 0 || this.props.noTable.table > 0) {\r\n        this.setState({biz_type: \"DINE_IN\"})\r\n        this.setState({eat_type: \"Makan di tempat\"})\r\n      } else {\r\n        this.setState({biz_type: \"TAKE_AWAY\"})\r\n        this.setState({eat_type: \"Bungkus / Takeaway\"})\r\n      }\r\n    } else if (this.state.currentModalTitle === \"Bayar pakai apa?\") {\r\n      if(data === 0) {\r\n        this.setState({paymentType: \"PAY_BY_CASHIER\"})\r\n        this.setState({paymentOption: \"Pembayaran di kasir\"})\r\n      }\r\n    }\r\n  }\r\n  handlePayment = () => {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let totalAmount = 0;\r\n    let data = cart;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n\r\n    let merchantIds = JSON.parse(Cookies.get(\"addedMerchants\"))\r\n    merchantIds = merchantIds.filter((merchant) => {\r\n      return merchant !== \"\"\r\n    })\r\n    let uuid = uuidV4();\r\n    uuid = uuid.replaceAll(\"-\", \"\");\r\n    const date = new Date().toISOString();\r\n    let signature = sha256(clientId + \":\" + auth.email + \":\" + secret + \":\" + date, secret)\r\n\r\n    merchantIds.forEach((merchant) => {\r\n      var requestData = {\r\n        products: [{\r\n          product_id :\"\",\r\n          notes: \"\",\r\n          qty: 0\r\n        }],\r\n        payment_with: this.state.paymentType,\r\n        mid: merchant,\r\n        prices: totalAmount,\r\n        biz_type: this.state.biz_type,\r\n        table_no: \"1\"\r\n      }\r\n      requestData.products.pop()\r\n      cart.forEach((merchant) => {\r\n        let addedMerchants = Cookies.get(\"addedMerchants\")\r\n        if(addedMerchants.includes(merchant.mid)) {\r\n          merchant.food.forEach((data) => {\r\n            if(data.productId !== \"\") {\r\n              requestData.products.push({\r\n                product_id: data.productId,\r\n                notes: data.foodNote,\r\n                qty: data.foodAmount,\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n      \r\n      Axios(address + \"/txn/v1/txn-post/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-request-id\": uuid,\r\n          \"x-request-timestamp\": date,\r\n          \"x-client-id\": clientId,\r\n          \"x-signature\": signature,\r\n          \"token\": auth.token,\r\n        },\r\n        method: \"POST\",\r\n        data: requestData,\r\n      })\r\n      .then((res) => {\r\n        localStorage.removeItem(\"cart\")\r\n        alert(\"Pembelian telah berhasil.\")\r\n        window.location.href = \"/status\"\r\n      })\r\n      .catch((err) => {\r\n        if(err.response.data !== undefined) {\r\n          alert(err.response.data.err_message)\r\n        }\r\n      });\r\n    })\r\n  };\r\n\r\n  render() {\r\n    var auth = {\r\n      isLogged: false,\r\n      token: \"\",\r\n      new_event: true,\r\n      recommendation_status: false,\r\n      email: \"\",\r\n    };\r\n    if(Cookies.get(\"auth\") !== undefined) {\r\n      auth = JSON.parse(Cookies.get(\"auth\"))\r\n    }\r\n    if(auth.isLogged === false) {\r\n      var lastLink = { value: window.location.href}\r\n      Cookies.set(\"lastLink\", lastLink,{ expires: 1})\r\n      window.location.href = \"/login\"\r\n    }\r\n    let modal;\r\n    let paymentButton;\r\n    if (auth.isLoggedIn === false) {\r\n      paymentButton = (\r\n        <Link to={\"/login\"} className={\"iconButton\"}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </Link>\r\n      );\r\n    } else {\r\n      paymentButton = (\r\n        <button className={\"iconButton\"} onClick={() => this.handlePayment()}>\r\n          <img src={checklistIcon} alt={\"checklist\"} /> Bayar{\" \"}\r\n          <img src={frontIcon} alt={\"checklist\"} />\r\n        </button>\r\n      );\r\n    }\r\n    if (this.state.showModal === true) {\r\n      modal = (\r\n        <CartModal\r\n          isShow={() => this.setModal(true)}\r\n          onHide={() => this.setModal(false)}\r\n          title={this.state.currentModalTitle}\r\n          detailOptions={this.state.currentModal}\r\n          handleData = {this.handleOption}\r\n          notable = {this.props.noTable}\r\n        />\r\n      );\r\n    } else {\r\n      modal = <></>;\r\n    }\r\n\r\n    let data = cart;\r\n    let totalAmount = 0;\r\n    data.forEach((store) => {\r\n      store.food.forEach((food) => {\r\n        totalAmount = totalAmount + food.foodPrice * food.foodAmount;\r\n      });\r\n    });\r\n    let storeList = data.filter((store) => {\r\n      if (store.mid !== \"\") {\r\n        return store;\r\n      }\r\n    });\r\n\r\n    let contentView = storeList.map((store) => {\r\n      let itemListView = data.map((cartData) => {\r\n        if(cartData.mid === store.mid) {\r\n          return store.food.map((food) => {\r\n            return (\r\n              <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col xs={3} md={1}>\r\n                <img\r\n                  src={food.foodImage}\r\n                  alt={\"food\"}\r\n                  className={\"cartFoodImage\"}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContentFood\"}>{food.foodName}</p>\r\n                    <p className={\"cartContentPrice\"}>Catatan:</p>\r\n                    <p className={\"cartContentPrice\"}>{food.foodNote}</p>\r\n                    <p className={\"cartContentPrice\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(food.foodPrice)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <button\r\n                      className={\"iconButton\"}\r\n                      onClick={() => this.handleDelete(food)}\r\n                    >\r\n                      <img src={removeIcon} alt={\"remove icon\"} />\r\n                    </button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <ButtonGroup className={\"cartModalButtonGroup\"}>\r\n                      <Button\r\n                        onClick={() => this.handleDecrease(food)}\r\n                        variant=\"cartModalMiniButton\"\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <Form.Control\r\n                        value={food.foodAmount}\r\n                        className=\"cartModalField\"\r\n                        disabled\r\n                      ></Form.Control>\r\n                      <Button\r\n                        onClick={() => this.handleIncrease(food)}\r\n                        variant=\"cartModalMiniButton\"\r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            )\r\n          })\r\n        }\r\n      });\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col>\r\n              <p className={\"cartTitle\"}>{store.storeName}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={0} md={3} />\r\n            <Col xs={1} md={1}>\r\n              <img src={storeIcon} className={\"cartIcon\"} alt={\"store icon\"} />\r\n            </Col>\r\n            <Col>\r\n              <Row>\r\n                <Col>\r\n                  <p className={\"cartNote\"}>Store Location</p>\r\n                  <p className={\"cartTitle\"}>{store.storeDesc}</p>\r\n                  <p className={\"cartNote\"}>\r\n                    <b>{store.storeDistance}</b>\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={2} md={3}>\r\n              <button className={\"iconButton\"}>\r\n                <img\r\n                  src={chevronImage}\r\n                  onClick={() => this.handleDetail()}\r\n                  alt={\"chevron right\"}\r\n                />\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n          {itemListView}\r\n        </>\r\n      );\r\n    });\r\n\r\n    let paymentImage;\r\n    let eatImage;\r\n    if(this.state.biz_type === \"DINE_IN\") {\r\n      eatImage = dineinIcon;\r\n    } else if (this.state.biz_type === \"TAKE_AWAY\") {\r\n      eatImage = takeawayIcon;\r\n    }\r\n    if(this.state.paymentType === \"PAY_BY_CASHIER\") {\r\n      paymentImage = cashierIcon\r\n    }\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n          <Row>\r\n            <Col><p className={\"cartTitle\"}>Pilih cara makan anda</p></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs ={1} md={1}>\r\n              <img src={eatImage} class=\"cartModalImage\" alt=\"icon\" />\r\n            </Col>\r\n            <Col>{this.state.eat_type}</Col>\r\n          </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"eat-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={0} md={3} />\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Bayar pakai apa?</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs ={1} md={1}>\r\n                <img src={paymentImage} class=\"cartModalImage\" alt=\"icon\" />\r\n              </Col>\r\n              <Col>\r\n                {this.state.paymentOption}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={2} md={3}>\r\n            <button className={\"iconButton\"}>\r\n              <img\r\n                src={chevronImage}\r\n                onClick={() => this.handleDetail(\"pay-method\")}\r\n                alt={\"chevron right\"}\r\n              />\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n        {contentView}\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Rincian Pembayaran</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={0} md={3} />\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Total harga barang:</p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>Diskon:</p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(totalAmount)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <p className={\"cartContent\"}>\r\n                      {Intl.NumberFormat(\"id-ID\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      }).format(0)}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className={\"cartPayment\"}>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartTitle\"}>Total Belanja Kamu</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={1} md={3} />\r\n              <Col>\r\n                <p className={\"cartFinalPrice\"}>\r\n                  {Intl.NumberFormat(\"id-ID\", {\r\n                    style: \"currency\",\r\n                    currency: \"IDR\",\r\n                  }).format(totalAmount)}\r\n                </p>\r\n              </Col>\r\n              <Col className={\"cartFinalButton\"}>{paymentButton}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {modal}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-web\\src\\View\\Store\\StoreView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Auth\\FormView.js",["120"],"D:\\PIKAPP\\pikapp-web\\src\\View\\Main\\JumbotronView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Product\\ProductView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\View\\Profile\\ProfileView.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Asset\\Constant\\APIConstant.js",["121","122","123"],"export const address = \"https://dev-api.pikapp.id/\";\r\n// export const address = \"https://api.pikapp.id/\";\r\n\r\nvar secretDev = \"21f6fc80-cfdb-11ea-87d0-0242ac130003\"\r\nvar secretProd = \"qaah4zq3cutmr36kqvq95qj5hax8f9ku25fv\"\r\nexport const secret = secretDev;\r\n\r\nvar clientIdDev = \"abf0e2a9-e9ee-440f-8563-94481c64b797\"\r\nvar clientIdProd = \"d4aummjdkbzdsd46vygjvcy235ywmhkm\"\r\nexport const clientId = clientIdDev;\r\n// googleKeyDev need to activate billing which later should pay after expired\r\nvar googleKeyProd = \"AIzaSyBMG_JpxmoPEBH6fpveaowU2vkWYrZEw1Y\"\r\nvar googleKeyDev = \"AIzaSyAikqroR5x4BrRv5Yj-tWgUcqvjEKUysh4\"\r\nexport const googleKey = googleKeyDev;\r\n\r\nexport const jwtSecret = \"Er3lzchUa489bdlg35PCaGMKk2YzflBHCMue2jIAy9nFENvokE0JUbwytMFSvrajK8gYDttMdvzWw0OBRydt7pXfAAd1DTxWvE0Hc\"\r\n","D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\PikaModal.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Component\\Modal\\CartModal.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Component\\TextField\\PikaTextField.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Component\\Button\\PikaButton.js",[],"D:\\PIKAPP\\pikapp-web\\src\\Master\\MerchantQR.js",["124","125","126","127","128","129"],"D:\\PIKAPP\\pikapp-web\\src\\Master\\ProductLayoutDev.js",["130"],"import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n// import { ProductView } from \"../View/Product/ProductView\";\r\nimport { ProductView } from \"../View/Product/ProductViewDev\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className='mainLayout'>\r\n            <ProductView />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","D:\\PIKAPP\\pikapp-web\\src\\View\\Product\\ProductViewDev.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"160","replacedBy":"164"},{"ruleId":"162","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":345,"column":49,"nodeType":"168","messageId":"169","endLine":345,"endColumn":51},{"ruleId":"166","severity":1,"message":"167","line":423,"column":38,"nodeType":"168","messageId":"169","endLine":423,"endColumn":40},{"ruleId":"166","severity":1,"message":"167","line":508,"column":38,"nodeType":"168","messageId":"169","endLine":508,"endColumn":40},{"ruleId":"166","severity":1,"message":"167","line":593,"column":38,"nodeType":"168","messageId":"169","endLine":593,"endColumn":40},{"ruleId":"166","severity":1,"message":"170","line":90,"column":52,"nodeType":"168","messageId":"169","endLine":90,"endColumn":54},{"ruleId":"171","severity":1,"message":"172","line":121,"column":15,"nodeType":"173","messageId":"174","endLine":121,"endColumn":17},{"ruleId":"166","severity":1,"message":"170","line":293,"column":41,"nodeType":"168","messageId":"169","endLine":293,"endColumn":43},{"ruleId":"166","severity":1,"message":"167","line":300,"column":46,"nodeType":"168","messageId":"169","endLine":300,"endColumn":48},{"ruleId":"175","severity":1,"message":"176","line":6,"column":29,"nodeType":"177","messageId":"178","endLine":6,"endColumn":38},{"ruleId":"175","severity":1,"message":"179","line":5,"column":5,"nodeType":"177","messageId":"178","endLine":5,"endColumn":15},{"ruleId":"175","severity":1,"message":"180","line":9,"column":5,"nodeType":"177","messageId":"178","endLine":9,"endColumn":17},{"ruleId":"175","severity":1,"message":"181","line":12,"column":5,"nodeType":"177","messageId":"178","endLine":12,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":4,"column":29,"nodeType":"177","messageId":"178","endLine":4,"endColumn":38},{"ruleId":"175","severity":1,"message":"182","line":10,"column":20,"nodeType":"177","messageId":"178","endLine":10,"endColumn":31},{"ruleId":"175","severity":1,"message":"183","line":22,"column":10,"nodeType":"177","messageId":"178","endLine":22,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":35,"column":6,"nodeType":"186","endLine":35,"endColumn":8,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"172","line":49,"column":29,"nodeType":"173","messageId":"174","endLine":49,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":87,"column":32,"nodeType":"173","messageId":"174","endLine":87,"endColumn":34},{"ruleId":"175","severity":1,"message":"188","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":22},{"ruleId":"175","severity":1,"message":"189","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":13},{"ruleId":"175","severity":1,"message":"190","line":4,"column":15,"nodeType":"177","messageId":"178","endLine":4,"endColumn":18},{"ruleId":"175","severity":1,"message":"191","line":4,"column":20,"nodeType":"177","messageId":"178","endLine":4,"endColumn":25},{"ruleId":"175","severity":1,"message":"192","line":4,"column":27,"nodeType":"177","messageId":"178","endLine":4,"endColumn":31},{"ruleId":"175","severity":1,"message":"193","line":4,"column":33,"nodeType":"177","messageId":"178","endLine":4,"endColumn":37},{"ruleId":"175","severity":1,"message":"194","line":4,"column":39,"nodeType":"177","messageId":"178","endLine":4,"endColumn":42},{"ruleId":"175","severity":1,"message":"195","line":4,"column":44,"nodeType":"177","messageId":"178","endLine":4,"endColumn":53},{"ruleId":"175","severity":1,"message":"196","line":5,"column":10,"nodeType":"177","messageId":"178","endLine":5,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":175,"column":29,"nodeType":"173","messageId":"174","endLine":175,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":176,"column":35,"nodeType":"173","messageId":"174","endLine":176,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":200,"column":19,"nodeType":"173","messageId":"174","endLine":200,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":214,"column":20,"nodeType":"173","messageId":"174","endLine":214,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":411,"column":32,"nodeType":"173","messageId":"174","endLine":411,"endColumn":34},{"ruleId":"166","severity":1,"message":"167","line":458,"column":47,"nodeType":"168","messageId":"169","endLine":458,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":467,"column":19,"nodeType":"199","endLine":467,"endColumn":140},{"ruleId":"197","severity":1,"message":"198","line":473,"column":23,"nodeType":"199","endLine":473,"endColumn":74},{"ruleId":"171","severity":1,"message":"172","line":593,"column":40,"nodeType":"173","messageId":"174","endLine":593,"endColumn":42},{"ruleId":"197","severity":1,"message":"198","line":594,"column":15,"nodeType":"199","endLine":594,"endColumn":93},{"ruleId":"197","severity":1,"message":"198","line":596,"column":15,"nodeType":"199","endLine":596,"endColumn":94},{"ruleId":"197","severity":1,"message":"198","line":603,"column":29,"nodeType":"199","endLine":603,"endColumn":82},{"ruleId":"197","severity":1,"message":"198","line":613,"column":29,"nodeType":"199","endLine":613,"endColumn":78},{"ruleId":"197","severity":1,"message":"198","line":627,"column":31,"nodeType":"199","endLine":627,"endColumn":122},{"ruleId":"197","severity":1,"message":"198","line":638,"column":41,"nodeType":"199","endLine":638,"endColumn":84},{"ruleId":"197","severity":1,"message":"198","line":648,"column":37,"nodeType":"199","endLine":648,"endColumn":89},{"ruleId":"197","severity":1,"message":"198","line":658,"column":33,"nodeType":"199","endLine":658,"endColumn":84},{"ruleId":"197","severity":1,"message":"198","line":668,"column":33,"nodeType":"199","endLine":668,"endColumn":76},{"ruleId":"197","severity":1,"message":"198","line":678,"column":33,"nodeType":"199","endLine":678,"endColumn":84},{"ruleId":"197","severity":1,"message":"198","line":695,"column":29,"nodeType":"199","endLine":695,"endColumn":74},{"ruleId":"197","severity":1,"message":"198","line":744,"column":15,"nodeType":"199","endLine":744,"endColumn":62},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],["200"],["201"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a value to be returned at the end of arrow function.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'googleKey' is defined but never used.","Identifier","unusedVar","'secretProd' is assigned a value but never used.","'clientIdProd' is assigned a value but never used.","'googleKeyProd' is assigned a value but never used.","'setmerchant' is assigned a value but never used.","'longlat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.coords'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'MainNavigation' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Image' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Container' is defined but never used.","'PikaButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [props.coords]",{"range":"205","text":"206"},[1040,1042],"[props.coords]"]